<?php

use App\Block;
use App\Category;
use App\Course;
use App\Lesson;
use Illuminate\Database\Seeder;
//use CoursesCreate;


class CoursesSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $categories = ['Математика', 'Программирование', 'Экономика'];
        foreach ($categories as $c) {
            Category::create([
                'name' => $c
            ]);
        }

        $course = Course::Create([
            'name' => 'Алгебра',
            'description' => 'Очень важный курс для настоящих героев!',
            'image' => 'algebra.jpg',
            'category_id' => 1,
            'active' => true,
            'user_id' => 1
        ]);

        $names = ['Комплексные числа', 'Группы'];
        $blocks = [];

        foreach ($names as $k => $n) {
            $blocks[] = Block::Create([
                'course_id' => $course->id,
                'name' => $n,
                'active' => true,
                'sort' => $k
            ]);
        }

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Понятие и представление комплексного числа',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '### Понятие комплексного числа.

**Комплексным числом** $z$ называется выражение вида $z=x+iy,\space{}x,y\in{R},\space{i}=\sqrt{-1},\space{i}^2=-1,\space{i}$ - мнимая единица.

$x=Re(z)$ - действительная часть комплексного числа.
$y=Im(z)$ - мнимая часть комплексного числа.

Если $x=0$, то число $z=0+iy=iy$, называется чисто мнимым.
Если $y=0$, то число $z=x+i*0=x$, называется действительным.

$C=\lbrace{x+iy|x,y\in{R},\space{i}=\sqrt{-1}}\rbrace$ - поле комплексных чисел.

Пусть $z_1=x_1+iy_1$ и $z_2=x_2+iy_2$ - комплексные числа, тогда:

1) $z_1=z_2\iff{}Re(z_1)=Re(z_2)\And{}Im(z_1)=Im(z_2)$.
2) $z_1=0\iff{}Re(z_1)=Im(z_1)=0$.

Два комплексных числа $z=x+iy$ и $\overline{z}=x-iy$, отличающиеся только знаком мнимой части называют **сопряженными**.

Комплексное число $z=x+iy$ можно изобразить на плоскости $xOy$ точкой $M(x,y)$ и наоборот каждой точке $M(x,y)$ плоскости $xOy$ соответствует комплексное число $z=x+iy$. Плоскость, на которой изображаются комплексные числа называется **комплексной плоскостью**.

Точкам, лежащим на ось $Ox$ соответствуют действительные числа, на $Oy$ - мнимые числа. $Ox$ - действительная ось. $Oy$ - мнимая ось.

### Формы записи комплексного числа.

1) Алгебраическая $z=x+iy$.
2) Тригонометрическая $z=r(cos\varphi+isin\varphi)$
3) Показательная $z=re^{i\varphi}$, $e^{i\varphi}=cos\varphi+isin\varphi$ (формула Эйлера)
  
### Тригонометрическое представление комплексного числа.
Длина вектора $\overrightarrow{OM}$ называется **модулем** комплексного числа и обозначается $|z|=r=\sqrt{x^2+y^2}$

Угол между вектором $\overrightarrow{OM}$ и положительным направлением оси $Ox$ называется **аргументом** комплексного числа и обозначается $Arg(z)$ или $\varphi$.
  
Выразимм из прямоугольного треугольника координаты точки $M(x,y)$ через модуль и аргумент комплексного числа.

$sin(\varphi)=\frac{y}{r}\implies{y}=r\sin(\varphi)$
$cos(\varphi)=\frac{x}{r}\implies{x}=r\cos(\varphi)$

Тогда $z=x+iy=rcos(\varphi)+irsin(\varphi)=r(cos(\varphi)+isin(\varphi)),\space{r}=\sqrt{x^2+y^2}$

$Arg(z)$ определяется с точностью до слагаемого $2\pi{k},k\in{Z}:\space{Arg(z)}=arg(z)+2\pi{k}$, где $arg(z)$ - главное значение аргумента, $arg(z)\in{(-\pi,\pi]\lor{[0,2\pi)}}$

  ->$arg(z)=\begin{cases}\arctg\frac{y}{x},z\in{1,4}\space\text{четверти}\\\pi+\arctg\frac{y}{x},z\in{2}\space\text{четверти}\\\-\pi+\arctg\frac{y}{x},z\in{3}\space\text{четверти}\end{cases}$<-
',
            'examples' => ''
        ]);

        $questions = [
            [
                'q' => 'Формы записи комплексного числа',
                'a' => [
                    'Тригонометрическая',
                    'Геометрическая',
                    'Изометрическая',
                    'Логическая',
                    'Алгебраическая',
                    'Показательная'
                ],
                'c' => [true, false, false, false, true, true]
            ],
            [
                'q' => 'В какой форме записано комплексное число $z=x+iy$',
                't' => 'test_one',
                'a' => [
                    'Тригонометрическая',
                    'Алгебраическая',
                    'Показательная'
                ],
                'c' => [false, true, false]
            ],
            [
                'q' => 'В какой форме записано комплексное число $z=re^{i\varphi}$',
                't' => 'test_one',
                'a' => [
                    'Тригонометрическая',
                    'Алгебраическая',
                    'Показательная'
                ],
                'c' => [false, false, true]
            ],
            [
                'q' => 'В какой форме записано комплексное число $z=r(\cos(\varphi)+isin(\varphi))$',
                't' => 'test_one',
                'a' => [
                    'Тригонометрическая',
                    'Алгебраическая',
                    'Показательная'
                ],
                'c' => [true, false, false]
            ],
            [
                'q' => 'Чему равна действительная часть комплексного числа $z=5+6*i$',
                't' => 'test_one',
                'a' => [
                    '5',
                    '-5',
                    '6',
                    '-6',
                    '$6*i$',
                    '$-6*i$'
                ],
                'c' => [true, false, false, false, false, false]
            ],
            [
                'q' => 'Чему равна мнимая часть комплексного числа $z=5+6*i$',
                't' => 'test_one',
                'a' => [
                    '5',
                    '-5',
                    '6',
                    '-6',
                    '$6*i$',
                    '$-6*i$'
                ],
                'c' => [false, false, true, false, false, false]
            ],
            [
                'q' => 'Чему равна действительная часть комплексного числа $z=2(cos(-\frac{5\pi}{6})+isin(-\frac{5\pi}{6}))$',
                't' => 'test_one',
                'a' => [
                    '1',
                    '-1',
                    '$\sqrt{3}$',
                    '$-\sqrt{3}$'
                ],
                'c' => [false, false, false, true]
            ],
            [
                'q' => 'Чему равна мнимая часть комплексного числа $z=2(cos(-\frac{5\pi}{6})+isin(-\frac{5\pi}{6}))$',
                't' => 'test_one',
                'a' => [
                    '1',
                    '-1',
                    '$\sqrt{3}$',
                    '$-\sqrt{3}$'
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Найдите модуль комплексного числа $z=-\sqrt{35}-i$',
                'a' => '6',
                't' => 'task'
            ],
            [
                'q' => 'Найдите модуль комплексного числа $z=4(\cos(\frac{\pi}{2})+i\sin(\frac{\pi}{2}))$',
                'a' => '4',
                't' => 'task'
            ],
            [
                'q' => 'Найдите алгебраическое представление комплексного числа $z=4(\cos(\frac{\pi}{2})+i\sin(\frac{\pi}{2}))$',
                'a' => '4i',
                't' => 'task'
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Действия над комплексными числами',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Пусть $z_1=x_1+iy_1$ и $z_2=x_2+iy_2$ - комплексные числа, определим алгебраические операции, справедливые для этих чисел.

### Сложение

$z_1+z_2=(x_1+iy_1)+(x_2+iy_2)=(x_1+x_2)+i(y_1+y_2)$

### Вычитание

$z_1-z_2=(x_1+iy_1)-(x_2+iy_2)=(x_1-x_2)+i(y_1-y_2)$

Заметим, что модуль разности $z_1$ и $z_2$ $d=|z_1-z_2|=\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}$ есть расстояние между точками $z_1$ и $z_2$.

### Умножение

1) В алгебраической форме:
	$z_1z_2=(x_1+iy_1)(x_2+iy_2)=x_1x_2+ix_1y_2+iy_1x_2-y_1y_2=(x_1x_2-y_1y_2)+i(x_1y_2+y_1x_2)$
2) В тригонометрической форме:
<br/>
	->$\begin{aligned}z_1z_2=&r_1(\cos(\varphi_1)+isin(\varphi_1))r_2(\cos(\varphi_2)+isin(\varphi_2))\\\=&r_1r_2(\cos(\varphi_1)\cos(\varphi_2)+i\cos(\varphi_1)\sin(\varphi_2)+i\cos(\varphi_2)\sin(\varphi_1)-\sin(\varphi_1)\sin(\varphi_2))\\\=&r_1r_2((\cos(\varphi_1)\cos(\varphi_2)-\sin(\varphi_1)\sin(\varphi_2))+i(\cos(\varphi_1)\sin(\varphi_2)+\cos(\varphi_2)\sin(\varphi_1))\\\=&r_1r_2(\cos(\varphi_1+\varphi_2)+i\sin(\varphi_1+\varphi_2))\end{aligned}$<-
  
### Деление

1) В алгебраической форме:

$\frac{z_1}{z_2}=\frac{x_1+iy_1}{x_2+iy_2}=\frac{(x_1+iy_1)(x_2-iy_2)}{(x_2+iy_2)(x_2-iy_2)}=\frac{(x_1x_2+y_1y_2)+i(y_1x_2-x_1y_2)}{x_2^2+y_2^2}=\frac{x_1x_2+y_1y_2}{x_2^2+y_2^2}+i\frac{y_1x_2-x_1y_2}{x_2^2+y_2^2}$

2) В тригонометрической форме:

$\frac{z_1}{z_2}=\frac{r_1(\cos(\varphi_1)+isin(\varphi_1))}{r_2(\cos(\varphi_2)+isin(\varphi_2))}=\frac{r_1(\cos(\varphi_1)+isin(\varphi_1))(\cos(\varphi_2)-isin(\varphi_2))}{r_2(\cos(\varphi_2)+isin(\varphi_2))(\cos(\varphi_2)-isin(\varphi_2))}=\frac{\cos(\varphi_1-\varphi_2)+i\sin(\varphi_1-\varphi_2)}{r_2(\cos^2(\varphi_2)+\sin^2(\varphi_2))}=\frac{r_1}{r_2}(\cos(\varphi_1-\varphi_2)+i\sin(\varphi_1-\varphi_2))$

### Возведение в целую степень

$z^n=r^n(\cos(n\varphi)+i\sin(n\varphi))$ - формула Муавра

*Доказательство:* индукция по n
1) База: при n=2, получаем верное тождество.
2) Шаг: Пусть равенство справедливо для n-1, покажем что оно справедливо для n,

->$\begin{aligned}z^n\\\&=z^{n-1}z\\\&=r^{n-1}(\cos((n-1)\varphi)+i\sin((n-1)\varphi))r(\cos(\varphi)+i\sin(\varphi))\\\&=r^{n-1+1}(\cos(n\varphi+\varphi)+i\sin(n\varphi+\varphi))\\\&=r^n(\cos(n\varphi)+i\sin(n\varphi))\end{aligned}$<-

### Извлечение корня

$\sqrt[n]{z}=\sqrt[n]{\cos(\varphi)+i\sin(\varphi)}=\sqrt[n]{r}(\cos(\frac{\varphi+2\pi{k}}{n})+i\sin(\frac{\varphi+2\pi{k}}{n})),\space{k}=\overline{0,n-1}$

*Доказательство:*
Пусть $\sqrt[n]{z}=w$, тогда $z=w^n$

Пусть $z=r(\cos(\varphi)+i\sin(\varphi)),\space{w}=t(\cos(\psi)+i\sin(\psi))$, тогда

$r(\cos(\varphi)+i\sin(\varphi))=t^n(\cos(n\psi)+i\sin(n\psi))$, 

$\begin{cases}t^n=r\\\n\psi=\varphi+2\pi{k},k\in{Z}\end{cases},\space\begin{cases}t=\sqrt[n]{r}\\\psi=\frac{\varphi+2\pi{k}}{n}\end{cases}$, 

Таким образом $\sqrt[n]{z}=\sqrt[n]{r}(\cos(\frac{\varphi+2\pi{k}}{n})+i\sin(\frac{\varphi+2\pi{k}}{n})),\space{k}=\overline{0,n-1}$

$k=\overline{0,n-1}$, так как дальше корни будут повторяться: $k=n\implies arg(\sqrt[n]{z})=\frac{\varphi+2\pi{n}}{n}=\frac{\varphi}{n}+2\pi$, но это эквивалентно тому что $k=0$, так как период функций $cos(x)$ и $sin(x)$ равен $2\pi$.

### Сопряжение

Два комплексных числа $z=x+iy$ и $\overline{z}=x-iy$, отличающиеся только знаком мнимой части называют **сопряженными**.

**Свойства операции сопряжения:**

1. $\overline{z_1+z_2}=\overline{(x_1+x_2)+i(y_1+y_2)}=(x_1+x_2)-i(y_1+y_2)=(x_1-iy_1)+(x_2-iy_2)=\overline{z_1}+\overline{z_2}$

2. $\overline{z_1z_2}=\overline{(x_1x_2-y_1y_2)+i(x_1y_2+y_1x_2)}=(x_1x_2-y_1y_2)-i(x_1y_2+y_1x_2)=(x_1-iy_1)(x_2-iy_2)=\overline{z_1}\space\overline{z_2}$

3. Если $z=a+ib, b=0$, то $\overline{z}=z$. Отображение $f: R\to{C}: f(x)=x+0*i$, задаёт изоморфное вложение $R$ в $C$

4. Пусть $f(x)\in{R}[x]$, тогда $f(\overline{z})=\overline{f(z)}$
	 
	->$f(x)=a_nx^n+..+a_1x+a_0,\space{a}_i\in{R},i=\overline{0,n}$<br/>
  $\begin{aligned}&f(\overline{z})\\\&=a_n\overline{z^n}+..+a_1\overline{z}+a_0\\\&=\lbrace{\overline{a_i}=a_j}\rbrace\\\&=\overline{a_n}\space\overline{z^n}+..+\overline{a_1}\space\overline{z}+\overline{a_0}\\\&=\overline{a_nz^n}+..+\overline{a_1z}+a_0\\\&=\overline{a_nz^n+..+a_1z+a_0}\\\&=\overline{f(z)}\end{aligned}$<-
  
5. Если $z=a+ib$ - корень многочлена $f(x)\in{R[x]}$, то $\overline{z}=a-ib$, также корень $f(x)$.
	<br/>$f(\overline{z})=\overline{f(z)}=\overline{0}=0$'
        ]);

        $questions = [
            [
                'q' => 'Найдите координаты точки $M(x,y)$ плоскости $xOy$, соответствующей комплексному числу $w=z_1+z_2$, если $z_1=5+6i,\space{z}_2=7+2i$ (ответ запишите в виде $x,y$)',
                't' => 'task',
                'a' => '12,8'
            ],
            [
                'q' => 'Найдите координаты точки $M(x,y)$ плоскости $xOy$, соответствующей комплексному числу $w=z_1-z_2$, если $z_1=5+6i,\space{z}_2=7+2i$ (ответ запишите в виде $x,y$)',
                't' => 'task',
                'a' => '-2,4'
            ],
            [
                'q' => 'Найдите координаты точки $M(x,y)$ плоскости $xOy$, соответствующей комплексному числу $w=z_1z_2$, если $z_1=5+6i,\space{z}_2=7+2i$ (ответ запишите в виде $x,y$)',
                't' => 'task',
                'a' => '23,52'
            ],
            [
                'q' => 'Найдите координаты точки $M(x,y)$ плоскости $xOy$, соответствующей комплексному числу $w=\frac{z_1}{z_2}$, если $z_1=5+10i,\space{z}_2=1+5i$ (ответ запишите в виде $x,y$)',
                't' => 'task',
                'a' => '11,7'
            ],
            [
                'q' => 'Найдите координаты точки $M(x,y)$ плоскости $xOy$, соответствующей комплексному числу $w=z^5$, если $z=2(\cos(\frac{\pi}{10})+i\sin(\frac{\pi}{10}))$ (ответ запишите в виде $x,y$)',
                't' => 'task',
                'a' => '0,32'
            ],
            [
                'q' => 'Найдите координаты точек $M(x,y)$ плоскости $xOy$, соответствующей комплексным числам $w=\sqrt[4]{z}$, если $z=4(cos(\pi)+i\sin(\pi))$ (ответ запишите в виде $x,y$ для $k=0$)',
                't' => 'task',
                'a' => '1,1'
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Поле комплексных чисел',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => ''
        ]);

        $questions = [

        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Корни n-й степени из единицы',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Рассмотрим множество $C_n=\lbrace{z|z^n=1}\rbrace$

**Теорема**. $C_n$ - группа, относительно операции умножения.
*Доказательство:* 
1) $z_1,z_2\in{C}_n$, тогда $(z_1z_2)^n=z_1^nz_2^n=1*1=1\implies{}z_1z_2\in{C_n}$, т.е. $C_n$ замкнуто относительно умножения.
2) $1^n=1\in{C_n}$ - нейтральный элемент.
3)  Умножение комплекснх чисел ассоциативно.
4) $(z^{-1})^n=(z^n)^{-1}=1^{-1}=1$, т.е. $\forall{z}\in{C_n}\space\exists{z^{-1}}\in{C_n}$ - обратный элемент.

**Утверждение**. $|C_n|=n$.

*Доказательство:* 

Если $z\in{C_n}$, то по т.Безу $(x-z)|(x^n-1)\implies{x^n-1}=\displaystyle\prod_{z\in{C_n}}{(x-z)}$.
$deg(x^n-1)=n\implies$ справа $n$ множителей  $\implies\space|C_n|=n\qquad\checkmark$

Если $z\in{C_n},O(z)=m,$ то по т.Лагранжа $m|n$

$z\in{C_n}\implies{z}^n=1$, тогда $(z^m)^n=z^{mn}=(z^n)^m=1^m=1$

Тогда: $x^n-1=\displaystyle\prod_{z\in{C_n}}{(x-z)}=\displaystyle\prod_{d|n}{(\varphi_d(x))}, \varphi_d(x)=\displaystyle\prod_{d=O(z)}{(x-z)}$


$\sqrt[n]{1}=\sqrt[n]{1+0i}=\sqrt[n]{\cos(0)+i\sin(0)}=\cos(\frac{0+2\pi{k}}{n})+i\sin(\frac{0+2\pi{k}}{n}),k=\overline{0,n-1}$

Найдем расстояние от $\sqrt[n]{1}$ до начала координат.

$|\sqrt[n]{1}|=\sqrt{\cos^2(\varphi)+\sin^2(\varphi)}=1$, значит все корни $n$-й степени из 1 лежат на единичной окружности с центром в начале кординат.

$z=\sqrt[n]{1}\implies\overline{z}=\sqrt[n]{1}\implies$ все корни n-й степени из 1 вершины правильного n-угольника, вписанного в единичную окружность, одна из вершин которого в точке $(1,0)$, т.к. $1^n=1$

Пусть $\varepsilon=\cos(\frac{2\pi}{n})+i\sin(\frac{2\pi}{n})$, тогда $C_n=\lbrace{1,\varepsilon,\varepsilon^2,..,\varepsilon^{n-1}}\rbrace,\space\varepsilon^n=1$

Корень $t\in{C_n}$ называется **первообразным**, если $O(t)=n$. Следовательно $C_n=\lbrace{t^k|k=\overline{0,n-1}}\rbrace$.

**Утверждение**. $\varepsilon^m$ - первообразный корень n-й степени из 1 $\iff$ $n$ и $m$ - взаимно просты.

*Доказательство:* 
 $\implies:\space{}m=ak,n=bk,(a,b)=1$, тогда $(\varepsilon^{m})^b=(\varepsilon^{ak})^b=(\varepsilon^{bk})^a=(\varepsilon^n)^a=1^a=1\implies{O(\varepsilon^m)}=b\qquad\checkmark$
 $\impliedby:(m,n)=1\implies(\varepsilon^m)^n=(\varepsilon^n)^m=1^m=1\implies{O(\varepsilon^m)}=n$

**Утверждение**. Число первообразных корней n-й степени из 1 есть $\varphi(n)$, где $\varphi(n)$ - функция Эйлера.

*Доказательство:* '
        ]);

        $questions = [
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                'a' => [
                   '',
                   '',
                   '',
                   ''
                ],
                'c' => []
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Функции комплексного переменного',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '### Функци комплексного переменного.

Говорят, что на множестве $W\in{C}$ задана функция $w=f(z)$, если задано правило, по которому каждой точке $z\in{W}$ ставится в соответствие определенная точка $w\in{C}$ (в таком случае функция называется однозначной) либо совокупность точек $w\in{C}$ (в этом случае функция называется многозначной).

✔︎ $w=\overline{z},w=Re(z),w=Im(z)$ - однозначные функции
✔︎ $w=Arg(z)=arg(z)+2\pi{k},k\in{Z}$ - многозначная функция.

Если $z=x+iy,w=u+iv$, то задание функции $w=f(z)=f(x+iy)$ эквивалентно заданию двух действительных функций $u(x,y),v(x,y)$, так как $w=f(z)=f(x+iy)=u(x,y)+iv(x,y)$.

Если отображение $w=f(z),z\in{W}$, является взаимно-однозначным, то $f(z)$ называется **однолистной**. Если область определения функции $W$ можно разбить на несколько областей однолистности, то $f(z)$ называется **многолистной**.

### Элементарные функции комплексного переменного.

✦ **Линейная функция** $w=az+b,a,b\in{C},a\not=0,z\in{C}$.

**Утверждение**. Линейная функция является однолистой
$\blacktriangleright$  Очевидно, что линейная функция однозначна. Обратная к ней $z=\frac{1}{a}w-\frac{b}{a}$, также однозначна. Значит функция $w=az+b,a,b\in{C}$ является однолистной.

Рассмотрим функцию $t=az$. 

Так как $t=|a||z|(\cos(arg(a)+arg(z))+i\sin(arg(a)+arg(z))$, то $|t|=|a||z|,arg(t)=arg(a)+arg(z)$.

**Геометрический смысл** отображения $t=az$: $C$ растягивается в $|a|$ раз и поворачивается вокруг точки $z=0$ на угол $arg(a)$. А функция $f(z)=t+b$ сдвигает плоскость $t$ на вектор $b$. Таким образом линейная функция $w=az+b$ растягивает, поворачивает и сдвигает комплексную плоскость $C$.

✦ **Показательная функция** $w=e^z,z\in{C}$.

По определению  $e^z=e^x(\cos(y)+i\sin(y))\space\forall{z}=x+iy$.

При $x=0:\space{e}^{iy}=\cos(y)+i\sin(y)$ - формула Эйлера.

Любое комплексное число можно записать в виде $z=re^i\varphi$, где $r=|z|,\varphi=Arg(z)$ (Здесь используется формула Эйлера: $e^{i\varphi]=\cos(\varphi)+i\sin(\varphi)$)

**Свойства:**
1) При $y=0\quad{}e^z=e^x$.
2) $e^{z_1}e^{z_2}=e^{z_1+z_2}$
	$\begin{aligned}\blacktriangleright\quad{e}^{z_1}e^{z_2}\\\&=e^{x_1}(\cos(y_1)+i\sin(y_1))e^{x_2}(\cos(y_2)+i\sin(y_2))\\\&=e^{x_1+x_2}(\cos(y_1+y_2)+i\sin(y_1+y_2))\\\&=e^{z_1+z_2}\end{aligned}$.
3) $e^z$ - периодическая функция с периодом $T=2\pi{i}$.
	$\blacktriangleright\qquad{e}^{z+2\pi{i}}=e^x(\cos(y+2\pi)+i\sin(y+2\pi))=e^x(\cos(y)+i\sin(y))=e^z$
  
✦ **Тригонометрические функции** $w=sin(z),w=cos(z),z\in{C}$.

По определению: $\sin(z)=\frac{e^{iz}-e^{-iz}}{2i},\space\cos(z)=\frac{e^{iz}+e^{-iz}}{2}$

**Свойства:**

1) $y=0\implies{}sin(z)=sin(x),cos(z)=cos(x)$
	$\blacktriangleright\quad\sin(z)=\frac{cos(x)+isin(x)-(cos(x)-isin(x))}{2i}=sin(x)$ 
  $\qquad\cos(z)=\frac{cos(x)+isin(x)+(cos(x)-isin(x))}{2i}=cos(x)$
   
2) $sin(z),cos(z)$ - периодические функции с периодом $T=2\pi$.
	$\blacktriangleright\quad\sin(z+2\pi)=\frac{e^{i(z+2\pi)}-e^{-i(z+2\pi)}}{2i}=\frac{e^{iz}-e^{-iz}}{2i}$
  $\qquad\cos(z+2\pi)=\frac{e^{i(z+2\pi)}+e^{-i(z+2\pi)}}{2}=\frac{e^{iz}+e^{-iz}}{2}$
3) $\sin(z)$ - нечетная функция, $\cos(z)$ - четная функция.
	$\blacktriangleright\quad\sin(-z)=\frac{e^{-iz}-e^{iz}}{2i}=-sin(z)$
  $\qquad\cos(-z)=\frac{e^{-iz}+e^{iz}}{2}=cos(z)$

★ Для $sin(z),cos(z)$ справедливы все обычные тригонометрические соотношения : $sin^2(z)+cos^2(z)=1,sin(2z)=2sin(z)cos(z)$ и т.д.

★ Из определения $sin(z),cos(z)$ следует формула Эйлера: $e^{iz}=\cos(z)+i\sin(z)$

✦ **Логарифмическая функция** $w=Ln(z)$.

$Ln(z)$ определяется как обратная функция к функции $e^{iz}$

Так как $e^{iz}\not=0$, а любое другое значение $e^{iz}$ принимает в бесконечном множестве точек, то $Ln(z)$  является бесконечнозначной функцией, определенной на всей комплексной плоскости, за исключением $z=0$.

Рассмотрим уравнение $e^w=z$, относительно $w$. Положим $w=a+ib,z=re^{i\varphi},r>0$.
Тогда $e^{a+ib}=re^{i\varphi}\iff{e}^{a+ib}=e^{\ln(r)+i\varphi}\iff{a+ib}=\ln(r)+i\varphi\iff{a}=\ln(r),b=\varphi+2\pi{k},k\in{Z}$

Таким образом $Ln(z)=ln|z|+iArg(z),|z|=r,\varphi+2\pi{k}=Arg(z)$.

**Свойства:**

1) $Ln(z_1z_2)=Ln(z_1)+Ln(z_2).$
	$\blacktriangleright\quad{}Ln(z_1z_2)=ln|z_1z_2|+iArg(z_1z_2)=ln|z_1|+ln|z_2|+i(Arg(z_1)+Arg(z_2))=Ln(z_1)+Ln(z_2)$ 
2) $Ln(\frac{z_1}{z_2})=Ln(z_1)-Ln(z_2)$
	$\blacktriangleright\quad{}Ln(\frac{z_1}{z_2})=ln|\frac{z_1}{z_2}|+iArg(\frac{z_1}{z_2})=ln|z_1|-ln|z_2|+i(Arg(z_1)-Arg(z_2))=Ln(z_1)-Ln(z_2)$ 

✦ **Степенная функция** $w=z^n$.

Если $n\in{N}$, то $z^n=\underbrace{z...z}_{\text{n раз}},z\in{C}$.

Ясно, что $|z^n|=|z|^n,Arg(z^n)=nArg(z),$ и что функция $w=z^n$ однозначна.

Пусть $\alpha\in{C}$ - произвольное комплексное число, тогда $z^\alpha=e^{\alpha{}Ln(z)}$ 

Так как $Ln(z)$ - бесконечнозначная функция, то $z^\alpha$, также бесконечнозначная функция.

✦ **Гиперболические функции** $sh(z),ch(z),th(z),cth(z)$.

$sh(z)=\frac{e^z-e^{-z}}{2},ch(z)=\frac{e^z+e^{-z}}{2},th(z)=\frac{sh(z)}{ch(z)},cth(z)=\frac{ch(z)}{sh(z)}$

'
        ]);

        $questions = [
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    ''
                ],
                'c' => []
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[1]->id,
            'active' => true,
            'name' => 'Понятие группы',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Группа** - множество $G=<G,*>$  с операцией умножения, обладающей следующими свойствами:
1) Ассоциативность. $a(bc)=(ab)c\space\forall{}a,b,c\in{G}$.
2) Наличие нейтрального элемента. $\exists{e}\in{G}:ae=ea=a\space\forall{a}\in{G}$
3) Наличие нобратного элемента. $\forall\space{a}\in{G}\space\exists\space{a^{-1}}\in{G}:aa^{-1}=a^{-1}a=e$.

Группа $G$ называется **абелевой** (**коммутативной**), если $\forall\space{a,b}\in{G}\space{}ab=ba$

**Мультиплекативная запись группы** $<G,*>$ : операция - умножение, нейтральный - 1, обранный к $g\in{G}$ есть $g^{-1}$.

**Аддитивная запись группы** $<G,+>$ : операция - сложение, нейтральный - 0, обратный называют противоположным и для $g\in{G}$ это $-g$.

Группа, содержащая конечное число элементов называется **конечной**. В противном случае - **бесконечной**.

Пусть $<{G,*}>$ - группа, тогда
1) В $G$ существует единственная единица.
	$\blacktriangleright$ если $e_1,e_2$ - нейтральные, то $e_1=e_1e_2=e_2$
2) $\forall{g}\in{G}\space\exists!\space{g}^{-1}\in{G}$ (Существует единственный обратный элемент).
	$\blacktriangleright$ если $g_1,g_2\in{G}$ - обратные к $g\in{G}$, то $g_1g=e,g_2g=e\implies{g_1=g_2=eg^{-1}}$
3) В $G$ однозначно разрешимы уравнения $ax=b$ и $xa=b\space\forall{a,b}\in{G}$, а именно $x=a^{-1}b$ и $x=b{a^-1}$ соответственно. (Так, в строках и столбцах таблицы Кели все значения различны).
	$\blacktriangleright\enspace{ax}=b\iff{a^{-1}}ax=a^{-1}b\iff{ax=b}$
  $\qquad{xa=b}\iff{xaa^{-1}}=ba^{-1}\iff{x=ba^{-1}}$
4) Законы сокращения: $ab=ac\iff{b=c},\space{}ac=bc\iff{a=b}$
	$\blacktriangleright\enspace{ab=ac\iff}a^{-1}(ab)=a^{-1}(ac)\iff{(a^{-1}a)b=(a^{-1}a)c\iff{b=c}}$
  $\qquad{ac=bc\iff}(ac)c^{-1}=(bc)c^{-1}\iff{a(cc^{-1})=b(cc^{-1})\iff{a=b}}$
5) В $G$ справедлив обобщенный закон ассоциативности, а если $G$ - абелева, то и коммутативности.
6) $(a^{-1})^{-1}=a\space\forall{a}\in{G}$
	$\blacktriangleright$ Поскольку $aa^{-1}=a^{-1}a=e$, то обратным к $a^{-1}$ является $a$.
7) $(a_1..a_n)^{-1}=a_n^{-1}..a_1^{-1}\forall{a_1,..,a_n\in{G}}$.
	$\blacktriangleright(a_1..a_n)(a_1^{-1}..a_n^{-1})=a_1..(a_na_n^{-1})..a_n=..=a_1a_1^{-1}=e\implies(a_1..a_n)^{-1}=(a_1^{-1}..a_n^{-1})$
  
Если $G=<G,*>$, то для $g\in{G}$, введем понятие m-й степени:

$g^m=\begin{cases}\underbrace{g*..*g}_{\text{m раз}},m>0\\\e,\qquad{}m=0\\\underbrace{g^{-1}*..*g^{-1}}_{\text{-m раз}},m<0\end{cases}$

Данное определение корректно в силу обобщенной ассоциативности.

**Утверждение**. $\forall\space{m,n}\in{Z},g\in{G}$ верны равенства: 
1) $g^ng^m=g^{m+n}$
	$\blacktriangleright{g^n}g^m=\underbrace{g..g}_{\text{n}}\underbrace{g..g}_{\text{m}}=\underbrace{g..g}_{\text{n+m}}=g^{n+m}$
2) $(g^m)^n=g^{nm}$
	$\blacktriangleright{(g^m)^n}=\underbrace{\underbrace{g..g}_{\text{m}}..\underbrace{g..g}_{\text{m}}}_{\text{n}}=\underbrace{g..g}_{\text{nm}}=g^{nm}$
  
**Порядком группы** наывается число ее элементов. (Порядок бесконечной группы  бесконечен)

**Порядком элемента** $g\in{G}$ называется наименьшее натуральное число $n$, такое что $g^n=e$. Обозначение: $O(g)$ или $|g|$.

Если в последовательности $g,g^2,g^3,..$ все элементы различны, то $O(g)=\infty$ и будем говорить, что $g$ имеет бесконечный порядок.

**Утверждение.** $O(g)=2\iff{g=g^{-1}}$
	$\blacktriangleright\implies:{O(g)=2}\iff{g^2=e}\iff{g^-1gg=g^{-1}e\iff{eg=g^{-1}\iff{}g=g^{-1}}}$
  $\quad\impliedby:{}g=g^{-1}\iff{g}g=g^{-1}g\iff{g^2}=e\iff{O(g)}=2$'
        ]);

        $questions = [
            [
                'q' => 'Как называют обратный элемент в аддитивной группе?',
                't' => 'task',
                'a' => 'противоположный'
            ],
            [
                'q' => 'Пусть $G$ - группа и $ab=ba=a$,a,b\in{G}, тогда как назывется элемент $b$',
                't' => 'task',
                'a' => 'нейтральный'
            ],
            [
                'q' => 'Пусть $G$ - группа, $g\in{G}$. Если $O(g)=k$, то чему равен порядок элемента $h=g^k,\space{h}\in{G}$?',
                't' => 'task',
                'a' => '1'
            ],
            [
                'q' => 'Пусть $<G,*>$ - группа, тогда',
                'a' => [
                    '$ab=ba\space\forall{a,b}\in{G}$',
                    '$(ab)c=a(bc)\space\forall{a,b,c}\in{G}$\'',
                    '$\exists\space{e}\in{G}:ae=ea=a\forall\space{a\in{G}}$',
                    '$\exists\space{e}\in{G}:ae=ea=e\forall\space{a\in{G}}$\''
                ],
                'c' => [false, true, true, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $course = Course::Create([
            'name' => 'Дифференциальные уравнения',
            'description' => 'Очень важный курс для настоящих героев!',
            'image' => 'diff_eq.jpg',
            'category_id' => 1,
            'active' => true,
            'user_id' => 1
        ]);

        $names = ['Уравнения первого порядка', 'Линейные уравнения n-го порядка'];
        $blocks = [];

        foreach ($names as $k => $n) {
            $blocks[] = Block::Create([
                'course_id' => $course->id,
                'name' => $n,
                'active' => true,
                'sort' => $k
            ]);
        }

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Основные понятия и определения',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Дифференциальным уравнением** называется уравнение, связывающее независимую переменную х, искомую функцию y = y (x) и ее производные $y... y^{(n)}$, т.е. уравнения вида $F(x,y,y,y,...,y^{(n)}$)

Дифференциальное уравнение называется **обыкновенным**, если искомая функция y имеет вид y = y(x) (т.е функция одной независимой переменной)

**Порядком** дифференциального уравнения называется порядок наивысшей производной, входящей в уравнение

**Решением** дифференциального уравнения n-го порядка на интервале (a, b) называется функция $y=\gamma(x)$, определенная на (a, b) вместе со своими производными до n-го порядка включительно, и такая что ее подстановка в дифференциальное уравнение, превращает его в тождество по x на (a, b).

График решения дифференциального уравнения называется **интегральной кривой** этого уравнения.

### Формы задания

* Общий вид: $f(x,y,y)=0$
* Нормальный вид: $y=f(x,y)$
* Дифференциальная форма: $M(x,y)dx+N(x,y)dy=0$
* Симметрическая форма: $\frac{dx}{X(x,y)}=\frac{dy}{Y(x,y)}$

### Виды записи решения

* Нормальная форма: $y=\gamma(x)$
* Неявная форма: $F(x,y)=0$
* Параметрическая форма: $\begin{cases}
   x=\beta(t)\\\
   y=\alpha(t)
\end{cases}$, $x\in(a,b), t\in(\omega,\eta), a=\beta(\omega), b=\alpha(\eta)$
',
            //'video' => 'hello.mov'
        ]);

        $questions = [
            [
                'q' => 'Что называется обыкновенным дифференциальным уравнением n –го порядка?',
                'a' => [
                    'Соотношение, связывающее независимую переменную, неизвестную функцию и все ее производные до n-го порядка включительно.',
                    'Соотношение, связывающее неизвестную переменную, независимую переменную и все ее производные до n-го порядка включительно.',
                    'Дифференциальное уравнеие n-ой степени.',
                    'Уравнение, содержащее n независимых переменных.',
                ],
                'c' => [true, false, false, false]
            ],
            [
                'q' => 'Как называется процесс решения дифференциального уравнения?',
                'a' => [
                    'Дифференцирование',
                    'Интегрирование',
                    'Построение',
                    'Отождествление'
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Что называется порядком дифференциального уравнения?',
                'a' => [
                    'Колличество производных, входящих в уравнение',
                    'Колличество независимых переменных, входящих в уравнение',
                    'Наивысшая степень производной, входящей в уравнение',
                    'Наивысший порядок производной, входящей в уравнение'
                ],
                'c' => [false, false, false, true]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Задача Коши',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Задачей Коши** называют задачу нахождения решения решения $y=y(x)$ уравнения $y\'=f(x,y)$, удовлетворяющего начальному условию $y(x_0)=y_0$

Геометрически: ищем интегральную кривую, проходящую через заданную точку $M_0$ плоскости $xOy$

Функция $f(x,y)$, определенная в некоторой области $D$ удовлетворяет в $D$ **условию Липшица**, если существует такая постоянная $L$ (постоянная Липшица), что $\forall\space{y_1,y_2}\in{D},\forall\space{x}$ справедливо неравенство $|f(x,y_2)-f(x,y_1)|\leq{L}|y_2-y_1|$.

★ Существование в области $D$ ограниченной производной $\frac{df}{dy}$ является достаточным условием для того, чтобы функция $f(x,y)$ в $D$ удовлетворяла условию Липшица. (Обратное неверно).

Рассмотрим задачу Коши: $\quad\begin{cases}y\'=f(x,y)\\y(x_0)=y_0\end{cases}\quad{(1)}$

**Лемма (Об интегральном уравнении)**. Функция $y(x)$ является решением уравнения 
->$y(x)=y_0+\int_{x_0}^{x}{f(t,y(t))dt}\quad{(2)}$<-
тогда и только тогда, когда она является решением задачи (1).

*Доказательство.* 
$\impliedby$ Путь $y(x)$ - решение задачи (1), тода оно удовлетворяет тождеству $y\'=f(x,y(x))$. Проинтегрировав тождество получим $y(x)-y(x_0)=\int_{x_0}^{x}{f(t,y(t))dt}$. y(x) непрерывна и так как по условию $y(x_0)=y_0$, то y(x) - решение уравнения (2).
$\implies$ Пусть $y(x)$ - решение (2).  $f(x,y)$ непрерывна по условию, а $y(x)$ непрерывна по определению решения. Продифференцировав (2) получим $y\'=f(x,y(x))$, а так как $y(x_0)=y_0$, то $y(x)$ - решение (1).

**Теорема (Существования и единственности решения задачи Коши или теорема Пикара)**. Пусть фунцкия $f(x,y)$ определена и непрерывна по совокупности переменных и удовлетворяет условию Липшица по $y$ в прямоугольнике $D=\lbrace{(x,y):|x-x_0|\leq{a},|y-y_0|\leq{b}}\rbrace$. Тогда существует единственное решение задачи Коши (1), определенное на интервале $(x_0-h,x_0+h)$, где $h=min(a,\frac{b}{M}),\space{M}=max_D(f(x,y))$.

*Доказательство.* **Метод последовательных приближений.**  Пусть
->$y_1(x)=y_0+\int_{x_0}^{x}{f(t,y_0)dt},\quad{y_2}(x)=y_0+\int_{x_0}^{x}{f(t,y_1(t))dt}$.<-
По индукции определим последовательность функций

->$y_k{x}=y_0+\int_{x_0}^x{f(t,y_{k-1}(t))dt)}$<-

Допустим эта последовательность сходится к $\overline{y}(x)$ и разрешен предельный переход под знаком интеграла функции $f$. 

Тогда при $k\to{}\infty\quad\overline{y_k}(x)=y_0+\int_{x_0}^x{f(t,\overline{y}(t))dt}$ (3), значит $\overline{y}$ - решение уравнения (2), а следовательно и задачи Коши (1).

Теперь докажем, что все функции последовательности $y_k(x)$ определены и непрерывны в интервале $(x_0-h,x_0+h)$ и не выходят за $D$ 

Индукция по k.
База: k=1. Функция $y_1(x)$ непрерывна при $|x-x_0\leq{a}|$, т.к. $f(x,y)$ непрерывна, а интеграл с переменным верхним пределом есть непрерывная функция на этом отрезке. Если $|x-x_0|\leq{h}$, то для точки $(x,y)\in{D}$ имеем: $|y_1(x)-y_0|=|\int_{x_0}^x{f(t,y_0)dt}|\leq|\int_{x_0}^x|f(t,y_0)|dt|\leq{M}|x-x_0|\leq{b}$.
Шаг: Пусть утверждение справедливо для $y_{n-1}(x)$.

Тогда $|y_n(x)-y_0|\leq|\int_{x_0}^x|f(t,y_{n-1}(t))|dt|$. А т.к. $(t,y_{n-1}(t))\in{D}$, то $|f(t,y_{n-1}(t)|\leq{M}$, следовательно $|y_n(x)-y_0|\leq{M}|x-x_0|\leq{b}$

Докажем что последовательность функций $\lbrace{y_n(x)}\rbrace_{n=1}^{\infty}$ сходится равномерно к $\overline{y}(x)$ на отрезке $|x-x_0|\leq{h}$.

Построим ряд $y_0(x)+(y_1(x)-y_0(x))+...+(y_n(x)-y_{n-1}(x))+...$ (4)

Докажем что этот ряд сходится равномерно. Нужно доказать что $\forall{n}\in{N}\quad|y_n(x)-y_{n-1}(x)|\leq\frac{ML^{n-1}|x-x_0|^n}{n!}\leq\frac{ML^{n-1}h^n}{n!}$. Индукция по $n$.

База: n=1, тогда $|y_1(x)-y_0(x)|\leq{M}|x-x_0|$.

Шаг: Пусть для $n=m$ неравенство доказано, докажем его для $n=m+1$:
->$\begin{aligned}&|y_{m+1}(x)-y_m(x)|\\&=|\int_{x_0}^x|f(t,y_m(t)-f(t,y_{m-1}(t)|dt|\\&\leq|\int_{x_0}^x{L|y_m(t)-y_{m-1}(t)|dt}|\\&\leq{L}\int_{x_0}^x\frac{ML^{m-1}|x-x_0|^k}{m!}\\&=\frac{ML^k|x-x_0|^{k+1}}{(m+1)!}\end{aligned}$<-

Т.к. $|x-x_0\leq{h}|$, то $|y_n(x)-y_{n-1}(x)|\leq\frac{ML^{n-1}h^n}{n!}$.

Ряд $\sum{\frac{L^{n-1}h^n}{n!}}$ сходится по признаку Даламбера.

Таким образом ряд (4) сходится равномерно по признаку Вейерштрасса и его сумма $\overline{y}(x)$ является непрерывной функцией.

Теперь докажем, что $\overline{y}(x)$ - решение задачи Коши (1).

Используя условие Липшица и равномерную сходимость последовательности  $\lbrace{y_n(x)}\rbrace_{n=1}^{\infty}$, получим, что $\forall\space\varepsilon>0\space\exists{N}\in{N}:\forall{n\geq{N}}$ выполняется
->$\begin{aligned}&|\int_{x_0}^x{f(t,y(t))dt-\int_{x_0}^x{f(t,\overline{y}(t))dt}}|\\&\leq\int_{x_0}^x|f(t,y_n(t))-f(t,\overline{y}(t))|dt\\&\leq{L}\int_{x_0}^x|y_n(t)-\overline{y}(t)|dt\leq{L}\varepsilon{h}\end{aligned}$<-

Таким образом, обоснована законность предельного перехода под знаком интеграла, откуда следует, что $\overline{y}(x)$ - решение уравнения уравнения (3), а следовательно и задачи Коши (1).

Докажем единственность решения задачи Коши (1).

Пусть $y_1(x),y_2(x)$ - решения задачи Коши (1). Тогда

->$y_1(x)=y_0+\int_{x_0}^x{f(t,y_1(t))dt},\quad{y_2}(x)=y_0+\int_{x_0}^x{f(t,y_2(t))dt}$<-

Получим оценку для их разности.

$\begin{aligned}0\leq|y_1(x)-y_2(x)|\\&\leq|\int_{x_0}^x|f(t,y_1(t))-f(t,y_2(t))|dt|\\&\leq{L}|\int_{x_0}^x|y_1(t)-y_2(t)|dt|\\&\leq{L}h	\displaystyle\sup_{|x-x_0|\leq{h}}|y_1(x)-y_2(x)|\leq{L}h^2M\to\infty\end{aligned}$

Следовательно $(1-Lh)\displaystyle\sup_{|x-x_0|\leq{h}}|y_1(x)-y_2(x)|\leq0$

А при $h\leq\frac{1}{L}\quad\displaystyle\sup_{|x-x_0|\leq{h}}|y_1(x)-y_2(x)|\leq{0}$.

Таким образом $y_1(x)\equiv{y_2(x)}$. ∎
',
        ]);

        $questions = [
            [
                'q' => 'Выберите условия теоремы существования и единственности решения задачи Коши для функции f(x,y), определенной в области D',
                'a' => [
                    'f(x, y) непрерывна в области D',
                    'f(x, y) ограничена в области D',
                    'f(x, y) монотонно возрастает в области D',
                    'f(x, y) имеет частную производную по y, ограниченную в области D'
                ],
                'c' => [true, false, false, true]
            ],
            [
                'q' => 'Сколько решений может иметь задача Коши если функция f(x,y) непрерывна и удовлетворяет условию Липшица?',
                'a' => [
                    '0',
                    '1',
                    'Число, равное степени f(x,y)',
                    'Число, равное порядку уравнения'
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Какая геометрическая интерпретация задачи Коши?',
                'a' => [
                    'Нахождение наименьшего радиуса окружности с центром в точке (x0, y0) и касающейся одной из интегральных кривых',
                    'Нахождение изоклины, проходящей через заданную точку ($x_0,y_0$)',
                    'Нахождение интегральной кривой, проходящей через заданную точку ($x_0,y_0$)',
                ],
                'c' => [false, false, true]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Метод изоклин',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '',
        ]);

        $questions = [
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    '',
                ],
                'c' => [false, true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Уравнения с разделяющимися переменными и приводящие к ним',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Дифференциальное уравнение вида $\varphi(x)dx=\psi(y)dy$, называется **уравнением с разделенными переменными**.

Решение: $\int\varphi(x)dx=\int\psi(y)dy+C$

★ Особых решений такое уравнение не имеет.

★  Решение задачи Коши для уравнения (1) находится по формуле 
->$\int_{x_0}^x\varphi(x)dx=\int_{y_0}^y\psi(y)dy+C$,<-
если $\varphi(x_0)$ и  $\psi(y_0)$ не равны 0 одновременно, при этом оно является единственным. Если же $\varphi(x_0)=\psi(y_0)=0$, то решение задачи Коши может не сущевствовать или быть не единственным.

Дифференциальное уравнение вида $\varphi_1(x)\psi_1(y)dx=\varphi_2(x)\psi_2(y)dy$, называется **уравнением с разделяющимися переменными**.

Для решения такого уравнения разделим обе его части на произведение $\varphi_1(x)\psi_2(y)$. Тогда получим уравнение с разделенными переменными:

->$\frac{\varphi_2(x)}{\varphi_1(x)}dx=\frac{\psi_1(y)}{\psi_2(y)}dy$<-

Найдем его общий интеграл: $\int_{x_0}^x\frac{\varphi_2(x)}{\varphi_1(x)}dx=\int_{y_0}^y\frac{\psi_1(y)}{\psi_2(y)}dy+C$

Теперь вспомним, что мы делили на $\varphi_1(x)\psi_2(y)$, значит мы могли потерять частные решения, обращающие это произведение в 0.

Таким образом, частные решения получаемые при $\varphi_1(x)=0$ или $\psi_2(y)=0$ могут оказаться особыми. Если ни при каком значении произвольной постоянной $C$ такие решения не входят в общее решение, то включаем их в решение, в качестве особых.

**Утверждение**. Дифференциальное уравнение вида $\frac{dy}{dx}=f(ax+by+c),\space{a,b,c}-const$,  заменой $z=ax+by+c$ преобразуется в уравнение с разделяющимися переменными.',
            'examples' => '1) Проинтегрировать уравнение $(1+y^2)dy=(1+x^2)dx$.

Имеем уравнение с разделенными переменными, тогда получим решение проинтегрировав обе части уравнения.

Ответ: $y+\frac{1}{3}y^3=x+\frac{1}{3}x^3+C$

2) Решить уравнение $e^y(1+x^2)dy-2x(1+e^y)dx=0$

Делим уравнение на $(1+x^2)(1+e^y)$

★ Заметим, что $(1+x^2)(1+e^y)>0\space\forall{x,y}$, поэтому проверки на особые решения проводить не нужно.

Получаем уравнение с разделенными переменными: $\frac{e^ydy}{1+e^y}=\frac{2xdx}{1+x^2}$.

Проинтегрируем обе его части:

->$\begin{aligned}&\int\frac{e^ydy}{1+e^y}=\int\frac{2xdx}{1+x^2}\implies\\&\int\frac{d(1+e^y)}{1+e^y}=\int\frac{d(1+x^2)}{1+x^2}\implies\\&ln(1+e^y)=ln(1+x^2)+C\implies\\&1+e^y=\overline{C}(1+x^2),\overline{C}=e^C\end{aligned}$<-

Так нашли общее решение дифференциального уравнения.

Ответ: $1+e^y=\overline{C}(1+x^2)$

3) Решить задачу Коши $y\'+sin(x-y)=sin(x+y),\space{y}|_{x=\pi}=\frac{\pi}{2}$

Сперва преобразуем уравнение, применив тригонометрические тождества: 
->$y\'=2cos(x)sin(y)$<-

Теперь умножим уравнение на $\frac{dx}{sin(y)}$:
->$\frac{dy}{sin(y)}=2cos(x)dx$<-

Далее, интегрируем обе части уравнения:
->$\int{\frac{dy}{sin(y)}}=\begin{Bmatrix}
   \tg{\frac{y}{2}}=t;y=2\arctg{t};dy=\frac{2}{1+t^2}dt
\end{Bmatrix}=\int\frac{dt}{t}=\ln{t}+C_1=\ln{\tg{\frac{y}{2}}}+C_1$<-
->$\int{2cos(x)dx=2sin(x)+C_2}$<-

Получаем общее решение: $\ln{\tg{\frac{y}{2}}}=2\sin{x}+C_1$

Приведем его к виду: $\tg{\frac{y}{2}}=Ce^{2\sin{x}}$

Вспомним, что мы делили на $\sin{y}$, поэтому могут быть особые решения $y=\pi{n}$, но они входят в общее решение при $C=0$, поэтому их в ответ не включаем.

Далее применяем начальные условия задачи Коши и находим $C$:
->$\tg{\frac{\pi}{4}}=Ce^{2\sin{\pi}}\implies{C}=1$<-

Ответ: $\tg{\frac{y}{2}}=e^{2sin(x)}$ 

4) Проинтегрировать уравнение $y\'=ax+by+c$.

Сделаем замену $z=ax+by+c$, тогда $y=\frac{z-ax-c}{b},\quad{y\'}=\frac{z\'-a}{b}$

Получаем уравнение: $z\'=bz+a$.

Умножаем на $\frac{dx}{bz+a}$.

Далее интегрируем уравнение $\frac{dz}{bz+a}=dx$ и получаем $\frac{\ln(bz+a)}{b}=x+\overline{C}$ или $bz=Ce^{bx}-a$.

Мы делили на $bz+a$, $z=-\frac{a}{b}$ входит в общее решение при $C=0$, поэтому это решение не будет особым.

Возвращаясь к старым переменным, получим ответ: $b(ax+by+c)=Ce^{bx}-a$.'
        ]);

        $questions = [
            [
              'q' => 'Может ли иметь особые решения уравнение с разделяющимися переменными?',
              't' => 'test_one',
              'a' => [
                  'да',
                  'нет'
              ],
              'c' => [true, false]
            ],
            [
                'q' => 'Может ли иметь особые решения уравнение с разделенными переменными?',
                't' => 'test_one',
                'a' => [
                    'да',
                    'нет'
                ],
                'c' => [false, true]
            ],
            [
                'q' => 'Выберите уравнения с разделенными переменными',
                'a' => [
                    '$(1+y^2)dx+(1+x^2)dy=0$',
                    '$(1+x^2)dx+(1+y^2)dy=0$',
                    '$x\sqrt[3]{1-y^2}dx+y\sqrt[3]{1-x^2}dy=0$',
                    '$yln(y)dx+xdy=0$',
                    '$y\'sin(x)-ycos(x)=0$',
                    '$y\'+xy+1=0$',
                    '$y\'+sin(x-y)=sin(x+y)$',
                    '$e^{-y}(1+y\')=1$',
                    '$sh(x)dx=ch(y)dy$',
                    '$2xsin(\frac{ln(x)}{x})dx+5ycos(\frac{y}{e^y})=0$'
                ],
                'c' => [false, true, false, false, false, false, false, false, true, true]
            ],
            [
                'q' => 'Выберите уравнения с разделяющимися переменными',
                'a' => [
                    '$(1+y^2)dx+(1+x^2)dy=0$',
                    '$(1+x^2)dx+(1+y^2)dy=0$',
                    '$x\sqrt[3]{1-y^2}dx+y\sqrt[3]{1-x^2}dy=0$',
                    '$yln(y)dx+xdy=0$',
                    '$y\'sin(x)-ycos(x)=0$',
                    '$y\'+xy+1=0$',
                    '$y\'+sin(x-y)=sin(x+y)$',
                    '$e^{-y}(1+y\')=1$',
                    '$sh(x)dx=ch(y)dy$',
                    '$2xsin(\frac{ln(x)}{x})dx+5ycos(\frac{y}{e^y})=0$'
                ],
                'c' => [true, false, true, true, true, false, true, true, false, false]
            ],
            [
                'q' => 'Выберите уравнения, приводимые к уравнениям с разделяющимися переменными',
                'a' => [
                    '$(1+y^2)dx+(1+x^2)dy=0$',
                    '$(1+x^2)dx+(1+y^2)dy=0$',
                    '$xy\'=5(x+xy)+x^2$',
                    '$x\sqrt[3]{1-y^2}dx+y\sqrt[3]{1-x^2}dy=0$',
                    '$y\'=\sqrt{4x+2y-1}$',
                    '$yln(y)dx+xdy=0$',
                    '$y\'sin(x)-ycos(x)=0$',
                    '$y\'+xy+1=0$',
                    '$y\'+sin(x-y)=sin(x+y)$',
                    '$dy=(5x+3y+1)dx$'
                ],
                'c' => [ false, false, true, false, true, false, false, false, false, true]
            ],
            [
                'q' => 'Как привести уравнение $yln(y)dx+xdy=0$ к уравнению с разделенными переменными?',
                'a' => [
                    'Разделить на $xy$',
                    'Разделить на $xln(y)$',
                    'Разделить на $yln(y)$',
                    'Разделить на $dxdy$',
                    'Разделить на $xdy$',
                ],
                'c' => [true, true, false, false, false]
            ],
            [
                'q' => 'Будет ли решение $y=1$ уравнения $x\sqrt{1-y^2}dx+y\sqrt{1-x^2}dy=0$ особым, если его общее решение записано в виде $\sqrt{1-x^2}+\sqrt{1-y^2}=C$',
                't' => 'test_one',
                'a' => [
                    'Да',
                    'Нет'
                ],
                'c' => [true, false]
            ],
            [
                'q' => 'Будет ли решение $y=0$ уравнения $(xy^2+y^2)dx+(x^2-yx^2)dy=0$ особым, если его общее решение записано в виде $\frac{x}{y}=Ce^{\frac{1}{x}+\frac{1}{y}}$',
                't' => 'test_one',
                'a' => [
                    'Да',
                    'Нет'
                ],
                'c' => [false, true]
            ],
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Однородные уравнения',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Функция $f(x,y)$ называется **однородной функцией** степени $m$, если выполняется $f(tx,ty)=t^mf(x,y)$

Например $f(x,y)=x^3+y^3-x^2y$ - однородная функция степени 3, т.к.
->$f(tx,ty)=t^3(x^3+y^3-x^2y)=t^3f(x,y)$<-

А $f(x,y)=\frac{x^3+y^3}{x^3-y^3}$ - однородная функция степени 0, т.к.
->$f(tx,ty)=\frac{t^3(x^3+y^3)}{t^3(x^3-y^3)}=\frac{x^3+y^3}{x^3-y^3}=f(x,y)$<-

### Однородные дифференциальные уравнения

Дифференциальное уравнение вида $\varphi(x,y)dx+\psi(x,y)dy$, где $\varphi(x,y),\psi(x,y)$ - однородные функции одной и той же степени, называется **однородным**. 

Дифференциальное уравнение вида $y\'=f(x,y)dy$, где $f(x,y)$ - однородная функция нулевой степени, называется **однородным**. 

**Утверждение**. Всякое однородное уравнение можно представить в виде $y\'=\lambda(\frac{y}{x})$.

*Доказательство:*  Пусть уравнение $\varphi(x,y)dx+\psi(x,y)dy=0$ - однородное степени $m$.

Поделим уравнение на $\psi(x,y)dx$:
->$\frac{dy}{dx}=-\frac{\varphi(x,y)}{\psi(x,y)}$<-

Теперь вспомним, что функции $\varphi(x,y),\psi(x,y)$ - однородные степени $m$:
->$\frac{dy}{dx}=-\frac{x^m\varphi(1,y/x)}{x^m\psi(1,y/x)}$<-

Таким образом $y\'=\lambda(\frac{y}{x})$. ∎

★ Из $y\'=\lambda(\frac{y}{x})$ видно что в точке $(0,0)$ поле направлений не задано. Поэтому данная точка является особой точкой однородного уравнения.

**Утверждение**. Заменой $z=\frac{y}{x}$ однородное дифференциальное уравнение приводится к уравнению с разделяющимися переменными.

*Доказательство:* Пусть уравнение $\varphi(x,y)dx+\psi(x,y)dy=0$ - однородное степени $m$. Сделаем замену $y=zx$, тогда 
->$\varphi(x,zx)dx+\psi(x,zx)(zdx+xdz)=0$<-
->$x^m\varphi(1,z)dx+x^m\psi(1,z)(zdx+xdz)=0$<-
->$(\varphi(1,z)+z\psi(1,z))dx+x\psi(1,z)dz$=0<-

Последнее уравнение является уравнением с разделяющимися переменными. ∎

Теперь найдем решение полученного уравнения:

->$\frac{\psi(1,z)dz}{\varphi(1,z)+z\psi(1,z)}=-\frac{dx}{x}\implies$<-
->$\lambda(z)=lnx+\overline{C}$, где $\lambda(z)=\int{\frac{\psi(1,z)dz}{\varphi(1,z)+z\psi(1,z)}}$<-
->$x=Ce^{\lambda(z)}$<-
->$x=Ce^{\lambda(\frac{y}{x})}$<-

Теперь найдем особые решения из уравнения $x(\varphi(1,z)+z\psi(1,z))=0$

$x=0$ входит в общее решение при $C=0$.

Равенство $\varphi(1,z)+z\psi(1,z)=0$ может привести к решению, которое может быть как частным, так и особым. 

Других особых решений однородное уравнение не имеет.

### Обобщенные однородные дифференциальные уравнения

Уравнение вида $\varphi(x,y)dx+\psi(x,y)dy=0$, не являющееся однородным, называют **обобщенным однородным** дифференциальным уравнением, если существует такое число $k$, что при замене $y=z^k$, где $z=z(x)$ - новая неизвестная функция уравнение становится однородным.

Это может иметь место только в случае, когда в уравнении все члены оказываются одинакового измерения, если предположить, что $x$ - величина 1 измерения, $y$ - величина $k$-го измерения, $y\'$ - величина $(k-1)-$го измерения.',
            'examples' => '1) Проинтегрировать уравнение $xy\'=y+\sqrt{y^2-x^2}$.

Делаем замену $z=\frac{y}{x}$, тогда $y=zx$ и $dy=zdx+xdz$

Уравнение примет вид: $\frac{x(zdx+xdz)}{dx}=zx+\sqrt{z^2x^2-x^2}$

Разделим уравнение на $x$ и сгруппируем слагаемые при $dx$ и $dz$, получим:
->$\sqrt{z^2-1}dx=xdz$<-

Теперь решим полученное уравнение с раделяющимися переменными:

$\frac{dx}{x}=\frac{dz}{\sqrt{z^2-1}}\implies{lnx=}ln|z+\sqrt{z^2-1}|+\overline{C}\implies{x}=C(z+\sqrt{z^2-1})$

Подставим $z=\frac{y}{x}$, получим общее решение $x=C(\frac{y}{x}+\sqrt{(\frac{y}{x})^2-1})$

Теперь вспомним, что мы делили на $x\sqrt{z^2-1}$, поэтому могли потерять решения, которые обращают в нуль это произведение.

$x=0$ входит в общее решение

$z=\pm{1}$, т.е. $\frac{y}{x}=\pm{1}\iff{y}=\pm{x}$ - особые решения (Непосредственной проверкой убедимся в этом) 

Ответ: $x=C(\frac{y}{x}+\sqrt{(\frac{y}{x})^2-1}),\quad{y}=\pm{x}$

2) Решить уравнение $4y^6+x^3=6xy^5y\'$.

Данное уравнение является обобщенным однородным, так как полагая что $x,y,y\'$ - величины $1,k,k-1$ измерений соответственно и решая равенства $6k=3=1+5k+k-1$, получим  $k=\frac{1}{2}$

Теперь делаем замену $y=z^{\frac{1}{2}}$ и получаем однородное уравнение:
->$4z^3+x^3=3xz^2z\'$<-
Снова делаем замену $z=xt$, тогда  $dz=xdt+tdx$ и уравнение примет вид:
$(4t^3x^3+x^3)dx=3t^2x^3(tdx+xdt)$

Разделяем переменные и решаем уравнение: 
->$\frac{3t^2dt}{t^3+1}=\frac{dx}{x}$<-
->$\int{\frac{d(t^3+1)}{t^3+1}}=\int{\frac{dx}{x}}$<-
->$ln(t^3+1)=lnx+\overline{C}$<-
->$t^3+1=Cx$<-
->$t=\frac{z}{x}\implies\frac{z^3}{x^3}+1=Cx$<-
->$z=y^2\implies{}y^6+x^3=Cx^4$<-

Так, получили общее решение. Теперь проверяем возможные особые решения: $x=0$ и $t^3=-1\implies{}z^3=-x^3\implies{}y^6=-x^3$.

$x=0$ не является решением исходного уравнения.
$y^6=-x^3$ - частное решение при $C=0$.

Таким образом особых решений уравнение не имеет.

Ответ: $y^6+x^3=Cx^4$'
        ]);

        $questions = [
            [
                'q' => 'Выберите однородные функции 2 степени',
                'a' => [
                    '$f(x,y)=x^2+y^2-xy$',
                    '$f(x,y)=x+y-xy$',
                    '$f(x,y)=x^3+y^3-x^2y$',
                    '$f(x,y)=x^2sin(y)+y^2cos(x)$',
                    '$f(x,y)=xy+x^2$',
                    '$f(x,y)=\frac{x^4+y^4}{x^2+y^2}$',
                    '$f(x,y)=\frac{x^2y+x^3}{y}$',
                    '$f(x,y,z)=\frac{x^3+xyz+z^3}{xy}$',
                ],
                'c' => [true, false, false, false, true, true, true, false]
            ],
            [
                'q' => 'Выберите однородные дифференциальные уравнения',
                'a' => [
                    '$xy+y^2-x^2y\'=0$',
                    '$x+y-xy$',
                    '$xy\'=y(lny-lnx)$',
                    '$(4x-3y)dx+(2y-3x)dy=0$',
                    '$xy\'=\sqrt{x^2-y^2}+y$',
                    '$y\'=\frac{x^4+y^4}{x^2+y^2}$',
                    '$y\'=\frac{x^2y+x^3}{y^3}$',
                    '$y\'=x^2sin^2(x)+2xysin(x)cos(x)+y^2cos^2(x)$',
                ],
                'c' => [true, false, true, true, true, false, true, false]
            ],
            [
                'q' => 'Какой тип, по ожиданиям (если не учитывать конкретные частные случаи), будет иметь уравнение, полученное заменой $z=\frac{y}{x}$ из однородного дифференциального уравнения',
                't' => 'test_one',
                'a' => [
                    'Уравнение с разделенными переменными',
                    'Линейное уравнение',
                    'Уравнение в полных дифференциалах',
                    'Уравнение с разделяющимися переменными',
                ],
                'c' => [false, false, false, true]
            ],
            [
                'q' => 'Какое измерение имеет однородная функция $f(x,y)$, если $y\'=f(x,y)$ есть однородное дифференциальное уравнение? (В качестве ответа введите число)' ,
                't' => 'task',
                'a' => '0'
            ],
            [
                'q' => 'Выберите обобщенные однородные дифференциальные уравнения',
                'a' => [
                    '$(x+y+1)dx+(2x+2y-1)dy=0$',
                    '$(x^2y^2-1)dy+2xy^3dx=0$',
                    '$y(1+\sqrt{x^2y^4+1})dx+2xdy=0$',
                    '$y(y+\sqrt{x^2y^4+1})dx+2xdy=0$',
                    '$y(1+\sqrt{x^2y^4+1})dx+2x^2dy=0$',
                    '$4y^6+x^3=6xy^5y\'$',
                    '$(x+y^3)dx+3(y^3-x)y^2dy=0$',
                    '$(x+y^3)dx+3(y^4-x)y^2dy=0$'
                ],
                'c' => [false, true, true, false, false, true, true, false]
            ],
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Уравнения, приводимые к однородным',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Уравнение вида 
->$(a_1x+b_1y+c_1)dx+(a_2x+b_2y+c_2)dy=0\quad{(1)}$<-
->$(\frac{dy}{dx}=f(\frac{a_1x+b_1y+c_1}{a_2x+b_2y+c_2}))$<-
где ${a,b,c,a_1,b_1,c_1-const}$ называется уравнением, приводимым к однородному.

Если $c=c_1$, то уравнение является однородным.

Пусть теперь хотя бы одно из чисел $c,c_1$ не равно 0.

Сделаем в уравнении (1) замену
->$\begin{cases}x=\varepsilon+\alpha\\y=\eta+\beta\end{cases}$<-
где $\varepsilon,\eta$ - новые независимые переменные, $\alpha,\beta$ - параметры.

Попытаемся оределить $\alpha,\beta$, так чтобы уравнение стало однородным.

$(a_1\varepsilon+a_1\alpha+b_1\eta+b_1\beta+c_1)d\varepsilon+(a_2\varepsilon+a_2\alpha+b_2\eta+b_2\beta+c_2)d\eta\quad(2)$

Подберем $\alpha,\beta$ так, чтобы система $\begin{cases}a_1\alpha+b_1\beta+c_1=0\\a_2\alpha+b_2\beta+c_2=0\quad\end{cases}$ имела решение.

Возможны 3 случая:

1) $\begin{vmatrix}
   a_1 & b_1 \\
   a_2 & b_2
\end{vmatrix}$$\not=0,\quad\frac{a_1}{a_2}\not=\frac{b_1}{b_2}\quad$,  тогда система имеет 1 решение.

$(2)\implies(a_1\varepsilon+b_1\eta)d\varepsilon+(a_2\varepsilon+b_2\eta)d\eta=0$ -  однородное уравнение.

2) $\begin{vmatrix}
   a_1 & b_1 \\
   a_2 & b_2
\end{vmatrix}=0$$\quad\frac{a_1}{a_2}=\frac{b_1}{b_2}\not=\frac{c_1}{c_2}\quad$,  тогда система не имеет решений.

В этом случае $\frac{a_1}{a_2}=\frac{b_1}{b_2}=k\implies\begin{cases}a_1=ka_2\\b_1=kb_2\end{cases}$

Подставляем в (1): $k(a_2x+b_2y)dx+c1dx+(a_2x+b_2y+c_2)dy=0$

Делаем замену $z(x)=a_2x+b_2y$, тогда $dy=\frac{dz}{b_2}-\frac{a_2dx}{b_2}$
->$(kz+c_1)dx+(z+c_2)(\frac{dz}{b_2}-\frac{a_2dx}{b_2})=0$<-
->$(kz+c_1-\frac{a_2}{b_2}(z+c_2))dx+\frac{z+c_2}{b_2}dz=0$<-

Получили уравнение с разделяющимися переменными.

3) $\begin{vmatrix}
   a_1 & b_1 \\
   a_2 & b_2
\end{vmatrix}=0$$\quad\frac{a_1}{a_2}=\frac{b_1}{b_2}=\frac{c_1}{c_2}\quad$,  тогда система имеет $\infty$ много решений.

В этом случае $\frac{a_1}{a_2}=\frac{b_1}{b_2}=\frac{c_1}{c_2}=k\implies\begin{cases}a_1=ka_2\\b_1=kb_2\\c_1=kc_2\end{cases}$

Подставляем в (1): $(a_2x+b_2y+c_2)(kdx+dy)=0$

$\Bigg[{\begin{aligned}&a_2x+b_2y+c_2=0\\&kdx+dy=0\end{aligned}}\quad\Bigg[{\begin{aligned}&a_2x+b_2y+c_2=0\\&y=-kx+C\end{aligned}}$',
            'examples' => '1) Решить уравнение $(3y-7x+7)dx-(3x-7y-3)dy=0$.

Рассмотрим СЛАУ $\begin{cases}-7\alpha+3\beta+7=0\\3\alpha-7\beta-3=0\end{cases}$ 

Ее определитель 

->$\Delta=\begin{vmatrix}
   -7 & 3 \\
   3 & -7
\end{vmatrix}=40$$\not=0$<-
поэтому система имеет единственное решение. Найдем его методом Крамера:

->$\Delta_{\alpha}=\begin{vmatrix}
   -7 & 3 \\
   3 & -7
\end{vmatrix}=40\implies\alpha=\frac{\Delta_{\alpha}}{\Delta}=1$<-

->$\Delta_{\beta}=\begin{vmatrix}
   -7 & -7 \\
   3 & 3
\end{vmatrix}=0\implies\beta=\frac{\Delta_{\beta}}{\Delta}=0$<-

Делаем замену $\begin{cases}x=\varepsilon+1\implies{dx=d\varepsilon}\\y=\eta\implies{dy}=d\eta\end{cases}$

Уравнение примет вид: $(3\eta-7\varepsilon)d\varepsilon-(3\varepsilon-7\eta)d\eta=0$

Делаем замену $\varepsilon=t\eta,$ тогда $d\varepsilon=td\eta+\eta{dt}$ и

->$(3\eta-7t\eta)(td\eta+\eta{dt})-(3t\eta-7\eta)d\eta=0$<-
->$\frac{d\eta}{\eta}=\frac{7t-3}{7(1-t^2)}dt$<-
->$\frac{d\eta}{\eta}=-\frac{d(1-t^2)}{1-t^2}dt-\frac{3}{7}\frac{dt}{1-t^2}$<-
->$ln\eta=-ln(1-t^2)-\frac{3}{14}ln(\frac{1+t}{1-t})+\overline{C}$<-
->$\eta^{14}=C\frac{(1-t)^3}{(1-t^2)^{14}(1+t)^3}$<-
->$\eta^{14}=C\frac{1}{(1-\frac{\varepsilon}{\eta})^{11}(1+\frac{\varepsilon}{\eta})^{17}}$<-
->$1=C\frac{\eta^{14}}{(1-\varepsilon)^{11}(1+\varepsilon)^{17}}$<-
->$y^{14}=Cx^{28}$<-
->$y=Cx^2$<-

2) Решить уравнение $8x+4y+1+(4x+2y+1)y\'=0$

Видим что $\frac{8}{4}=\frac{4}{2}=2$. Делаем замену $4x+2y=z$, тогда $dy=\frac{dz}{2}-2dx$

->$(2z+1)dx+(z+1)(\frac{dz}{2}-2dx)$<-
->$2dx=(z+1)dz$<-
->$2x=\frac{1}{2}z^2+z+\overline{C}$<-
->$4x^2+4xy+y^2+x+y=C$<-

3) Решить уравнение $5x+3y+1+(10x+6y+2)y\'=0$

Видим что $\frac{5}{10}=\frac{3}{6}=\frac{1}{2}=\frac{1}{2}$ (Здесь последняя $\frac{1}{2}=k$), тогда:

->$(5x+3y+1)(1+2y\')=0$<-
Ответ: $\Bigg[{\begin{aligned}&5x+3y+1=0\\&y=-\frac{1}{2}x+C\end{aligned}}$
'
        ]);

        $questions = [
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    '',
                ],
                'c' => [false, true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Линейные уравнения первого порядка',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Линейным дифференциальным уравнением первого порядка** называется уравнение вида $y\'+p(x)y=q(x)\quad(1)$, где $p(x),q(x)$ - заданные непрерывные функции.

Если $q(x)=0$, то (1) называется **линейным однородным дифференциальным уравнением**, иначе **линейным неоднородным дифференциальным уравнением**.

Рассмотрим линейное однородное уравнение $y\'+p(x)y=0$ (2)

Это уравнение с разделяющимися переменными. Разделив переменные, получим: 
->$\frac{dy}{y}=-p(x)dx$<-

Проинтегрировав правую и левую части, получим:
->$ln|y|=-\int{p}(x)dx+\overline{C}$<-
->$y=Ce^{-\int{p(x)dx}}$<-

Вспомним, что делили на $y$. Решение $y=0$ является частным решением при $C=0$.

Таким образом общее решение однородного линейного дифференциального уравнения имеет вид: $y=Ce^{-\int{p(x)dx}}$

#### Свойства решений линейных однородных дифференциальных уравнений.

1) Если $y_1(x)$ - решение (2), то $Cy_1(x),\quad{C}-const$, также решение этого уравнения.
	$\blacktriangleright$ Подставим  $Cy_1(x)$ в (2): $Cy_1\'(x)+p(x)Cy_1(x)=0+0=0\implies{Cy}_1(x)$ - решение.
2) Если $y_1(x),y_2(x)$ - решения уравнения (2), то $y_1(x)+y_2(x)$, также его решение.
	$\blacktriangleright$ Подставим  $y_1(x)+y_2(x)$ в (2): $y_1\'(x)+y_2\'(x)+p(x)(y_1(x)+y_2(x))=(y_1\'(x)+py_1(x))+(y_2\'(x)+py_2(x))=0+0=0$
3) Если $y_1(x)$ частное решение (2), то $y(x)=Cy_1(x)$ - общее решение (2)
4) Если $y_1(x),y_2(x)$ - частные решения (2), то общее решение можно записать в виде: $y(x)=y_1(x)+C(y_2(x)-y_1(x))$
5) Решения линейного однородного дифференциального уравнения образуют линейное пространство.

#### Линейные неоднородные дифференциальные уравнения.

**Теорема**. Если $y_1(x)$ - частное решение неоднородного уравнения $(1)$, то общее решение этого уравнения задается формулой $y(x)=y_1(x)+y_0(x)$, где $y_0(x)$ - общее решение соответствующего однородного уравнения.

*Доказательство:* Пусть $y_1(x)$ - частное решение неоднородного уравнения $(1)$, тогда $y_1\'(x)+p(x)y_1(x)-q(x)=0$.

Общее решение данного линейного неоднородного уравнения будем искать в виде  $y(x)=y_1(x)+y_0(x)$, где $y_0(x)$ - неизвестная функция.

Подставляем последнее выражение в уравнение  $(1)$: 
->$\begin{aligned}&y_1\'(x)+y_0\'(x)+p(x)y_1(x)+p(x)y_0(x)=q(x)\iff\\&(y_1\'(x)+p(x)y_1(x)-q(x))+y_0\'(x)+p(x)y_0(x)=0\iff\\&0+y_0\'(x)+p(x)y_0(x)=0\iff\\&y_0\'(x)+p(x)y_0(x)=0\end{aligned}$<-

Таким образом  $y_0(x)$ является решением линейного однородного дифференциального уравнения.

#### Методы решения линейных неоднородных дифференциальных уравнений.

1) **Метод вариации произвольной постоянной.**

Рассмотрим линейное неоднородное уравнение $(1)$. 

Сперва найдем общее решение соответствующего ему однородного линейного уравнения $(2)\quad{y}_0(x)=Ce^{-\int{p(x)dx}}$.

Теперь будем считать, что $C=C(x)$ - неизвестная функция и будем искать решение уравнения $(1)$ в виде ${y}(x)=C(x)e^{-\int{p(x)dx}}\quad(3)$.

Подставим последнее выражение в уравнение $(1)$ и преобразуем полученное уравнение:
->$(C(x)e^{-\int{p(x)dx}})\'+p(x)C(x)e^{-\int{p(x)dx}}=q(x)$<-
->$e^{-\int{p(x)dx}}(C\'(x)-C(x)p(x)+p(x)C(x))=q(x)$<-
->$C\'(x)e^{-\int{p(x)dx}}=q(x)$<-
->$C\'(x)=q(x)e^{\int{p(x)dx}}$<-
->$C(x)=\int{q(x)e^{\int{p(x)dx}}}+C_1$<-

Теперь подставим $C(x)$ в решение $(3)$: $(\int{q(x)e^{\int{p(x)dx}}dx}+C_1)e^{-\int{p(x)dx}}$.

Поскольку $C_1$ - произвольная постоянная, а умножение и сложение, в данном случае, операции коммутативные, то для удобства можем переписать полученное решение в виде: $e^{-\int{p(x)dx}}(C+\int{q(x)e^{\int{p(x)dx}}dx})$

Таким образом получили общее решение линейного неоднородного диференциального уравнения $(1)$: $e^{-\int{p(x)dx}}(C+\int{q(x)e^{\int{p(x)dx}}dx})$, где $e^{-\int{p(x)dx}}\int{q(x)e^{\int{p(x)dx}}dx}$ - частное решение неоднородного уравнения (1), а $Ce^{-\int{p(x)dx}}$ - общее решение соответствующего однородного уравнения.

2) **Метод Бернулли**.

Будем искать решение уравнения $(1)$ в виде $y(x)=vu$, где  $v=v(x),u=u(x)$ - неизвестные функции. Подставим последнее выражение в $(1)$:
->$(vu)\'+p(x)vu=q(x)$<-
->$v\'u+vu\'+p(x)vu=q(x)$<-
->$u\'v+u(v\'+p(x)v)=q(x)\quad(4)$<-

Выберем функцию $v$, так чтобы выполнялось $v\'+p(x)v=0$.

Последнее уравнение является однородным линейным мдиффеенциальным уравнением и его общее решение имеет вид: $v=Ce^{-\int{p(x)dx}}$

Для определенности будем считать, что $C=1$. Подставим $v$ в $(4)$:
->$u\'e^{-\int{p(x)dx}}+0=q(x)$<-
->$u\'=e^{\int{p(x)dx}}q(x)$<-
->$u=\int{e^{\int{p(x)dx}}q(x)dx}+C$<-

Таким образом, общее решение неоднородного уравнения $(1)$ имеет вид:
->$y=vu=e^{-\int{p(x)dx}}(\int{e^{\int{p(x)dx}}q(x)dx}+C)$<-
где $e^{-\int{p(x)dx}}\int{e^{\int{p(x)dx}}q(x)dx}$ - частное решение неоднородного уравнения $(1)$, $Ce^{-\int{p(x)dx}}$ - общее решение соответствующего однородного уравнения.',
            'examples' => '1) Решить задачу Коши $y\'-ye^x=0,\quad{}y(0)=1$.

Уравнение является однородным, поэтому можем его решить, разделив переменые:
->$\frac{dy}{y}=e^xdx$<-
->$lny=e^x+\overline{C}$<-
->$y=Ce^{e^x}$<-

Мы делили на $y$, но решение $y=0$ получается из общего решения при $C=0$

Далее находим $C$, удовлетворяющее начальным условиям задачи Коши:
->$1=Ce^{e^0}\implies{C=}\frac{1}{e}$<-
Ответ: $y=e^{e^x-1}$

2) Решить линейное уравнение $y\'-y\tg{x}=\frac{1}{cos^3x}$ методом вариации произвольной постоянной.

Найдем общее решение однородного уравнения $y\'-y\tg{x}=0:$
->${y}_0=Ce^{\int{tgxdx}}$<-
->${y}_0=C\frac{1}{cosx}$<-

Теперь будем искать общее решение неоднородного уравнения в виде $y=\frac{C(x)}{cosx}\quad{(1)}$.

Подставляем в уравнение и решаем:
->$(\frac{C(x)}{cosx})\'-\frac{C(x)}{cosx}tgx=\frac{1}{cos^3x}$<-
->$\frac{C\'(x)cosx}{cos^2x}+\frac{sinxC(x)}{cos^2x}-\frac{C(x)sinx}{cos^2x}=\frac{1}{cos^3x}$<-
->$C\'(x)=\frac{1}{cos^2x}$<-
->$C(x)=tgx+C_1$<-

Подставляя $C(x)$ в $(1)$ получаем общее решение неоднородного уравнения: $y=\frac{\tg{x}+C_1}{cosx}$

3) Решить линейное уравнение $y\'xlnx-y=3x^3ln^2x$ методом Бернулли.

Решение будем искать в виде $y=uv$, где  $u=u(x),v=v(x)$ - неизвестные функции.

Подставим последнее выражение в уравнение и преобразуем полученное уравнение:
->$(u\'v+v\'u)xlnx-uv=3x^3ln^2x$<-
->$u\'v+u(v\'-\frac{1}{xlnx}v)=3x^2lnx\quad{(2)}$<-

Далее подберем такую функцию $v$, что будет справедливо равенство $v\'-\frac{1}{xlnx}=0$.

Решаем последнее однородное линейное уравнение:
->$v=C_1e^{\int{\frac{dx}{xlnx}}}$<-
->$v=C_1e^{\int{\frac{d\ln{x}}{lnx}}}$<-
->$v=C_1\ln{x}$<-

Полагаем, $C_1=1$ и подставляем полученную функцию в уравнение $(2)$: $u\'lnx=3x^2lnx$, тогда $u=x^3+C$

Находим искомое общее решение неоднородного уравнения $y=lnx(C+x^3)$

4) Решить уравнение $y\'=\frac{y}{2ylny+y-x}$.

Данное уравнение является однородным относительно $x$. Приведем его к нормальному виду: 
->$\frac{dy}{dx}(2ylny+y-x)=y$<-
->$2ylny+y-x=y\frac{dx}{dy}$<-
->$x\'+\frac{x}{y}=2lny+1$<-

Находим решение по формуле $x(y)=e^{-\int{p(y)dy}}(C+\int{q(y)e^{\int{p(y)dy}}dy})$:
->$x=e^{-\int{\frac{1}{y}dy}}(C+\int{(2lny+1)e^{\int{\frac{1}{y}dy}}dy})$<-
->$x=\frac{1}{y}(C+y^2\ln{y})$<-

Ответ: $x=\frac{1}{y}(C+y^2\ln{y})$'
        ]);

        $questions = [
            [
                'q' => 'Какой вид имеет решение уравнения $y\'+p(x)y=0$, где $p(x)$ - заданная непрерывная функция?',
                't' => 'test_one',
                'a' => [
                    '$Cxe^{\int{-p(x)dx}}$',
                    '$p(x)e^{\int{-p(x)dx}}$',
                    '$C(x)e^{\int{-p(x)dx}}$',
                    '$Ce^{\int{-p(x)dx}}$',
                ],
                'c' => [false, false, false, true]
            ],
            [
                'q' => 'Пусть $y_1,y_2$ - решения уравнения $y\'+p(x)y=0$, тогда какие функции будут также его решениями?',
                'a' => [
                    '$y_1y_2$',
                    '$y_1+y_2$',
                    '$y_1-y_2$',
                    '$Cy_1$',
                    '$C(y_1+y_2)$',
                    '$C_1y_1+C_2y_2$',
                ],
                'c' => [false, true, true, true, true, true]
            ],
            [
                'q' => 'В каком виде, согласно методу вариации произвольной постоянной будем искать частное решение неоднородного линейного уравнения $y\'(x)+p(x)y(x)=q(x)$?',
                't' => 'test_one',
                'a' => [
                    '$Cxe^\int{-p(x)dx}$',
                    '$C(x)e^\int{-p(x)dx}$',
                    '$Cxe^\int{p(x)dx}$',
                    '$C(x)e^\int{p(x)dx}$',
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Пусть дано уравнение $y\'(x)+p(x)y(x)=q(x)$. $y_1(x)$ - его частное решение, $y_0(x)$ - общее решение уравнения $y\'(x)+p(x)y(x)=0$. Найдите общее решение данного неоднородного уравнения.',
                't' => 'test_one',
                'a' => [
                    '$y=Cy_0(x)+C_1y_1(x)+C_2$',
                    '$y=y_0(x)+y_1(x)$',
                    '$y=y_0(x)+y_1(x)+C$',
                    '$y=y_0(x)+q(x)y_1(x)$',
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Выберите линейные дифференциальные уравнения?',
                'a' => [
                    '$y\'+2x^2y=e^{-x}$',
                    '$x^2y\'+xy+1=0$',
                    '$e^xy\'+xy=0$',
                    '$x^2y\'+y^2=0$',
                    '$dx+dy=0$',
                    '$yy\'+xy=1$',
                    '$y\'-y\tg{x}=\frac{1}{cos^3{x}}$',
                    '$y\'-y\tg{x}=\frac{1}{cos^3{y}}$',
                ],
                'c' => [true, true, true, false, true, false, true, false]
            ],
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    '',
//                ],
//                'c' => [false, true, false, false]
//            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Уравнение Бернулли. Уравнение Рикатти.',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '#### Уравнение Бернулли

Уравнение вида $y\'+p(x)y=q(x)y^m\quad{m\not=1}\quad{(1)}$ называется **уравнением Бернулли.**

Умножим обе части уравнения $(1)$ на $(1-m)y^{-m}$, получим:
->$(1-m)y\'y^{-m}+p(x)(1-m)y^{1-m}=q(x)(1-m)$<-

Теперь сделаем замену $z=y^{1-m}$, тогда $z\'=(1-m)y^{-m}y\'$ и уравнение примет вид:
->$z\'+p(x)(1-m)z=q(x)(1-m)$<-

Обозначим  $p_1(x)=p(x)(1-m),q_1(x)=q(x)(1-m)$.

Получим линейное неоднородное дифференциальное уравнение относительно $z$:
->$z\'+p_1(x)z=q_1(x)$<-

Решив это уравнение найдем $z$.  Далее возвращаемся к  $y$ и получаем $y=z^{m-1}$ - решение уравнения Бернулли.

★ Уравнение Бернулли можно решить методом Бернулли.

#### Уравнение Риккати.

Уравнение вида $y\'=P(x)y^2+Q(x)y+R(x)\quad{(2)}$ называется **уравнением Риккати**.

**Утверждение**. Если известно одно частное решение $y_1=y_1(x)$ уравнения Риккати, то с помощью замены $y=y_1+\frac{1}{z}$, где $z=z(x)$ - новая неизвестная функция, уравнение Риккати сводится к линейному.

*Доказательство:* Пусть $y_1=y_1(x)$ - частное решение уравнения $(2)$. Тогда $y_1\'-(P(x)y_1^2+Q(x)y_1+R(x))=0$.

Сделаем замену $y=y_1+\frac{1}{z}$. Тогда:
->$y_1\'-\frac{z\'}{z^2}=P(x)(y_1^2+\frac{2y_1}{z}+\frac{1}{z^2})+Q(x)(y_1+\frac{1}{z})+R(x)$<-
->$y_1\'-(P(x)y_1^2+Q(x)y_1+R(x))=\frac{z\'}{z^2}+P(x)(\frac{2y_1}{z}+\frac{1}{z^2})+\frac{1}{z}Q(x)$<-
->$z\'+P(x)(2y_1z+1)+zQ(x)=0$<-
->$z\'+(2y_1P(x)+Q(x))z=-P(x)$<-

Обозначим $p(x)=2y_1P(x)+Q(x),q(x)=-P(x)$ и получим линейное неоднородное уравнение, относительно $z$:
->$z\'+p(x)z=q(x)$ ∎<-

Продолжим решение уравнение Риккати (не будем учитывать последнюю замену):
->$z(x)=e^{-\int{(2y_1P(x)+Q(x))dx}}(C-\int{P(x)e^{\int{(2y_1P(x)+Q(x))dx}}dx})$<-
->$y=y_1+\frac{1}{z}\implies{z}=\frac{1}{y-y_1}\implies$<-
->$\frac{1}{y-y_1}=e^{-\int{(2y_1P(x)+Q(x))dx}}(C-\int{P(x)e^{\int{(2y_1P(x)+Q(x))dx}}dx})$<-
->$y=y_1+\frac{e^{\int{(2y_1P(x)+Q(x))dx}}}{C-\int{P(x)e^{\int{(2y_1P(x)+Q(x))dx}}dx}}$<-

Послучили решение дробно-линейное относительно $C$. Этим доказано следующее утверждение:

**Утверждение.** Если общее решение дифференциального уравнения есть дробно-линейная функция относительно  $C$, то это уравнение является уравнением Риккати.

**Утверждение.** Если известно 2 частных решения уравнения Риккати, то уравнение решается с помощью одной квадратуры.

*Доказательство:*

**Утверждение.** Если известны 3 частных решения уравнения Риккати, то уравнение решается без квадратур.

*Доказательство:*
',
            'examples' => '1) Решить уравнение $2y\'lnx+\frac{y}{x}=y^{-1}cosx$.

Умножим уравнение на $\frac{2y}{lnx}$: $\quad{2}yy\'+\frac{2y^2}{xlnx}=cosx$ 

Сделаем замену $z=y^2$, тогда $z\'=2yy\'$ и получим уравнение:
->$z\'+\frac{2z}{xlnx}=cosx$<-

Находим его решение: 
->$z=e^{-\int{\frac{2dx}{xlnx}}}(C+\int{cosxe^{\int{\frac{2dx}{xlnx}}}dx})$<-

Найдем интегралы:

$\int{{\frac{2dx}{xlnx}}}=2\int{{\frac{dlnx}{lnx}}}=2lnlnx+C_1$
$\int{cosxe^{2lnlnx}dx}=\int{cosxln^2xdx}=\lbrace\rbrace=$

->$z=\frac{1}{ln^2x}(C+)$<-'
        ]);

        $questions = [
            [
                'q' => 'Какой вид имеет уравнение Бернулли?',
                't' => 'test_one',
                'a' => [
                    '$y\'+p(x)y=q(x)$',
                    '$y\'+p(x)y^m=q(x)$',
                    '$y\'+p(x)y=q(x)y^m$',
                    '$y\'y^m+p(x)y=q(x)$',
                ],
                'c' => [false, false, true, false]
            ],
            [
                'q' => 'Выберите уравнения Бернулли',
                'a' => [
                    '$y\'+e^xy=1$',
                    '$y\'+cos(x)y^2=0$',
                    '$y\'+3sin(2x)y=y^2$',
                    '$y\'(x^3sin(y)+ln(y)x)=1$',
                    '$y\'+3xy=1+2x$',
                    '$(x^2+y^2+1)dy+xydx=0$',
                    '$2y\'sinx+ycosx=y^3sin^2x$',
                    '$2y\'sinx+ycosx=y^3sin^2x+1+x$'
                ],
                'c' => [false, false, true, true, false, true, true, false]
            ],
            [
                'q' => 'С помощью какой замены уравнение Риккати $y\'=P(x)y^2+Q(x)y+R(x)\quad{(2)}$, одно из частных решений которого $y_1(x)$, сводится к линейному уравнению?',
                't' => 'test_one',
                'a' => [
                    '$y=y_1+\frac{1}{z},\quad{z}=z(x)$',
                    '$y=y_1+z,\quad{z}=z(x)$',
                    '$y=y_1+\frac{1}{z^2},\quad{z}=z(x)$',
                    '$y=z+\frac{1}{y_1},\quad{z}=z(x)$',
                ],
                'c' => [true, false, false, false]
            ],
            [
                'q' => 'С помощью скольки квадратур решается уравнение Риккати, если известно 2 его частных решения',
                't' => 'task',
                'a' => '1'
            ],
            [
                'q' => 'С помощью скольки квадратур решается уравнение Риккати, если известно 3 его частных решения',
                't' => 'task',
                'a' => '0'
            ],
            [
                'q' => 'Выберите уравнения Риккати',
                'a' => [
                    '$y\'+e^xy=y^2+1$',
                    '$y\'+cos(x)y^2=0$',
                    '$y\'+3sin(2x)y=y^2$',
                    '$y\'(x^3sin(y)+ln(y)x)=1$',
                    '$y\'+3xy=1+2x+y^2sinx$',
                    '$(x^2+y^2+1)dy+xydx=0$',
                    '$2y\'sinx+ycosx=y^3sin^2x$',
                    '$2y\'sinx+ycosx=y^2sin^2x+1+x$'
                ],
                'c' => [true, false, false, false, true, false, false, true]
            ],
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Уравнения в полных дифференциалах',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '',
        ]);

        $questions = [
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    '',
                ],
                'c' => [false, true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Уравнения не разрешенные относительно производной',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '',
        ]);

        $questions = [
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    '',
                ],
                'c' => [false, true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Особые решения дифференциальных уравнений',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '',
        ]);

        $questions = [
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    '',
                ],
                'c' => [false, true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        //linear equasions
        $lesson = Lesson::Create([
            'block_id' => $blocks[1]->id,
            'active' => true,
            'name' => 'Основные понятия и определения',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Уравнение вида $a_0(x)y^{(n)}+a_1(x)y^{(n-1)}+..+a_{n-1}(x)y\'+a_n(x)y=\gamma(x)$ (*), где $a_1(x)..a_n(x), \gamma(x)$  непрерывные на (a,b) функции  называют линейным дифференциальным уравнением n-го порядка.

$\forall{x_0\in{(a,b)}}, \forall{y_0..y_{n-1}}\space\exists!$ решение  следующей задачи Коши:

$\begin{cases}
   a_o(x)y^{(n)}+a_1(x)y^{(n-1)}+..+a_{n-1}(x)y\'+a_n(x)y=\gamma(x) \\\
   y(x_0)=y_0 \\\
   y\'(x_0)=y_1 \\\
   : \\\
   y^{(n-1)}(x_0)=y_{n-1}
\end{cases}$

Приведем уравнение (*) к каноническому виду, для этого поделим обе его части на $a_0(x)$, получим:

$y^{(n)}+p_1(x)y^{(n-1)}+..+p_n(x)y=f(x), p_i(x)=\frac{a_i(x)}{a_0(x)}, f(x)=\frac{\gamma(x)}{a_0(x)}$ (1)

Пусть $L$ - линейный оператор, определяемый формулой:

$L(y)=y^{(n)}+p_1(x)y^{(n-1)}+..+p_n(x)y$

тогда уравнение (1) можно записать в виде:

$L[y]=f(x)$

Если $f(x)\equiv{0}$, то получим однородное уравнение:

$L[y]=0$ (2)

#### Свойства линейного оператора L.

1) $L[Cy]=CL[y]$, C - const
2) $L[y_1+y_2]=L[y_1]+L[y_2]$

#### Свойства линейного дифференциального уравнения.

1) Уравнение остается линейным при любой замене независимой переменной x.

2) Уравнение остается линейным при линейной замене неизвестной функции $y$, т.е. $y=a(x)z(x)+b(x)$, где $a(x),b(x),z(x)$ - непрерывно дифференцируемые n раз функции.

#### Свойства решений линейного однородного дифференциального уравнения (2)

1) Если y=y(x) - решение уравнения (2), то функция $y_1(x)=Cy(x)$, C - const, также решение уравнения (2).

2) Если $y_1(x)$ и $y_2(x)$ решения уравнения (2), то $y_1(x)+y_2(x)$, также решение уравнения (2).

3) Если $y_1(x)..y_n(x)$ - решения уравнения (2), то функция $y=C_1y_1(x)+..+C_ny_n(x)$, также решение уравнения (2).

',
            //'video' => 'defs.mp4'
        ]);

        $questions = [
            [
                'q' => 'Сколько особых решений может иметь линейное дифференциальное уравнение n-го порядка?',
                'a' => [
                    '1',
                    '0',
                    '2',
                    'Это определяется в зависимости от уравнения',
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'При какой замене независимой переменной x линейное дифференциальное уравнение n-го порядка останется линейным?',
                'a' => [
                    'При линейной',
                    'При замене на константу',
                    'При любой замене',
                    'Таких замен не существует',
                ],
                'c' => [true, true, true, false]
            ],
            [
                'q' => 'При какой замене неизвестной функции y линейное дифференциальное уравнение n-го порядка останется линейным?',
                'a' => [
                    'При линейной',
                    'При замене на константу',
                    'При любой замене',
                    'Таких замен не существует',
                ],
                'c' => [true, false, false, false]
            ],
            [
                'q' => 'Если $y(x)$ - решение линейного однородного дифференциального уравнения $L[y]=0$, то какие еще функции точно будут его решениями',
                'a' => [
                    '$y=y^2(x)$',
                    '$y=Cy(x)$, C - const',
                    '$y=t(x)y(x), t(x)$ - линейная функция',
                    '$y=\frac{1}{y(x)}$',
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Если $y_1(x),y_2(x)$ - решения линейного однородного дифференциального уравнения $L[y]=0$, то какие еще функции точно будут его решениями',
                'a' => [
                    '$y=y_1(x)+y_2(x)$',
                    '$y=y_1(x)-y_2(x)$',
                    '$y=C_1y_1(x)+C_2y_2(x),C_1,C_2$ - const',
                    '$y=\frac{y_1(x)}{y_2(x)}$',
                    '$y=y_1(x)y_2(x)$',
                ],
                'c' => [true, true, true, false,false]
            ],
            [
                'q' => 'Сколько решений задачи Коши $y(x_0)=y_0,y\'(x_0)=y\'_0,..,y^{(n-1)}(x_0)=y^{(n-1)}_0$ имеет линейное дифференциальное уравнение n-го порядка',
                'a' => [
                    '1',
                    '2',
                    '0',
                    'много',
                ],
                'c' => [true, false, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[1]->id,
            'active' => true,
            'name' => 'Понятие линейной независимости функций',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Функции $y_1(x)..y_n(x), x\in(a,b)$ называются линейно независимыми, если равенство $\alpha_1y_1(x)+..+\alpha_ny_n(x)=0$ справедливо только в случае, когда $\alpha_1=..=\alpha_n=0, \alpha_i-const, i=\overline{1,n}$, в противном случае функции $y_1(x)..y_n(x)$ называются линейно зависимыми.

Функции $y_1(x)..y_n(x), x\in(a,b)$ называются линейно зависимыми, если $\exists\space\alpha_1..\alpha_n$, не все равные нулю и такие что равество $\alpha_1y_1(x)+..+\alpha_ny_n(x)=0$ справедливо.

Пусть функции $y_1(x)..y_n(x)$ имеют производные до n-го порядка включительно, тогда определитель вида

$W(y_1..y_n)=W(x)=\begin{vmatrix}
   y_1(x) & y_2(x) & .. & y_n(x) \\\
   y_1\'(x) & y_2\'(x) & .. & y_n\'(x) \\\
   : & : & : & : \\\
   y_1^{(n-1)}(x) & y_2^{(n-1)}(x) & .. & y_n^{(n-1)}(x)
\end{vmatrix}$

называется определителем Вронского.

**Теорема.** Если функции $y_1..y_n$ линейно зависимы в интервале $(a,b)$, то $W(y_1..y_n)=0\space\forall{x\in{(a,b)}}$.

*Доказательство:*

**Теорема.** Если $y_1(x)..y_n(x)$ - линейно независимые решения уравнения $L[y]=0$, то  $W(y_1..y_n)\not=0\space\forall{x\in{(a,b)}}$.

*Доказательство:*

**Теорема.** Пусть $y_1(x)..y_n(x)$ - решения уравнения $L[y]=0$, тогда либо $W(y_1..y_n)=0$, либо $W(y_1..y_n)\not=0$, ни в одной точке интервала непрерывности коэффициентов уравнения.

**Фундаментальной системой (ФСР)** линейного однородного дифференциального уравнения n-го порядка называется система n линейно независимых решений этого уравнения.

**Теорема.** ФСР существует для любого линейного дифференциального уравнения.

Все решения линейного однородного уравнения n-го порядка образуют линейное пространство, базисом которого является любая ФСР этого уравнения.

**Теорема.** Если $y_1..y_n$ - ФСР уравнения $L[y]=0$, то его общее решение $C_1y_1+..+C_ny_n, C_1..C_n-const$.

**Теорема.** Всякие $n+1$ решений уравнения $L[y]=0$ линейно зависимы.',
            'examples' => '1) Исследовать являются ли функции $1, \sin(2x), (\sin(x)-\cos(x))^2$ линейно независимыми.

Данные функции определены $\forall{x\in{(-\infty, +\infty)}}$.

Если данная система линейно зависима то найдутся такие $a_1,a_2,a_3$, не все равные нулю, что для всех $x$ выполняется тождество $a_1+a_2\sin(2x)+a_3(\sin(x)-\cos(x))^2=0$ (1).

Упростим выражение, раскрыв скобки и приведя подобные слагаемые (1), получим:

$a_1-a_2sin(2x)+a_3=0$ или $\sin(2x)=\frac{a_1+a_3}{a_2}$

Для любых $x$, можно подобрать такие значения $a_1, a_2, a_3$, чтобы последнее равенство обращалось в верное тождество, значит функции $1, \sin(2x), (\sin(x)-\cos(x))^2$ линейно зависимы.

2) Найти определитель Вронского для системы функций $y_1=\pi,y_2=\arcsin(x),y_3=\arccos(x)$

$W[y_1,y_2,y_3]=\begin{vmatrix}
   \pi & \arcsin(x) & \arccos(x) \\\
   0 & (1-x^2)^{-\frac{1}{2}} & -(1-x^2)^{-\frac{1}{2}} \\\
   0 & x{(1-x^2)^{-\frac{3}{2}}} & -x{(1-x^2)^{-\frac{3}{2}}}
\end{vmatrix}=\pi{*}(-x(1-x^2)^{-2}+x(1-x^2)^{-2})=\pi{*0}=0$

Можем сделать вывод что данная система функций линейно зависима.
'
        ]);

        $questions = [
            [
                'q' => 'Чему равен определитель Вронского функций $y_1(x)..y_n(x)$ для $x\in{(a,b)}$, если они линейно зависимы в $(a,b)$?',
                'a' => [
                    'Все зависит от функций',
                    '0',
                    '1',
                    '$\infty$',
                    '$\frac{a+b}{2}$',
                ],
                'c' => [false, true, false, false, false]
            ],
            [
                'q' => 'Может ли определитель Вронского ФСР линейного однородного дифференциального уравнения обратиться в ноль в какой-нибудь точке задания уравнения?',
                'a' => [
                    'Да',
                    'Нет'
                ],
                'c' => [false, true]
            ],
            [
                'q' => 'Какой вид имеет общее решение однородного дифференциального уравнения, если $y_1..y_n$ - его ФСР?',
                'a' => [
                    '$y_1+..+y_n$',
                    '$C_1y_1+..+C_ny_n, C_i-const, i=\overline{1,n}$',
                    '$y_1+..+y_n+y_r, y_r-$ частное решение',
                    'Здесь нет правильного ответа',
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Если  $y_1..y_n,y_{n+1}$ - решения линейного однородного дифференциального уравнения, то какие выводы можно сделать?',
                'a' => [
                    'Одно из данных решений является линейной комбинацией других',
                    'Эти решения линейно независимы',
                    'Эти решения линейно зависимы',
                    '$y_1..y_n$ составляют ФСР',
                    'Каждое из данных решений можно получить линейной комбинацией других',
                ],
                'c' => [true, false, true, false, true]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[1]->id,
            'active' => true,
            'name' => 'Дифференциальные уравнения, допускающие понижение порядка',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Опишем некоторые виды дифференциальных уравнений, допускающих понижение порядка.

1) Уравнение вида $y^{(n)}=f(x)$. Проинтегрировав n раз получим общее решение

$y=\underbrace{\int..\int}_{\text{n}}f(x)\underbrace{dx..dx}_{\text{n}}+C_1\frac{x^{n-1}}{(n-1)!}+C_2\frac{x^{n-2}}{(n-2)!}+..+C_{n-1}x+C_n$.

2) Уравнение, не содержащее искомой функции и ее производных до порядка $k-1$ включительно.

->$F(x,y^{(k)},y^{(k+1)},..,y^{(n)}(x))=0$<-

Сделаем замену $y^{(k)}(x)=p(x)$, тогда

->$F(x, p(x),p\'(x),..,p^{(n-k)}(x))=0$<-

Далее, по возможности, определяем $p=f(x,C_1,C_2,..,C_{n-k})$, потом $k-$кратным интегрированием находим $y$ из уравнения $y^{(k)}=p$.

3) Уравнение не содержит независимой переменной.

->$F(y,y\',..,y^{(n)})=0$<-

Сделаем замену $y\'=p(y)$ и выразим все производные уравнения через $p$.

->$\begin{aligned}
	&y\'=\frac{dy}{dx}=p\\\
  &y\'\'=\frac{dp}{dx}=\frac{dp}{dy}\frac{dy}{dx}=p\frac{dp}{dy}\\\
  &y\'\'\'=\frac{d}{dx}(p\frac{dp}{dy})=\frac{d}{dy}p\frac{dp}{dy}\frac{dy}{dx}=p^2\frac{d^2p}{dy^2}+p(\frac{dp}{dy})^2\\\
  &...
\end{aligned}$<-

Получим уравнение $(n-1)$-го порядка.
Будем продолжать процесс, пока это возможно.

4) Уравнение $F(x,y,y\',..,y^{(n)})=0$, однородное относительно аргументов $y,y\',..,y^{(n)}$, т.е.

->$F(x,ty,ty\',..,ty^{(n)})=t^kF(x,y,y\',..,y^{(n)})$<-

Сделаем замену $y=e^{\int{zdx}}$, где $z$ - новая неизвестная функция $z=z(x)$

5) Уравнение, записанное в дифференциалах 

->$F(x,y,dx,dy,d^2y,..,d^{(n)}y)=0$<-

В котором $F$ однородна относительно аргументов $x,y,dx.dyd^2y,..,d^{(n)}y$.

Если считать $x,dx$ первого измерения, $y,dy,d^2(y),..$ измерения $m$. Тогда $\frac{dy}{dx}$ будет иметь измерение $m-1$, $\frac{d^2y}{dx^2}$ - измерение $m-2$ и так далее.

Для понижения порядка применяется подстановка $x=e^t,\space{}y=ue^{mt}$. Так получается дифференциальное уравнение между $u$ и $t$, не содержащее явно $t$, то есть допускающее понижение порядка.',
            'examples' => '1) Найти общее решение уравнения $y\'\'\'=e^{3x}$

Уравнение имеет вид $y^{(n)}=f(x)$, поэтому будем последовательно его интегрировать:

$y\'\'=\frac{1}{3}e^{3x}+C_1,\quad{y}\'=\frac{1}{9}e^{3x}+C_1x+C_2,\quad{y}=\frac{1}{27}e^{3x}+\frac{1}{2}C_1x^2+C_2x+C_3$.

2) Решить уравнение $y\'\'\'=\sqrt{1-(y\'\')^2}$.

Уравнение не содержит $y,y\'$, поэтому можем понизить его порядок на 2 единицы заменой $y\'\'=p$.

Тогда, уравнение примет вид: $p\'=\sqrt{1-p^2}$. Проинтегрируем его.

$\frac{dp}{dx}=\sqrt{1-p^2}\iff\frac{dp}{\sqrt{1-p^2}}=dx\iff{}arcsin(p)=x+C\iff{p=sin(x+C)}$.

Последовательно интегрируя найдем y.

$y\'\'=sin(x+C),\quad{y\'}=cos(x+C)+C_1\quad{y}=-sin(x+C)+C_1x+C_2$

3) Решить уравнение $yy\'\'=(y\')^2$

Уравнение не содержит независимой переменной $x$, тогда полагаем $y\'=p\implies{y\'\'}=p\frac{dp}{dy}$.

Получили уравнение с разделяющимися переменными $yp\frac{dp}{dy}=p^2$, проинтегрируем его.

$\frac{dp}{p}=\frac{dy}{y}\implies{p}=Cy\iff{y\'}=Cy\iff\frac{dy}{dx}=Cy\iff\frac{dy}{y}=Cdx\implies{y}=C_1e^{Cx}$

4) Решить уравнение $x^2yy\'\'=(y+xy\')^2$.

Данное уравнение однордно относительно $y,y\',y\'\'$. Его порядок понижается на единицу подстановкой $y=e^{\int{zdx}}, z=z(x)$.

Тогда $y\'=ze^{\int{zdx}},\quad{y}\'\'=e^{\int{zdx}}(z^2+z\')$, теперь подставляем в уравнение

$\begin{aligned}
&x^2e^{\int{zdx}}e^{\int{zdx}}(z^2+z\')=(e^{\int{zdx}}+xze^{\int{zdx}})^2\\\
&x^2(z^2+z\')=(1+xz)^2\\\
&x^2z\'=1+2xz{}\\\
&z\'-\frac{2}{x}z-\frac{1}{x^2}=0\\\
&z=e^{\int{\frac{2}{x}dx}}(C+\int{\frac{1}{x^2}e^{\int{-\frac{2}{x}dx}}})=x^2(C-\frac{1}{3}x^{-3})=Cx^2-\frac{1}{3x}\\\
&y=e^{\int{Cx^2-\frac{1}{3x}}}=C_1e^{\frac{1}{3}Cx^3+\frac{1}{3}ln(x)}=\sqrt[3]{x}e^{\frac{1}{3}Cx^3}
\end{aligned}$

5) Решить уравнение $x^3y\'\'=(y-xy\')^2$.

Уравнение является обобщенным обнородным, так как считая $x,y,y\',y\'\'$ величинами $1,m,m-1,m-2$ измерений соответственно и приравнивая измерения всех членов, получим $3+m-2=2m=1+2m-2$

Сделаем замену $x=e^t,y=ue^t$ и найдем $y\',y\'\'$.

$\frac{dy}{dx}=\frac{dy/dt}{dx/dt}=\frac{e^t(\frac{du}{dt}+u)}{e^t}=\frac{du}{dt}+u$
$\frac{d^2y}{dx^2}=\frac{(d/dt)(dy/dt)}{dy/dt}=\frac{d^2u/dt^2+du/dt}{e^t}$

Тогда уравнение, после приведения подобных и сокращений, примет вид:

$d^2u/dt^2+du/dt=(\frac{du}{dt})^2$

Положим $\frac{du}{dt}=p$, тогда  $\frac{d^2u}{dt^2}=p\frac{dp}{du}$, и тогда $p\frac{dp}{du}+p=p^2$

2 случая:

1) $p=0\implies{u}=C\iff{y}=Cx$
2) $\frac{dp}{du}+1=p\implies{p}=1+C_1e^u$ или $\frac{du}{dt}=1+C_1e^u\implies{u}=\ln(\frac{e^t}{C_1x+C_2})$.

Возвращаемся к $x,y$: $y=x\ln(\frac{x}{C_1x+C_2})$ - общее решение.

В ответ решение первого случая не включаем, так как оно входит в общее решение при $C_1=e^{-C},C_2=0$'
        ]);

//        $questions = [
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    '',
//                ],
//                'c' => [true, false, false, false]
//            ],
//        ];
//        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[1]->id,
            'active' => true,
            'name' => 'Решение линейных дифференциальных уравнений',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '### Линейные однородные уравнения с постоянными коэффициентами.

Рассмотрим дифференциальное уравнение $a_0y^{(n)}+a_1y^{(n-1)}+..+a_n=0$ (1), где $a_0..a_n\in{R}, a_0\not=0$

Будем искать общее решение уравнения (1)

Составим характеристическое уравнение для уравнения (1):

$a_0\lambda^n+a_1\lambda^{n-1}+...+a_{n-1}\lambda+a_n=0$ (2)

Пусть $\lambda_1..\lambda_n$ - корни уравнения (2), тогда рассмотрим виды общего решения $y_0$ уравнения (2) в зависимости от их значений

1) $\lambda_1..\lambda_n$ вещественные и различные, тогда

ФСР={ $e^{\lambda_1x},e^{\lambda_2x},...e^{\lambda_nx}$ }

$y_0=C_1e^{\lambda_1x}+C_2e^{\lambda_2x}+...+C_ne^{\lambda_nx}$

2) $\lambda_1..\lambda_n$ вещественные, но среди них имеются кратные.

Пусть $\lambda_1=\lambda_2=...=\lambda_k=\tilde{\lambda}$ - k-кратные решения уравнения (1), а все остальные n-k корней различные, тогда
ФСР={ $e^{\tilde{\lambda}x},xe^{\tilde{\lambda}x},x^2e^{\tilde{\lambda}x},..,x^{k-1}e^{\tilde{\lambda}x},e^{\lambda_{k+1}x},..,e^{\lambda_nx}$ }

$y_0=(C_1+xC_2+x^2C_3+..+x^{k-1}C_{k-1})e^{\tilde{\lambda}x}+C_{k+1}e^{\lambda_{k+1}x}+..+C_ne^{\lambda_nx}$

3) Среди $\lambda_1..\lambda_n$ есть комплексные.

Пусть например $\lambda_1=\alpha+i\beta, \lambda_2=\alpha-i\beta, \lambda_3=\gamma+i\delta, \lambda_4=\gamma-i\delta$, а остальные $n-4$ корней вещественные, тогда

ФСР={ $e^{\alpha{x}}cos(\beta{x}),e^{\alpha{x}}sin(\beta{x}),e^{\gamma{x}}cos(\delta{x}),e^{\gamma{x}}sin(\delta{x}),e^{\lambda_5x},..,e^{\lambda_nx}$ }

$y_0=e^{\alpha{x}}(C_1cos(\beta{x})+C_2sin(\beta{x}))+e^{\gamma{x}}(C_3cos(\delta{x})+C_4sin(\delta{x}))+C_5e^{\lambda_5x}+..+C_ne^{\lambda_nx}$

4) Среди $\lambda_1..\lambda_n$ имеются кратные комплексные корни

Пусть например $\lambda_1=\alpha+i\beta$ - k-кратный корень, тогда $\lambda_2=\alpha-i\beta$, также будет k-кратным корнем и тогда

ФСР={ $e^{\alpha{x}}cos(\beta{x}),e^{\alpha{x}}sin(\beta{x}),xe^{\alpha{x}}cos(\beta{x}),xe^{\alpha{x}}sin(\beta{x}),..,x^{k-1}e^{\alpha{x}}cos(\beta{x}),x^{k-1}e^{\alpha{x}}sin(\beta{x}),e^{\lambda_{2k+1}x},..,e^{\lambda_nx}$ }

$y_0=e^{\alpha{x}}(C_1+C_3x+C_5x^2+..+C_{k-1}x^{k-1})cos(\beta{x})+e^{\alpha{x}}(C_2+C_4x+C_6x^{k+2}+..+C_{2k}x^{2k})sin(\beta{x})+e^{\lambda_{2k+1}x}+..+e^{\lambda_nx}$

### Линейные неоднородные дифференциальные уравнения с постоянными коэффициентами

Рассмотрим дифференциальное уравнение $a_0y^{(n)}+a_1y^{(n-1)}+..+a_n=f(x)$ (3), где $a_0..a_n\in{R}, a_0\not=0$

**Теорема.** Общее решение неоднородного уравнения (3) равно сумме общего решения соответствующего однородного уравнения и какого-либо частного решения неоднородного уравнения.

Рассмотрим некоторые способы нахождения частного решения неоднородного уравнения.

1) Метод подбора.

Если правая часть уравнения (3) имеет вид
->$f(x)=e^{\alpha{x}}(P_l(x)cos(\beta{x})+Q_m(x)sin(\beta{x}))$,<-
где $P_l(x)$ и $Q_m(x)$ - многочлены степени l и m соответственно, то можно искать частное решение уравнения (3) в виде:

->$y_1(x)=x^se^{\alpha{x}}(\tilde{P_k}(x)cos(\beta{x})+\tilde{Q_k}(x)sin(\beta{x}))$,<-
где $k=max(m,l), \tilde{P_k}(x),\tilde{Q_k}(x)$ - многочлены от x k-й степени, а s-кратность корня $\lambda=\alpha+i\beta$ характеристического уравнения.

Покажем на схемах как действовать в некоторых случаях.
Вид схемы: $\boxed{\text{вид правой части}}\longrightarrow\begin{cases}
   \text{решение, если нет указанных корней соответствующего однородного уравнения}   \\\
   \text{решение, если есть указанные корни соответствующего однородного уравнения}
\end{cases}$

$\boxed{P_m(x)}\longrightarrow\begin{cases}
   \tilde{P_m}(x) &\text{если 0 не корень }   \\\
   x^s\tilde{P_m}(x) &\text{если 0 корень }
\end{cases}$

$\boxed{P_m(x)e^{\alpha{x}}}\longrightarrow\begin{cases}
   \tilde{P_m}(x)e^{\alpha{x}} &\text{если}\space\alpha\space\text{не корень }   \\\
   x^s\tilde{P_m}(x)e^{\alpha{x}} &\text{если}\space\alpha\space\text{корень }
\end{cases}$

$\boxed{P_n(x)cos(\beta{x})+Q_m(x)sin(\beta{x})}\longrightarrow\begin{cases}
   \tilde{P_k}(x)cos(\beta{x})+\tilde{Q_k}(x)sin(\beta{x}),k=max(m,n) &\text{если}\space\mp{i\beta}\space\text{не корни }   \\\
   x^s(\tilde{P_k}(x)cos(\beta{x})+\tilde{Q_k}(x)sin(\beta{x})),k=max(m,n) &\text{если}\space\mp{i\beta}\space\text{корни }
\end{cases}$

$\boxed{e^{\alpha{x}}(P_n(x)cos(\beta{x})+Q_m(x)sin(\beta{x}))}\longrightarrow\begin{cases}
   e^{\alpha{x}}(\tilde{P_k}(x)cos(\beta{x})+\tilde{Q_k}(x)sin(\beta{x})),k=max(m,n) &\text{если}\space\alpha\mp{i\beta}\space\text{не корни }   \\\
   x^se^{\alpha{x}}(\tilde{P_k}(x)cos(\beta{x})+\tilde{Q_k}(x)sin(\beta{x})),k=max(m,n) &\text{если}\space\alpha\mp{i\beta}\space\text{корни }
\end{cases}$

**Теорема** Если $y_j(x)$ - решение уравнения $a_0(x)y^{(n)}+a_1(x)y^{(n-1)}+..+a_n(x)y=f_k(x), k=\overline{1,m}$, то функция $y(x)=\displaystyle\sum_{k=1}^{m}{y_k(x)}$ является решением уравнения $a_0(x)y^{(n)}+a_1(x)y^{(n-1)}+..+a_n(x)y=\displaystyle\sum_{k=1}^{m}{f_k(x)}$.

### Уравнение Эйлера.

Линейные уравнения вида $C_0x^ny^{(n)}+C_1x^{n-1}y^{(n-1)}+..+C_{n-1}xy\'+C_ny=0$ (4), $C_i-const, i=\overline{1,n}$ называют **уравнениями Эйлера**.

Заменой $x=e^t$ уравнение (4) преобразуется в линейное однородное уравнение

Если в уравнениии (4) вместо x буде выражение вида $ax+b$, то такое уравнение тоже называется Эйлеровым, и тогда делаем замену $ax+b=e^t$.',
            'examples' => '### Линейные однородные дифференциальные уравнения

1) Составить линейное однородное уравнение, если его характеристическое уравнение $2\lambda^2-3\lambda-5=0$.

$2y\'\'-3y\'-5y=0$

2) Составить линейное однородное дифференциальное уравнение если его ФСР$=\lbrace{1,e^{-x}\sin(x),e^{-x}\cos(x)}\rbrace$

Найдем корни соответствующего характеристического уравнения.

Для 1: $\lambda_1=0$.

Для $e^{-x}\sin(x)$: $\lambda_2=-1-i$

Для $e^{-x}\cos(x)$: $\lambda_3=-1+i$

Тогда характеристическое уравнение: $\lambda(\lambda+1+i)(\lambda+1-i)=0$ или $\lambda^3+2\lambda^2+2\lambda$

А дифференциальное уравнение: $y^{(3)}+2y\'\'+2y\'$

3) Проинтегрировать уравнение $y^{(4)}+4y^{(3)}+10y\'\'+12y\'+5y=0$

Составим характеристическое уравнение: $\lambda^4+4\lambda^3+10\lambda^2+12\lambda+5=0$

Его корни $\lambda_1=\lambda_2=-1,\space\lambda_3=-1+2i,\space\lambda_4=-1-2i$

Тогда общее решение дифференциального уравнения:

$(C_1+C_2x)e^{-x}+(C_3\cos(2x)+C_4\sin(2x))e^{-x}$.

4) Решить задачу Коши $y\'\'\'+y\'\'=0,\space{y(0)=1},\space{y\'(0)=0},\space{y\'\'(0)=1}$

Составим соответствующее характеристическое уравнение: $\lambda^3+\lambda^2=0$.

Его корни: $\lambda_1=\lambda_2=0,\space\lambda_3=-1$.

Тогда общее решение дифференциального уравнения: $y=C_1+C_2x+C_3e^{-x}$.

Найдем $y\', y\'\'$:

$y\'=C_2-C_3e^{-x}$
$y\'\'=C_3e^{-x}$

Найдем значения $C_1,C_2,C_3$, удовлетворяющие условиям задачи Коши, для этого решим систему:
->$\begin{cases}
	C_1+C_2*0+C_3*e^0=1 \\\
  C_2-C_3*e^0=0 \\\
  C_3*e^0=1
\end{cases}\space\begin{cases}
	C_1=0 \\\
  C_2=0 \\\
  C_3=1
\end{cases}$<-

Получили решение задачи Коши: $y=e^{-x}$

### Линейные неоднородные дифференциальные уравнения

1) Решить уравнение $y\'\'+4y\'+3y=9e^{-3x}$

Найдем общее решение соответствующего однородного уравнения $y\'\'+4y\'+3y=0$ (*), получим: $y_0=C_1e^{-x}+C_2e^{-3x}$

$x=-3$ является корнем характеристического уравнения, соответствующего однородному уравнению (*), поэтому частное решение имеет вид $y_1=axe^{-3x}$.

Тогда
$\begin{aligned}
   &y_1\'=ae^{-3x}-3axe^{-3x}\\\
   &y_1\'\'=-6ae^{-3x}+9axe^{-3x}
\end{aligned}$

Найдем параметр a, подставив частное решение $y_1$ и его производные в неоднородное уравнение:

$-2ae^{-3x}=9e^{-3x}$, тогда  $a=-4,5$

Таким образом частное решение $y_1=-4,5xe^{-3x}$

И общее решение неоднородного уравнения: $y=y_0+y_1=C_1e^{-x}+C_2e^{-3x}-4,5xe^{-3x}$

2) Решить уравнение $y\'\'-5y\'+6y=10(1-x)e^{-2x}$

Найдем общее решение соответствующего однородного уравнения $y\'\'-5y\'+6y=0$ (*), получим: $y_0=C_1e^{2x}+C_2e^{3x}$

$x=-2$ не является корнем характеристического уравнения, соответствующего однородному уравнению (*), частное решение имеет вид $y_1=(ax+b)e^{-2x}$.

Тогда
$\begin{aligned}
   &y_1\'=ae^{-2x}-2(ax+b)e^{-2x}\\\
   &y_1\'\'=-4ae^{-2x}+4(ax+b)e^{-2x}
\end{aligned}$

Найдем параметры a и b, подставив частное решение $y_1$ и его производные в неоднородное уравнени и приравняв коэффициенты одинаковых элементов:

$-9ae^{-2x}+20(ax+b)e^{-2x}=10(1-x)e^{-2x}$, тогда  
$\begin{cases}
	-9a+20b=10\\\
  20a=-10
\end{cases},\space\begin{cases}
	a=-\frac{1}{2}\\\
  b=\frac{11}{40}
\end{cases}$

Таким образом частное решение $y_1=(-\frac{1}{2}x+\frac{11}{40})e^{-2x}$

И общее решение неоднородного уравнения: $y=y_0+y_1=C_1e^{2x}+C_2e^{3x}+(-\frac{1}{2}x+\frac{11}{40})e^{-2x}$

3) Решить уравнение $y\'\'+2y\'+5y=e^{-x}\sin(2x)$

Найдем общее решение соответствующего однородного уравнения $y\'\'+2y\'+5y=0$ (*), получим: $y_0=e^{-x}(C_1\cos(2x)+C_2\sin(2x))$

$x=-1-2i$ является корнем характеристического уравнения, соответствующего однородному уравнению (*), поэтому частное решение имеет вид $y_1=xe^{-x}(a\sin(2x)+b\cos(2x))$.

Тогда
$\begin{aligned}
   &y_1\'=(e^{-x}-xe^{-x})(a\sin(2x)+b\cos(2x))+2xe^{-x}(a\cos(2x)-b\sin(2x))\\\
   &y_1\'\'=(-2e^{-x}-3xe^{-x})(a\sin(2x)+b\cos(2x))+4(e^{-x}-xe^{-x})(a\cos(2x)-b\sin(2x))
\end{aligned}$

Подставим частное решение $y_1$ и его производные в неоднородное уравнение и приведем подобные слагаемые.

$4e^{-x}(a\cos(2x)-b\sin(2x))=e^{-x}\sin(2x)$

Найдем коэффициенты $a,\space{b}$, приравняв коэффициенты при одинаковых элементах (т.е. $e^{-x}\sin(2x),\space{}e^{-x}\cos(2x)$) в правой левой частях последнего равенства:

$\begin{cases}
	4a=0\\\
  -4b=1
\end{cases}\space\begin{cases}a=0\\\b=-\frac{1}{4}\end{cases}$

Таким образом частное решение $y_1=-\frac{1}{4}xe^{-x}\cos(2x)$

И общее решение неоднородного уравнения: $y=y_0+y_1=e^{-x}(C_1\cos(2x)+C_2\sin(2x))-\frac{1}{4}xe^{-x}\cos(2x)$

4) Решить уравнение $y\'\'+4y\'+3y=9e^{-3x}+cos(x)$

Здесь воспользуемся принципом суперпозиции для нахождения частного решения: Если $y_1$ и $y_2$ - частные решения уравнений $L[x]=f_1(x)$ и $L[x]=f_2(x)$, то и $y_1+y_2$ частное решение уравнения $L[x]=f_1(x)+f_2(x)$.

Уравнение $y\'\'+4y\'+3y=9e^{-3x}$ мы уже решали первым в этом пункте и нашли частное решение $y_1=-4,5xe^{-3x}$.

Найдем частное решение для  $y\'\'+4y\'+3y=cos(x)$, оно имеет вид $y_2=a\cos(x)+b\sin(x)$ и его производные: 

$\begin{aligned}
   &y_1\'=-a\sin(x)+b\cos(x)\\\
   &y_1\'\'=-a\cos(x)-b\sin(x)
\end{aligned}$

Подставляем в неоднородное уравнение $y\'\'+4y\'+3y=cos(x)$, тогда

$2a\cos(x)+2b\sin(x)-4a\sin(x)+4b\cos(x)=cos(x)$

Решаем систему:

$\begin{cases}2a+4b=1\\\2b-4a=0\end{cases}\space{}\begin{cases}a=\frac{1}{10}\\\b=\frac{1}{5}\end{cases}$

Получаем $y_2=\frac{1}{10}\cos(x)+\frac{1}{5}\sin(x)$

Таким образом общее решение уравнения $y\'\'+4y\'+3y=9e^{-3x}+cos(x)$:

$y=y_0+y_1+y_2=C_1e^{-x}+C_2e^{-3x}-4,5xe^{-3x}+0,1\cos(x)+0,2\sin(x)$

### Уравнение Эйлера

1) Решить однородное уравнение Эйлера $x^2y\'\'+3xy\'+y=0$

Сделаем замену $x=e^t$ и составим характеристическое уравнение для уравнения Эйлера.

$\lambda(\lambda-1)+3\lambda+1=0$ или $(\lambda+1)^2=0$

Его корни: $\lambda_1=\lambda_2=-1$

И тогда общее решение: $y=(C_1+C_2t)e^{-t}$

Теперь возвратимся к $x$, тогда $y=(C_1+C_2ln|x|)\frac{1}{x}$

2) Решить неоднородное уравнение Эйлера $(x+1)^3y\'\'+3(x+1)^2y\'+(x+1)y=6ln(x+1)$

Поделим уравнение на $(x+1)$: $(x+1)^2y\'\'+3(x+1)y\'+y=\frac{6}{x+1}ln(x+1)$

Сделаем замену $(x+1)=e^t$ и составим характеристическое уравнение, для соответствующего однородного уравнения:

$\lambda(\lambda-1)+3\lambda+1=0$ или $(\lambda+1)^2=0$,

Тогда общее решение однородного уравнения $y_0=(C_1+C_2t)e^{-t}$

Восстановим по характеристиескому уравнению и правой части исходного уравнения новое неоднородное уравнение: $y\'\'+2y\'+y=6te^{-t}$

$x=-1$ - двухкратный корень характеристического уравнения и поэтому частное решение последнего неоднородного уравнения  имеет вид $y_1=t^2(at+b)e^{-t}$.

Найдем $y_1\',y_1\'\'$:

$\begin{aligned}
   &y_1\'=e^{-t}(-at^3+3at^2-bt^2+2bt)\\\
   &y_1\'\'=e^{-t}(at^3-6at^2+bt^2+6at-4bt+2b)
\end{aligned}$

Тогда: $e^{-t}(at^3-6at^2+bt^2+6at-4bt+2b+2(-at^3+3at^2-bt^2+2bt)+t^2(at+b))=6te^{-t}$

Решаем систему:

$\begin{cases}
  6a=6\\\
  2b=0
\end{cases}\space\begin{cases}a=1\\\b=0\end{cases}$

Тогда частное решение: $y_1=t^3e^{-t}$ 

Возвращаясь к $x$ имеем: $y_0=(C_1+C_2ln|x+1|)\frac{1}{x+1},\space{}y_1=\frac{1}{x+1}ln^3|x+1|$

И общее решение: $y=y_0+y_1=\frac{1}{x+1}(C_1+C_2ln|x+1|+ln^3|x+1|)$

### Метод вариации произвольной постоянной (метод Лагранжа)

1) Решить уравнение $y\'\'+2y\'+2y=\frac{1}{e^x\sin(x)}$

Найдем ФСР и общее решение соответствующего однородного уравнения: 
ФСР$\space=\lbrace{e^{-x}cos(x),\space{}e^{-x}sin(x)}\rbrace$
$y_0=e^{-x}(C_1cos(x)+C_2\sin(x))$.

Будем искать решения неоднородного уравнения в виде $y=e^{-x}(C_1(x)cos(x)+C_2(x)\sin(x))$

Для определения функций $C_1(x),C_2(x)$ решим систему:

$\begin{cases}
	C_1\'(x)e^{-x}cos(x)+C_2\'(x)e^{-x}sin(x)=0\\\
  C_1\'(x)e^{-x}(-cos(x)-sin(x))+C_2\'(x)e^{-x}(-sin(x)+cos(x))=\frac{1}{e^x\sin(x)}
\end{cases}\space\begin{cases}C_1\'(x)=-1\\\C_2\'(x)=\frac{cos(x)}{sin(x)}\end{cases}\space\begin{cases}C_1(x)=-x+C_1\\\C_2(x)=-\ln|\sin(x)|+C_2\end{cases},\space{}C_1,C_2-const$

Тогда общее решение неоднородного уравнения:

$y=e^{-x}((-x+C_1)cos(x)+(-\ln|\sin(x)|+C_2)\sin(x))$'
        ]);

        $questions = [
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    '',
                ],
                'c' => [true, false, false, false]
            ],
        ];
        $this->create_questions($lesson, $questions);

        //Coding theory
        $course = Course::Create([
            'name' => 'Дискретная математика',
            'description' => 'Очень важный курс для настоящих героев!',
            'image' => 'disc_math.jpg',
            'category_id' => 1,
            'active' => true,
            'user_id' => 1
        ]);

        $names = ['Теория кодирования', 'Конечные автоматы'];
        $blocks = [];

        foreach ($names as $k => $n) {
            $blocks[] = Block::Create([
                'course_id' => $course->id,
                'name' => $n,
                'active' => true,
                'sort' => $k
            ]);
        }

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Основные понятия и определения',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Пусть по двоичному симметричному каналу связи передаются сообщения. Передаваемую информацию необходимо закодировать, для обеспечения ее безопасности, при этом нужно затратить как можно меньше кодовых символов, а также уменьшить влияние помех и шумов в канале передачи, которые влекут повреждение сообщения, превращая его в другое сообщение.

Схема системы связи:
->$\boxed{\text{источник}}\to\boxed{\text{кодер}}\to\underset{\underset{\text{шум}}{\uparrow}}{\boxed{\text{канал}}}\to\boxed{\text{декодер}}\to\boxed{\text{получатель}}$<-

Будем рассматривать кода, состоящие из 0 и 1. Так, при передаче информации, 0 может превратиться в 1, а 1 в 0. Наша задача обнаружить и устранить такие ошибки.

Пусть $E^n$ - n-мерное метрическое пространство всех двоичных векторов длины n с метрикой Хэмминга.

$E^n=\lbrace{(v_1,..,v_n)|a_i\in\lbrace{0,1}\rbrace; 1\leq{i}\leq{n}}\rbrace$

Произвольное подмножество $C\subseteq{E^n}$ пространства $E^n$ называется **двоичным кодом** (блоковым кодом или просто кодом) длины n.

Элементы кода C называются **кодовыми словами**

**Хэммингово расстояние** d(x,y) между векторами $x,y\in{E^n}$ определяется как число координат в которых эти векторы различаются.

**Кодовое расстояние** d кода C равно минимальному расстоянию Хэмминга между различными кодовыми словами

**Вес Хэмминга** $w(x)$ вектора $x\in{E^n}$ равен числу ненулевых координат x, т.е. $w(x) = d(x,0^n)$

Вместо n сообщений будем передавать по каналу связи n кодовых слов, заранеее установив биекцию между сообщениями и кодовыми словами. Затем будем декодирвать кодовые слова, для получения правильных исходных сообщений.

Будем проводить декодирование по **максимуму правдоподобия**: переданным считается кодовое слово,  отличное от принятой последовательности в наименьшем числе координат.

Код, **обнаруживающий ошибки** по принятому слову, определяет где произошла ошибка.

Код, **исправляющий ошибки** по принятому слову, определяет какое слово было передано.

**Теорема.** Для того , чтобы код исправлял любые ошибки веса $w$, минимальное расстояние должно быть не меньше $2*w+1$. Для того чтобы код обнаруживал любые ошибки веса $w$, минимальное расстояние должно быть не меньше $w+1$.

*Доказательство*: Пусть d - минимальное расстояние кода C, s - сфера, радиус которой больше 0 и меньше $w+1$, а центр находится в кодовом слове v. Если $d\geq{w+1}$, то на s нет других кодовых слов. Если же $d\geq{2*w+1}$, то от точек s, расстояние до v меньше расстояния до других кодовых слов. ',
            //'video' => 'defs.mp4'
        ]);

        $questions = [
            [
                'q' => 'Что такое хэммингово расстояние между векторами $x,y\in{E^n}$',
                'a' => [
                    'Число координат, в которых эти векторы различаются',
                    'Колличество различных линейных комбинаций этих векторов в $E^n$',
                    'Колличество нулевых координат суммы этих векторов',
                    'Число координат, в которых эти векторы не отличаются'
                ],
                'c' => [true, false, false, false]
            ],
            [
                'q' => 'Какое слово считается переданным, если следовать принципу максимума правдоподобия?',
                'a' => [
                    'Кодовое слово с минимальным весом',
                    'Содержащее наибольшее колличество нулей',
                    'Отличное от переданной последовательности в наименьшем числе компонент',
                    'Содержащее наибольшее колличество единиц'
                ],
                'c' => [false, false, true, false]
            ],
            [
                'q' => 'Что называется весом кодового слова?',
                'a' => [
                    'Его длина',
                    'Колличество его ненулевых компонент',
                    'Колличество его нулевых компонент'
                ],
                'c' => [false, true, false]
            ],
            [
                'q' => 'Число двоичных наборов длины n',
                'a' => [
                    'n',
                    '$n^2$',
                    '$n^n$',
                    '$2^n$'
                ],
                'c' => [false, false, false, true],
                'm' => 'На каждое из n мест можем поставить 0 или 1, по правилу произведения колличество таких комбинаций $\underbrace{2*..*2}_{\text{n раз}}=2^n$'
            ],
            [
                'q' => 'Число двоичных наборов длины n веса w',
                'a' => [
                    '$\binom{n}{w}$',
                    '$\frac{n}{w}$',
                    '$n*w$',
                    '$\log[w]{n}$'
                ],
                'c' => [true, false, false, false]
            ]
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    ''
//                ],
//                'c' => [false, false, false, false]
//            ],
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Алфавитное кодирование',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '',
            'examples' => '1) С помощью алгоритма Фано построить код сообщения "AAABBABBBCCBCCDDEFAD"

Посчитаем вероятность встречи каждого символа в сообщении:

A - $\frac{5}{20}$, B - $\frac{6}{20}$, C - $\frac{4}{20}$, D - $\frac{3}{20}$, E - $\frac{2}{20}$

Запишем символы в таблицу, упорядочив их по убыванию вероятности встречи в сообщении,
далее делим символы на 2 группы

$\begin{array}{|c|c|c|c|c|}
   B & 6 & 0 & 0 &\\\
   A & 5 & 0 & 1 &\\\
   C & 4 & 1 & 0 & 0 \\\
   D & 3 & 1 & 0 & 1 \\\
   E & 1 & 1 & 1 & 0\\\
   F & 1 & 1 & 1 & 1
\end{array}$

2) С помощью алгоритма Хаффмена построить код сообщения "AAABBABBBCCBCCDDEFAD"

$\begin{array}{|c|c|c|c|c|c|c|}
   B & 6 & 6 & 6 & 9 & 11 & 10 \\\
   A & 5 & 5 & 5 & 6 & 9  & 11 \\\
   C & 4 & 4 & 5 & 5 &    & 01 \\\
   D & 3 & 3 & 4 &   &    & 000 \\\
   E & 1 & 2 &   &   &    & 001\\\
   F & 1 &   &   &   &    & 0001\\\
\end{array}$'
        ]);

        $questions = [
            [
                'q' => '',
                'a' => [
                    '',
                    '',
                    '',
                    ''
                ],
                'c' => [false, false, false, false]
            ],
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Линейные коды',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Линейным [n, k]-кодом** длины n называется подмножество пространства $E^n$, являющееся линейным подпространством размерности k в $E^n$.

Пусть в кодер поступило кодовое сообщение $u=(u_1..u_k)$. Сформируем кодовое слово $x=(x_1..x_n)=(u_1..u_kx_{k+1}..x_n)$, где первая часть слова $(x_1..x_k)=(u_1..u_k)$ равна исходному сообщению - информационные символы, а вторая часть слова $(x_{k+1}..x_n)$ : $Hx^t_i=0^{n-k}, i=\overline{k+1,n}$ - проверочные символы.

#### Способы задания линейного [n,k]-кода:
- Кодовая матрица порядка $2^k\times{n}$, строки которой все кодовые слова.
- Порождающая матрица G порядка $k\times{n}$, строки которой кодовые слова, образующие базис линейного кода.
- Проверочная $(n-k, n)$-матрица $H: \forall{x=(x_1..x_n)} Hx=Hx^t=o^{n-k}$(Задает n-k проверочных уравнений)

  **Теорема**. Минимальное кодовое расстояние линейного кода равно минимальному весу его ненулевого слова.
*Доказательство*: Для любых кодовых слов $x,y\in{C}$ число координат в которых они отличаются равно колличиству единиц в слове x+y, поэтому если расстояние между некоторыми x и y равно минимальному расстоянию, то оно равно весу слова $x+y\in{C}$. $\forall x,y\in{C}$ $x-y\in{C}$, поэтому  $d = \min\limits_{x\not={y}}(d(x,y))=\min\limits_{x\not={y}}(w(x-y))=\min\limits_{z\in{C}}(w(z))$

**Порождающая матрица G** - это матрица порядка $k\times{n}$, строками которой являются кодовые слова, образующие базис линейного кода.

**Проверочная матрица H** - это матрица порядка $n-k\times{n}$, такая что для любого кодового слова $x=(x_1..x_n)$ выполняется $Hx^t=0$.

**Теорема о связи проверочной и порождающей матриц.** Если проверочная матрица H линейного кода задана в канонической форме $H=[A_{n-k,k}|E_{n-k}]$, то порождающая матрица G этого кода имеет вид $G=[E_k,A_{n-k,k}]$.

*Доказательство:* Рассмотрим кодовое слово $x=(x_1..x_kx_{k+1}..x_n)$, в котором $(x_1..x_k)$ информационные символы, а остальные символы проверочные. $(x_1..x_k)^t = E_k(u_1..u_k)^t$.

Пусть $A=\begin{pmatrix}
   a_{1,1} & a_{1,2} & ... & a_{1,k} \\\
   : & : & .. & :\\\
   a_{n-k,1} & a_{n-k,2} & ... & a_{n-k,k}
\end{pmatrix}$

Тогда из определения проверочной матрицы $Hx^t=0$, т.е.  $a_{i,1}x_1+a_{i,2}x_2+...+a_{i,k}x_k+x_{k+i}=0 , i=\overline{1,n-k}$, 
откуда $x_{k+i}=-(a_{i,1}x_1+a_{i,2}x_2+...+a_{i,k}x_k)$

Таким образом $\begin{pmatrix}
   x_{k+1} \\\
   : \\\
   x_{n}
\end{pmatrix}=-A_{n-k,k}\begin{pmatrix}
   x_1 \\\
   :\\\
   x_k
\end{pmatrix}=-A_{n-k,k}\begin{pmatrix}
   u_1 \\\
   :\\\
   u_k
\end{pmatrix}$

Получаем $x^t=\begin{pmatrix}
   E_k \\\
   :\\\
   -A_{n-k,k}
\end{pmatrix}u^t$

Тогда $x=u(E_k|-A_{n-k,k}^t)=uG$

**Теорема о столбцах проверочной матрицы.** Код длины n имеет кодовое расстояние d тогда и только тогда, когда любые d-1 столбцов его проверочной матрицы H линейно независимы и найдутся d линейно зависимых столбцов.

*Доказательство:* 

Необходимость: Пусть x вектор веса w. Ясто что $x\in{C}\iff{Hx^t=0}$, что эквивалентно линейной зависимости некоторых w столбцов матрицы H. Обозначим $i$-й столбец матрицы H через $h_i$, т.e. $H=[h_1..h_n]$ Отсюда и из равенства $Hx^t=0$ получаем $\displaystyle\sum_{i=1}^n{h_ix_i}=0$, откуда следует соотношение $h_{i_1}+..+h_{i_w}=0$. Т.к. $d=\min\limits_{x\in{C}, x\not={0}}(w(x))$, получаем линейную зависимость некоторой совокупности d столбцов матрицы H.  

Достаточность очевидна.
',
            'examples' => '1) (5, 2)-код задан порождающей матрицей $G=\begin{pmatrix}
   1 & 0 & 0 & 1 & 0 \\\
   1 & 1 & 1 & 0 & 1
\end{pmatrix}$. Найти его проверочную матрицу H, множество кодовых слов C, кодовое расстояние d.

Составим всевозможные линейные комбинации порождающих векторов $g_1=(10010)$ $g_2=(11101)$ - строк матрицы G и получим множество кодовых слов C. $\forall{x\in{C}}\space{x=\alpha_1g_1+\alpha_2g_2}, \alpha_{1,2}\in{\lbrace0,1\rbrace}$, $\lvert{C}\rvert=2^2$

$C={\lbrace(00000),(10010),(11101),(01111)\rbrace}$

Минимальное кодовое расстояние $d=\min\limits_{x\in{C}}(w(x))=2$

В коде $C$ 4 кодовых слова, поэтому можно закодировать 4 сообщения.

Закодируем сообщение u=$(01)$

$u*G=(01)*\begin{pmatrix}
   1 & 0 & 0 & 1 & 0 \\\
   1 & 1 & 1 & 0 & 1
\end{pmatrix}=(01101)$

Найдем проверочную (2,5)-матрицу H, используя условие $H*G^t=0$

$(x_1x_2x_3x_4x_5)*\begin{pmatrix}
   1 & 1 \\\
   0 & 1 \\\
   0 & 1 \\\
   1 & 0 \\\
   0 & 1
\end{pmatrix}=0$

Решим систему линейных уравнений, с $5-2=3$ свободными переменными.
$\begin{cases}
   x_1+x_4=0  \\\
   x_1+x_2+x_3+x_5=0
\end{cases}\begin{cases}
   x_4=x_2+x_3+x_5  \\\
   x_1=x_2+x_3+x_5
\end{cases}$

$(x_2+x_3+x_5,x_2,x_3,x_2+x_3+x_5,x_5)=x_2(11010)+x_3(10110)+x_5(10011)$

$H=\begin{pmatrix}
   1 & 1 & 0 & 1 & 0 \\\
   1 & 0 & 1 & 1 & 0 \\\
   1 & 0 & 0 & 1 & 1
\end{pmatrix}$

2) Линейный (8,5)-код задан проверочной матрицей $H=\begin{pmatrix}
   1 & 1 & 1 & 1 & 0 & 0 & 1 & 1 \\\
   0 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\\
   0 & 0 & 0 & 1 & 1 & 1 & 1 & 0
\end{pmatrix}$, найти порождающую матрицу $G$ и минимальное кодовое расстояние $d$

Будем искать $G$ из условия $HG^t=0$

$H=\begin{pmatrix}
   1 & 1 & 1 & 1 & 0 & 0 & 1 & 1 \\\
   0 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\\
   0 & 0 & 0 & 1 & 1 & 1 & 1 & 0
\end{pmatrix}\begin{pmatrix}
   x_1 \\\
   x_2 \\\
   x_3 \\\
   x_4 \\\
   x_5 \\\
   x_6 \\\
   x_7 \\\
   x_8
\end{pmatrix}=0$

Решим СЛАУ c 8-5=3 свободными переменными:

$\begin{cases}
	x_1 + x_2 + x_3 + x_4 + x_7 + x_8 = 0 \\\
  x_2 + x_5 + x_6 + x_7 = 0 \\\
  x_4 + x_5 + x_6 + x_7 = 0
\end{cases}$

$(x_1,x_4+x_7+x_8,x_1,x_4,x_5,x_4+x_5+x_7,x_7,x_8)=x_1(10100000)+x_4(01010100)+x_5(00001100)+x_7(01000110)+x_8(01000001)$

$G=\begin{pmatrix}
   1 & 0 & 1 & 0 & 0 & 0 & 0 & 0 \\\
   0 & 1 & 0 & 1 & 0 & 1 & 0 & 0 \\\
   0 & 0 & 0 & 0 & 1 & 1 & 0 & 0 \\\
   0 & 1 & 0 & 0 & 0 & 1 & 1 & 0 \\\
   0 & 1 & 0 & 0 & 0 & 0 & 0 & 1
\end{pmatrix}$

Видно, что $d=2$

'
            //'video' => ''
        ]);

        $questions = [
            [
                'q' => 'Какой код является линейным?',
                'a' => [
                    'Код, множество кодовых слов которого является подпространством в $E^n$.',
                    'Такой, что для любого кодового слова $(x_1..x_n)$ слово $(x_2..x_{n}x_1)$, также является кодовым.',
                    'Содержащий n линейно независимых кодовых слов.',
                    'Код, для которого минимальное расстояние Хэмминга равно 3'
                ],
                'c' => [true, false, false, false]
            ],
            [
                'q' => 'Если размерность порождающей матрицы линейного кода равна $2^k\times{n}$, то размерность его проверочной матрицы равна',
                'a' => [
                    '$2^{n-k}\times{n}$',
                    '$2^n\times{k}$',
                    '$n\times{2^k}$',
                    '$n\times{2^{n-k}}$'
                ],
                'c' => [true, false, false, false]
            ],
            [
                'q' => 'Свойства порождающей матрицы G линейного [n,k,d]-кода С',
                'a' => [
                    'Ее строками являются k линейно независимых векторов пространства $E^n$',
                    'Ее строками являются n линейно независимых векторов пространства $E^n$',
                    'Все кодовые слова кода С являются всевозможными линейными комбинациями ее строк',
                    'Матрица G порождает линейное пространство'
                ],
                'c' => [true, false, true, true]
            ],
            [
                'q' => 'Чему равно минимальное кодовое расстояние линейного [n,k]-кода С, если минимальный вес его ненулевого кодового слова равен w',
                'a' => [
                    '$\frac{2*w}{k}$',
                    '$\frac{2^w}{k}$',
                    '$\frac{n}{w}$',
                    '$w$'
                ],
                'c' => [false, false, false, true]
            ],
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Коды Хэмминга',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Двоичным **(n, k)-кодом Хэмминга** является код, заданный проверочной матрицей H, столбцами которой являютя все ненулевые векторы длины $m=\log_2{n}$

Пример (7, 4)-кода Хэмминга:

$\begin{pmatrix}
   0 & 1 & 0 & 1 & 1 & 1 & 0 \\\
   0 & 1 & 1 & 1 & 0 & 0 & 1 \\\
   1 & 1 & 1 & 0 & 1 & 0 & 0
\end{pmatrix}$

Удобно записывать проверочную матрицу кода Хэмминга, располагая ее столбцы в натуральном порядке, т.е. i-й столбец равен двоичному представлению числа i.

Рассмотрим пример (7, 4)-кода Хэмминга, со столбцами расположенными в натуральном порядке.

$\begin{pmatrix}
   0 & 0 & 0 & 1 & 1 & 1 & 1 \\\
   0 & 1 & 1 & 0 & 0 & 1 & 1 \\\
   1 & 0 & 1 & 0 & 1 & 0 & 1
\end{pmatrix}$

Очевидно, что любые два столбца матрицы H линейно независимы и найдутся три линейно зависимых столбца, следовательно по теореме о столбцах проверочной матрицы кодовое расстояние равно 3 и значит код исправляет одну ошибку

Пусть столбцы проверочной матрицы H кода Хэмминга расположены в натуральном порядке. Тогда справедлива
**Теорема.** Если произошла ошибка в i-м символе, то синдром S равен двоичному предствлению числа i.
### Расширенный код Хэмминга.

Расширенный код Хэмминга получается из (n,k)-кода Хэмминга добавлением бита проверки на четность. Кодовое расстояние при этом увеличивается на 1. Таким образом расширенный код Хэмминга является (n+1,k)-кодом с минимальным расстоянием 4, исправляющим 1 и обнаруживающим 2 ошибки.

Проверочная матрица $H\'$ расширенного кода Хэмминга может быть получена из проверочной матрицы $H$ кода Хэмминга добавлением в конец столбца из нулей, а затем приписыванием в качестве первой строки строки из единиц.

$H\'=\begin{pmatrix}
	1 & 1 & 1 & .. & 1 \\\
  &&&& 0 \\\
  &&H&& 0 \\\
  &&&& : \\\
  &&&& 0
\end{pmatrix}$

Опишем схему декодирования расширенного $(8,3)$-кода Хэмминга $C\'$ длины 8.

$H\'=\begin{pmatrix}
	 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1\\\
   0 & 0 & 0 & 1 & 1 & 1 & 1 & 0\\\
   0 & 1 & 1 & 0 & 0 & 1 & 1 & 0\\\
   1 & 0 & 1 & 0 & 1 & 0 & 1 & 0
\end{pmatrix}$

Пусть принят вектор $y\'=(y_1..y_8)$.
Параллельно рассмотрим код Хэмминга $C$ для принятого вектора $y=(y_1..y_7)$

Тогда $S_y=\begin{pmatrix}
  y_4+y_5+y_6+y_7 \\\
  y_2+y_3+y_6+y_7 \\\
  y_1+y_3+y_5+y_7
\end{pmatrix},\space{}S_{y\'}=\begin{pmatrix}
	y_1+..+y_8 \\\
  y_4+y_5+y_6+y_7 \\\
  y_2+y_3+y_6+y_7 \\\
  y_1+y_3+y_5+y_7
\end{pmatrix}=S_y=\begin{pmatrix}
	y_1+..+y_8 \\\
  S_y
\end{pmatrix}$

Пусть произошла ошибка в одной из первых семи позиций, например в 3-ей позиции, тогда $S_y=(011)$ 

Тогда $S_{y\'}=\begin{pmatrix}y_1+..+y_8\\\S_y\end{pmatrix}=\begin{pmatrix}1\\\S_y\end{pmatrix}$

Таким образом при виде синдрома $S_{y\'}=\begin{pmatrix}1\\\S_y\end{pmatrix}$ полученого вектора в расширенном коде Хэмминга имеем позицию ошибки равную двоичному представлению $S_y$

Если получаем $S_{y\'}=\begin{pmatrix}0\\\S_y\end{pmatrix}$, то в общем случае можно сказать что расширенный код Хэмминга может обнаружить 2 и более ошибок.',
            'examples' => '1) Определить положение ошибки в коде Хэмминга длины 7, если принят вектор $x=(1111000)$.

Т.к. $7=2^3-1$, то m=3 и имеем (7,3,3)-код Хэмминга.

Составим его поверочную матрицу ( ее столбцами являются все различные ненулевые векторы длины 3 ), расположив ее столбцы в натуральном порядке.

$H=\begin{pmatrix}
	0 & 0 & 0 & 1 & 1 & 1 & 1 \\\
  0 & 1 & 1 & 0 & 0 & 1 & 1 \\\
  1 & 0 & 1 & 0 & 1 & 0 & 1
\end{pmatrix}$

$x=(1111000),\space{S_x=}Hx^t=(100)^t$.

Значит ошибка произошла в 4 позиции и декодированное слово $\tilde{x}=(1110000)$ (Здесь мы просто находим представление $S_x$ в десятичной системе счисления, т.е. $100_2=4_{10}$, это справедливо за счет того что записывали столбцы матрицы $H$ в натуральном порядке)


2) Исправить или обнаружить ошибки в словах $x=(11010011)$ и $y=(11001111)$ расширенного кода Хэмминга длины 8.

Построим проверочную матрицу расширенного (8,3)-кода Хэмминга.

$H\'=\begin{pmatrix}
	 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1\\\
   0 & 0 & 0 & 1 & 1 & 1 & 1 & 0\\\
   0 & 1 & 1 & 0 & 0 & 1 & 1 & 0\\\
   1 & 0 & 1 & 0 & 1 & 0 & 1 & 0
\end{pmatrix}$

Далее найдем синдромы принятых векторов.

$S_x=H\'x=(1000)^t$, значит в x нет ошибок и $x\in{C}$

$S_y=H\'y=(0111)^t$, обнаруживаем в векторе $y$ имеется 2 или более ошибок.'
        ]);

        $questions = [
            [
                'q' => 'Сколько ошибок исправляет код Хэмминга длины 7?',
                'a' => [
                    '3',
                    '7',
                    '1',
                    '0'
                ],
                'c' => [false, false, true, false]
            ],
            [
                'q' => 'Минимальное расстояние кода Хэмминга равно',
                'a' => [
                    '4',
                    '3',
                    '2',
                    '1'
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Сколько столбцов в проверочной матрице расширенного кода Хемминга, полученного из $(7,4)$-кода Хэмминга',
                'a' => [
                    '7',
                    '8',
                    '6',
                    '9'
                ],
                'c' => [false, true, false, false]
            ],
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
        'block_id' => $blocks[0]->id,
        'active' => true,
        'name' => 'Декодирование линейных кодов',
        'resources' => json_encode(['http:://hello.ru']),
        'sort' => 1,
        'text' => 'Пусть сообщение $u=(u_1..u_k)$ закодировано кодовым словом $x=(x_1..x_n)$, которое передается по каналу связи с шумом. Принятый вектор $y=(y_1..y_n)$ может отличаться от $x$.

Рассмотрим вектор ошибок e.

$e=y-x=(e_1..e_n), e_i=\begin{cases}
	0 \text{, с вероятностью}\space{1-p} \\\
  1 \text{, с вероятностью}\space{p}
\end{cases}$, $0<p<\frac{1}{2}$

Поскольку ошибки происходят независимо с вероятнстью $p$, то для e имеем:

->$p\lbrace{e=(000..0)}\rbrace=(1-p)^n$<-
->$p\lbrace{e=(010..0)}\rbrace=p(1-p)^{n-1}$<-
->...<-
->$p\lbrace{e=v, w(v)=k}\rbrace=p^k(1-p)^{n-k}$<-

Т.к. $p<\frac{1}{2}$, то $1-p>p$, и справедливо $(1-p)^n>p(1-p)^{n-1}>..>p^k(1-p)^{n-k}$

Декодирование проводим по максимуму правдоподобия, т.е. y декодируется в близжайшее x, так e выбираем наименьшего веса

Рассмотрим линейный $(n,k)$-код $C$

Для любого вектора a множество $a+C=\lbrace{a+x|x\in{C}}\rbrace$ называется **смежным классом.**

**Утверждение 1.** Каждый смежный класс содержит $2^k$ векторов.

*Доказательство*: $|a+C|=|\lbrace{a+x|x\in{C}}\rbrace|=|C|=2^k$

**Утверждение 2.** Два вектора $a, b$ принадлежат одному и тому же смежному классу тогда и только тогда, когда $a-b\in{C}$.

*Доказательство:* 
1) Пусть $a\in{d+C}$ и $b\in{d+C}$, тогда $a=d+x_1, x_1\in{C}$ и $b=d+x_2, x_2\in{C}$, но тогда $a-b=d+x_1-d-x_2=x_1-x_2\in{C}$

2) Пусть $a-b\in{C}$, тогда $a-b=x, x\in{C}$, так получим  $a+C=b+x+C=b+C$

**Теорема.** Любые два смежных класса либо не пересекаются, либо совпадают.

*Доказательство:* Рассмотрим смежные классы $a+C$ и $b+C$. Пусть $x\in{a+C}$ и $x\in{b+C}$, тогда $x=a+x_1=b+x_2,\space{x_1, x_2}\in{C}$, но тогда $a-b=x_2-x_1\in{C}$, значит по утверждению 2 $a$ и $b$, принадлежат одному и тому же смежному классу, то есть $a+C=b+C$.

$E^n=C\lor(a^1+C)\lor..\lor{(a^m+C)}$, где $m=2^{n-k}-1$

Таким образом постранство $E^n$ можно разобрать на классы эквивалентности по линейному коду $C$.

Принятый вектор $y$ попадает в некоторый класс эквивалентности с индексом $i$, т.е. $y=a^i+C$, что означает $y=a^i+x, x\in{C}$. Если было передано слово $x\'$, то вектор ошибок $e=y-x\'=a^i+x-x\'=a^i+x\'\'\in{a^i+C}$, то есть $e$ принадлежит тому же классу смежности, что и $y$. Так все возможнные вектора ошибок принадлежат тому же классу смежности, что и $y$.

Из смежного класса, содержащего $y$ выбирается вектор $e$ наименьшего веса. Затем декодируем $y$ как $x=y-e$

Вектор минимального веса из смежного класса, называется **лидером** этого смежного класса.

Процесс декодирования можно упростить с помощью **синдромов**. Для декодирования:
1) Выписываем лидеры смежных классов и сответствующие им синдромы.
2) Получив вектор $y$, вычисляем его синдром.
3) Ищем лидер $a^i$ смежного класса с с тем же синдромом, что и у вектора $y$.
4) $x=y-a^i$ - предположительно посланный вектор $x$.

### Свойства синдрома

Пусть $S_y$ - синдром вектора $y\in{E^n}$, C - линейный $(n,k)$-код

**Утверждение 3.** Если проверочная матрица имеет $n-k$ строк, то $S_y$ является вектором длины  $n-k$

**Утверждение 4.** $S_y=0\Leftrightarrow{y\in{C}}$.

**Утверждение 5.** $S_y=\sum{h_j},\space{h_j}\in{H}$, где $j$ пробегает все индексы столбцов проверочной матрицы $H$, в которых произошли ошибки. 

*Доказательство:* Пусть получен вектор $y=x+e,\space{x}\in{C}$, тогда используя утверждение 4 имеем $S_y=Hy^t=H(x+e)^t=Hx^t+He^t=He^t$

Пусть $e_{j_1}=..=e_{j_s}=1$, значит произошли ошибки в $j_1..j_s$ координатах, и тогда имеем:
$He^t=\displaystyle\sum_{k=1}^s{e_{j_k}h_{j_k}}=h_{j_1}+..+h_{j_s},\space{h_{j_k}}$ - $k$-й столбец $H$

Таким образом $S_y=\displaystyle\sum_{k=1}^s{h_{j_k}}$, то есть синдром вектора выделяет те позиции где произошли ошибки.',
        'examples' => '1) Построить таблицу синдромов и соответствующих лидеров для $(8,3)$-кода, с порждающей матрицей $G=\begin{pmatrix}
	1 & 0 & 1 & 1 & 0 & 1 & 1 & 1 \\\
  0 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\\
  1 & 0 & 0 & 1 & 1 & 0 & 1 & 1
\end{pmatrix}$. Исправить ошибки в словах $x=(11110110)$ $y=(10010111)$ $z=(01111100)$.

Решение:

Приведем матрицу $G$ к каноническому виду $[E_3|A]$, тогда $H=[A^t|E_5]$.

$G=\begin{pmatrix}
	1 & 0 & 1 & 1 & 0 & 1 & 1 & 1 \\\
  0 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\\
  1 & 0 & 0 & 1 & 1 & 0 & 1 & 1
\end{pmatrix}\backsim\begin{pmatrix}
	1 & 0 & 1 & 1 & 0 & 1 & 1 & 1 \\\
  0 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\\
  0 & 0 & 1 & 0 & 1 & 1 & 0 & 0
\end{pmatrix}\backsim\begin{pmatrix}
	1 & 0 & 0 & 1 & 1 & 0 & 1 & 1 \\\
  0 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\\
  0 & 0 & 1 & 0 & 1 & 1 & 0 & 0
\end{pmatrix}=G\'$

$H=\begin{pmatrix}
	1 & 0 & 0 & 1 & 0 & 0 & 0 & 0 \\\
  1 & 1 & 1 & 0 & 1 & 0 & 0 & 0 \\\
  0 & 1 & 1 & 0 & 0 & 1 & 0 & 0 \\\
  1 & 0 & 0 & 0 & 0 & 0 & 1 & 0 \\\
  1 & 1 & 0 & 0 & 0 & 0 & 0 & 1
\end{pmatrix}$

Составим таблицу всевозможных сообщений и кодовых слов для исходного кода C с порождающей матрицей G и кода C\', с порождающей матрицей канонического вида G\'

$\begin{array}{|c|c|c|c|c|c|c|c|c|}
   F^3_2 & 000 & 001 & 010 & 011 & 100 & 101 & 110 & 111\\\
   C & 00000000 & 10011011 & 01001101 & 11010110 & 10110111 & 00101100 & 11111010 & 01100001 \\\
   C\' & 00000000 & 00101100 & 01001101 & 01100001 & 10011011 & 10110111 & 11010110 & 11111010
\end{array}$

Свойство проверочной матрицы $GH^t=0$ говорит о том, что проверочная матрица, будучи порождающей для дуального кода, имеет строки, ортогональные всем кодовым словам, поэтому приведение $G$ к систематическому виду $G\'$ этого свойства не нарушает.

Колличество синдромв для кода C равно $\frac{2^n}{|C|}=\frac{2^n}{2^k}=2^{n-k}=2^m=2^5=32$

Запишем таблицу синдромов $S_{e_i}$ и соответствующих им лидеров $e_i$ (Для сокращения записи будем записывать синдромы в транспонированном виде)

$\begin{array}{c|c|c|c|c|c|c|c|c|c|c|c|}
   i & e_i & S^t_{e_i} & i & e_i & S^t_{e_i} & i & e_i & S^t_{e_i} & i & e_i & S^t_{e_i}\\\
   1 & 00000000 & 00000 &  9 & 00001000 & 01000 & 17 & 00010000 & 10000 & 25 & 00011000 & 11000 \\\
   2 & 00000001 & 00001 & 10 & 00001001 & 01001 & 18 & 00010001 & 10001 & 26 & 10000010 & 11001 \\\
   3 & 00000010 & 00010 & 11 & 00001010 & 01010 & 19 & 00010010 & 10010 & 27 & 10000001 & 11010 \\\
   4 & 00000011 & 00011 & 12 & 10100000 & 01011 & 20 & 10001000 & 10011 & 28 & 10000000 & 11011 \\\
   5 & 00000100 & 00100 & 13 & 00001100 & 01100 & 21 & 00010100 & 10100 & 29 & 00110000 & 11100 \\\
   6 & 00000101 & 00101 & 14 & 01000000 & 01101 & 22 & 01001000 & 10101 & 30 & 01010000 & 11101 \\\
   7 & 00000110 & 00110 & 15 & 00100010 & 01110 & 23 & 11000000 & 10110 & 31 & 10101000& 11110 \\\
   8 & 00000111 & 00111 & 16 & 01000010 & 01111 & 24 & 10100000 & 10111 & 32 & 10000100 & 11111 \\\
\end{array}$

Теперь найдем синдромы полученных слов. Затем для исправления ошибок ищем в таблице синдромов и лидеров соответствующего лидера и принимаем его за вектор ошибок. Получим $\tilde{x}$ - декодированное слово и $u_x$ - соответствующее сообщение из таблицы кодовых слов и сообщений (но нужно искать сообщения, соответствующие исходному коду C)

a) $x=(11110110),\space{S_x}=Hx^t=(01100)^t,\space{e_x}=(00001100),\space\tilde{x}=x-e_x=(11111010),\space{u_x=(110)}$ 

b) $y=(10010111),\space{S_y}=(01100)^t,\space{e_y}=(00001100),\space\tilde{y}=y-e_y=(10011011),\space{u_y=(001)}$

c) $z=(011111100),\space{S_z}=(11101)^t,\space{e_z}=(01010000),\space\tilde{z}=z-e_z=(00101100),\space{u_z=(101)}$
'
    ]);

        $questions = [
            [
                'q' => 'Сколько единиц будет в вектое ошибок, если при передаче произошла 1 ошибка',
                'a' => [
                    'Все зависит от переданного кодового слова.',
                    '0',
                    '1',
                    'Число, равное минимальному весу принятого вектора.',
                    'Число, равное минимальному весу переданного вектора.',
                ],
                'c' => [false, false, true, false, false]
            ],
            [
                'q' => 'По каналу связи передано кодовое слово $x$. Если синдром принятого вектора $y$ равен нулевому вектору, то',
                'a' => [
                    '$y$ - нулевой вектор',
                    'вектор ошибок $e=y-x$ - нулевой вектор',
                    'все координаты вектора ошибок $e=y-x$ единицы',
                    'При передаче не поизошло ошибок',
                    'При передаче произошли ошибки',
                    '$y$ и $e=x-y$ не лежат в одном классе смежности'
                ],
                'c' => [false, true, false, true, false, false]
            ],
            [
                'q' => 'Для реализации принципа максимума правдоподобия при декодировании',
                'a' => [
                    'В качестве принятого выбирается вектор с минимальным весом',
                    'В качестве принятого выбирается вектор с максимальным весом',
                    'Выбирается вектор ошибок с минимальным весом',
                    'Выбирается вектор ошибок с максимальным весом'
                ],
                'c' => [false, false, true, false]
            ],
            [
                'q' => 'Если синдромы двух принятых векторов $u$ и $v$ равны, то можно утверждать что',
                'a' => [
                    'Ошибки произошли в одинаковых позициях',
                    'Эти векора неотличимы',
                    'Вектора ошибок этих векторов равны',
                    '$u$ и $v$ декодируются в одно и то же кодовое слово',
                    'Исходное слово для $u$ и $v$ было одним и тем же',
                    '$u$ и $v$ попадают в один и тот же смежный класс'
                ],
                'c' => [true, false, true, false, false, true]
            ],
            [
                'q' => 'Найдите длину $S_y$, если в проверочной матрице $n-k$ строк',
                'a' => [
                    '$n$',
                    '$k$',
                    '$n-k$',
                    '$n^k$'
                ],
                'c' => [false, false, true, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Коды Рида-Маллера',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Двоичный код Рида-Маллера $RM(r,m)$ порядка $r$ и длины $2^m$ определяется как множество всех векторов $f$, задаваемых булевыми функциями $f(x_1,..,x_m)$,  представимыми всеми полиномами Жегалкина, степень которых не превосходит r.

В качестве примера рассмотрим $RM(1,8)$. Число переменных $m=\log_28=3$. Так RM(1,8) состоит из всех векторов, задаваемых булевыми функциями от 3-ёх переменных.

Запишем общий вид полинома Жегалкина от трех переменных:

$a_{000}+a_{001}x_1+a_{010}x_2+a_{011}x_1x_2+a_{100}x_3+a_{101}x_1x_3+a_{110}x_2x_3+a_{111}x_1x_2x_3$

Опишем все векторы кода $RM(1,8)$ и соответствующие полиномы Жегалкина:

->$\begin{array}{c|c}
   \text{полином} & \text{кодовое слово} \\\
   0   & 00000000 \\\
   x_3 & 00001111 \\\
   x_2 & 00110011 \\\
   x_1 & 01010101 \\\
   x_3+x_2 & 00111100 \\\
   x_3+x_1 & 01011010 \\\
   x_2+x_1 & 01100110 \\\
   x_3+x_2+x_1 & 01101001 \\\
   1 & 11111111 \\\
   1+x_3 & 11110000 \\\
   1+x_2 & 11001100 \\\
   1+x_1 & 10101010 \\\
   1+x_3+x_2 & 11000011 \\\
   1+x_3+x_1 & 10100101 \\\
   1+x_2+x_1 & 10011001 \\\
   1+x_3+x_2+x_1 & 10010110 \\\
\end{array}$<-

**Теорема.** Наибольшее число ненулевых членов в полиноме Жегалкина от $m$ переменных степени $r$ равно $1+\binom{m}{1}+..+\binom{m}{r}$

*Доказательство:* Слагаемых, не содержащих переменных одно - это единица. Слагаемых, содержащих 1 переменную $\binom{m}{1}$. Слагаемых, содержащих $t$ переменных $\binom{m}{t}$. Таким образом, по правилу суммы, получаем нужное.

Значит размерность кода $RM(r,m)$ равна $1+\binom{m}{1}+..+\binom{m}{r}$ и код содержит $2^{1+\binom{m}{1}+..+\binom{m}{r}}$ кодовых слов.
'
        ]);

        $questions = [
            [
                'q' => 'Найдите минимальное расстояние кода $RM(3,8)$',
                'a' => [
                    '16',
                    '32',
                    '64',
                    '8'
                ],
                'c' => [false, true, true, false]
            ],
            [
                'q' => 'Какое наибольшее колличество ненулевых переменных может содержать полином Жегалкина от 8 переменных степени 3?',
                'a' => [
                    '32',
                    '64',
                    '103',
                    '93'
                ],
                'c' => [false, false, false, true]
            ],
            [
                'q' => 'Найдите длину $RM(3,8)$',
                'a' => [
                    '8',
                    '128',
                    '516',
                    '256'
                ],
                'c' => [false, false, true, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Мажоритарное декодирование',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => 'Множество проверочных уравнений называется **ортогональным** относительно $i$-й координаты, если переменная $x_i$ входит во все уравнения, а другие переменные входят не более чем в одно уравнение.

**Теорема.** Если для любого символа линейного кода существует не менее $d-1$ проверочных сумм, ортогональных относительно этого символа, то код имеет минимальное кодовое расстояние не меньшее, чем d.

Рассмотрим пример для линейного (7,3)-кода.

$H=\begin{pmatrix}
	1 & 1 & 0 & 1 & 0 & 0 & 0 \\\
  0 & 1 & 1 & 0 & 1 & 0 & 0 \\\
  0 & 0 & 1 & 1 & 0 & 1 & 0 \\\
  0 & 0 & 0 & 1 & 0 & 0 & 1
\end{pmatrix}$

Пусть принято кодовое слово $x=(x_1..x_7)$, тогда первой строке матрицы $H$ соответствует проверочное соотношение $x_1+x_2+x_4=0$, сумме $1, 2, 4$ строк $x_1+x_3+x_7=0$, сумме $1,2,3$ строк $x_1+x_5+x_6=0$.

Эти соотношения ортогональны относительно $x_1$

Теперь будем следовать следующему правилу: Если среди значений $x_1..x_7$ большинство составляют нули, то полагаем что $x_1=0$, иначе $x_1=1$. Это гарантирует верное решение, в случае если принятое слово содержит не более одной ошибки. Если колличество нулей равно колличеству единиц, это возможно в случае двойной ошибки, тогда сможем только обнаружить ошибки.

Если на первом шаге удается восстановить символы принятого слова, то код, для которого это возможно, называется **полностью ортогональным**

Если же на первом шаге восстанавливаются лишь некоторые комбинации из $t$ элементов принятого слова, далее комбинации из менее чем $t$ элементов и так далее до тех пор пока не будет получено множество проверочных сумм, ортогональных относительно некоторого ошибочного символа.',
            'examples' => '1) Проведем мажоритарное декодирование линейного $(8, 4)$-кода с порождающей матрицей G.

->$G=\begin{pmatrix}
	1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 \\\
  0 & 0 & 0 & 0 & 1 & 1 & 1 & 1 \\\
 	0 & 0 & 1 & 1 & 0 & 0 & 1 & 1 \\\
  0 & 1 & 0 & 1 & 0 & 1 & 0 & 1
\end{pmatrix}=\begin{pmatrix}g_0\\\g_1\\\g_2\\\g_3\end{pmatrix}$<-

Пусть $x=(a_0..a_7)$ - произвольное кодовое слово. Его можно представить в виде линейной комбинации строк матрицы $G$: $x=x_0g_0+x_1g_1+x_2g_2+x_3g_3$ или 

$x=x_0\begin{pmatrix}1\\\1\\\1\\\1\\\1\\\1\\\1\\\1\end{pmatrix}+x_1\begin{pmatrix}0\\\0\\\0\\\0\\\1\\\1\\\1\\\1\end{pmatrix}+x_2\begin{pmatrix}0\\\0\\\1\\\1\\\0\\\0\\\1\\\1\end{pmatrix}+x_3\begin{pmatrix}0\\\1\\\0\\\1\\\0\\\1\\\0\\\1\end{pmatrix}=\begin{pmatrix}
	x_0 \\\
  x_0+x_3 \\\
  x_0+x_2 \\\
  x_0+x_2+x_3 \\\
  x_0+x_1 \\\
  x_0+x_1+x_3 \\\
  x_0+x_1+x_2 \\\
  x_0+x_1+x_2+x_3
\end{pmatrix}$

Найдем проверки для $x_3$
Видим что $a_0+a_1=x_3$ (Cумма первой и второй координаты вектора $x$).
Аналогично: $a_2+a_3=x_3,\space{}a_4+a_5=x_3\space{}a_6+a_7=x_3$

Проверки для $x_2$: $a_0+a_2=x_2,\space{}a_1+a_3=x_2,\space{}a_4+a_6=x_2,\space{}a_5+a_7=x_2$

Проверки для $x_1$: $a_0+a_4=x_1,\space{}a_1+a_5=x_1,\space{}a_2+a_6=x_1,\space{}a_3+a_7=x_1$

Далее, применяя к полученным проверкам принцип большинства, найдем значения коэффициентов $x_1,x_2,x_3$

Если определить $x_1,x_2,x_3$, то ожно найти и $x_0$. Рассмотрим равенство $x\'=x-x_1g_1-x_2g_2-x_3g_3$. При безошибочной передаче $x\'=x_0g_0$, то есть у $x\'$ все координаты должны быть одинаковыми. Значит все они равны либо 1 либо. По большинству принимаем значение $x_0$.

Пусть принято слово $(01110110)$, тогда

->$\begin{matrix}
   x_1=0 & x_2=1 & x_3=1\\\
   x_1=0 & x_2=0 & x_3=0\\\
   x_1=0 & x_2=1 & x_3=1 \\\
   x_1=1 & x_2=1 & x_3=1
\end{matrix}$<-

По большинству значений находим $x_1=0,\space{}x_2=1,\space{}x_3=1$, тогда $x\'=(00010000)$ следовательно $x_0=0$, $x=g_2+g_3=(01100110)$
Рассмотрим мажоритарное декодирование кода Рида-Маллера второго порядка $RM(2,4)$

Составим порождающую матрицу:

$G=\begin{pmatrix}
1&1&1&1&1&1&1&1&1&1&1&1&1&1&1&1 \\\
0&0&0&0&0&0&0&0&1&1&1&1&1&1&1&1 \\\
0&0&0&0&1&1&1&1&0&0&0&0&1&1&1&1 \\\
0&0&1&1&0&0&1&1&0&0&1&1&0&0&1&1 \\\
0&1&0&1&0&1&0&1&0&1&0&1&0&1&0&1 \\\
0&0&0&0&0&0&0&0&0&0&0&0&1&1&1&1 \\\
0&0&0&0&0&0&0&0&0&0&1&1&0&0&1&1 \\\
0&0&0&0&0&0&0&0&0&1&0&1&0&1&0&1 \\\
0&0&0&0&0&0&1&1&0&0&0&0&0&0&1&1 \\\
0&0&0&0&0&1&0&1&0&0&0&0&0&1&0&1 \\\
0&0&0&1&0&0&0&1&0&0&0&1&0&0&0&1 \\\
\end{pmatrix}=\begin{pmatrix}g_0\\\g_1\\\g_2\\\g_3\\\g_4\\\g_1g_2\\\g_1g_3\\\g_1g_4\\\g_2g_3\\\g_2g_4\\\g_3g_4\end{pmatrix}$

Если $x$ - кодовое слово, то $x=a_0g_0+a_1g_1+a_2g_2+a_3g_3+a_4g_4+a_{12}g_1g_2+a_{13}g_1g_3+a_{14}g_1g_4+a_{23}g_2g_3+a_{24}g_2g_4+a_{34}g_3g_4$

Сначала определим правильные значения для коэффициентов $a_{ij}$, для кажого из которых имеется по 4 проверочных соотношения. Например для $a_{34}$ имеем:

->$\begin{matrix}a_{34}=x_0+x_1+x_2+x_3\\\a_{34}=x_4+x_5+x_6+x_7\\\a_{34}=x_8+x_9+x_{10}+x_{11}\\\a_{34}=x_{12}+x_{13}+x_{14}+x_{15}\end{matrix}$<-

После определения этих коэффициентов находим вектор $x\'=x-a_{12}g_1g_2-..-a_{34}g_3g_4$. Поскольку при безошибочной передаче $x\'=a_0g_0+a_1g_1+a_2g_2+a_3g_3+a_4g_4$, то проверочные соотношения для коэффициентов $a_1,a_2,a_3,a_4$ получаем из элементов вектора $x\'$ с помощью матрицы $G$. Например $a_4=x_0\'+x_1\'$ одно из проверочных соотношений для $a_4$, где $x_i\'$ - элементы вектора $x\'$.

И на третьем шаге определяем коэффициент $a_0$
'
        ]);

        $questions = [
            [
                'q' => 'Как называется множество проверочных уравнений относилельно $i$-й координаты, если переменная $x_i$ входит во все уравнения, а другие переменные входят не более чем в одно уравнение?',
                'a' => [
                    'Изометрическое',
                    'Ортогональное',
                    'Параллельное',
                    'Симметрическое'
                ],
                'c' => [false, true, false, false]
            ],
            [
                'q' => 'Какое самое малое кодовое расстояние может быть у кода, в котором для любого символа существует не менее $d-1$ проверочная сумма?',
                'a' => [
                    '$d-1$',
                    '$d+1$',
                    '$d$',
                    '$2*d$'
                ],
                'c' => [false, false, true, false]
            ],
            [
                'q' => 'Ортогональны ли суммы $a_0+a_1+a_2, a_0+a_2+a_3, a_0+a_3+a_4$',
                'a' => [
                    'Да',
                    'Нет',
                    'Невозможно определить'
                ],
                'c' => [false, true, true]
            ],
            [
                'q' => 'Ортогональны ли суммы $a_0+a_1+a_2, a_0+a_3+a_4, a_0+a_a_5+a_6$',
                'a' => [
                    'Да',
                    'Нет',
                    'Невозможно определить'
                ],
                'c' => [true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
        'block_id' => $blocks[1]->id,
        'active' => true,
        'name' => 'Введение',
        'resources' => json_encode(['http:://hello.ru']),
        'sort' => 1,
        'text' => '**Абстрактный автомат** - дискретный преобразователь информации, представляющий собой множество из шести элементов.

$A=\lbrace{X,Y,Q,\delta,\lambda,q_0}\rbrace$

$A$ - абстрактный автомат
$X$ - множество входных символов (входной алфавит автомата)
$Y$ - множество выходных символов (выходной алфавит автомата)
$Q$ - множество состояний автомата
$\delta: X\times{Q}\to{Y}$ - функция выходов
$\lambda: X\times{Q}\to{Q}$ - функция переходов автомата из одного состояния в другое
$q_0$ - начальное состояние автомата

Автомат называется **конечным**, если множества $X,Y,Q$ конечны.

Выходной символ зависит от входного символа и от состояния автомата.

Автомат функционирует в дискретном времени, то есть элементы описания автомата заданы только в заданные дискретные моменты.

Можно рассматривать автомат как преобразователь входных слов в выходные с сохранением длины слов.',

    ]);

        $questions = [

        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[1]->id,
            'active' => true,
            'name' => 'Конечные автоматы с выходом',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Конечный автомат с выходом (КАВ)** $A=\lbrace{X,Y,Q,\delta,\lambda,q_0}\rbrace$

$X$ - множество входных символов (входной алфавит автомата)
$Y$ - множество выходных символов (выходной алфавит автомата)
$Q$ - множество состояний автомата
$\delta: X\times{Q}\to{Y}$ - функция выходов
$\lambda: X\times{Q}\to{Q}$ - функция переходов автомата из одного состояния в другое
$q_0$ - начальное состояние автомата

В результате работы конечного автомата $A$ бесконечная последовательность $\alpha^{\infty}\in{X}^{\infty}$ преобразуется в бесконечную последовательность $\beta^{\infty}\in{Y}^{\infty}$

Таким образом конечный автомат $A$ определяет отображение $f_A:{X}^{\infty}\to{Y}^{\infty}$

$f:{X}^{\infty}\to{Y}^{\infty}$ - **автоматная**, если $\exists{A}=\lbrace{X,Y,Q,\delta,\lambda,q_0}\rbrace:f_A=f$

### Задание конечных автоматов.

1) **Канонические уравнения**

$\forall\alpha^{\infty}={x(1)x(2)..x(t)..}\in{X}^{\infty}\space\exists{f_A(\alpha^\infty)=\beta^\infty=y(1)y(2)..y(t)..}:$

->$\begin{cases}
	y(t)=\lambda(x(t),q(t-1))\\\
  q(t)=\delta(x(t),q(t-1))\\\
  q(0)=q_0
\end{cases}$<-

2) **Диаграмма Мура** - ориентированный граф с пометками $D_A=(V_A,E_A)$,

$V_A=Q$
$E_A=\lbrace{(q,\delta(x,q))|x\in{X},q\in{Q}}\rbrace$.
Каждому ребру $(q,\delta(x,q))$ преписана метка $x(\lambda(x,q))$.
Вершина, соответствующая начальному состоянию $q_0\in{V}$ помечена звездочкой.

Пусть $X=Y=\lbrace{0,1}\rbrace$.

Определим **функцию единичной задержки** $f:{X}^{\infty}\to{Y}^{\infty}:\space\forall{x^\infty=x(1)x(2)..x(t)..}\space{f(x^\infty)}=y^\infty=0x(1)x(2)..x(t-1)..$

$f$ задерживает элемент входной последовательности на один такт работы и затем записывает его в выходную последовательность. На первом такте работы она выдает ноль.

$f$ осуществляется конечным автоматом $A=\lbrace{X,Y,Q=\lbrace{0,1}\rbrace,\delta,\lambda,q_0=0}\rbrace$, где состояние $q=0$ означает что в предыдущий момент времени на входе был 0, а $q=1$ означает что в предыдущий момент времени на входе была 1.

Найдем таблицы функций $\delta,\lambda$ и канонические уравнения

$\begin{array}{|c|c|c|c|}
   x\in{X} & q\in{Q} & \delta & \lambda \\\
   0 & 0 & 0 & 0\\\
   0 & 1 & 1 & 0\\\
   1 & 0 & 0 & 1\\\
   1 & 1 & 1 & 1
\end{array},\space\begin{cases}
	y(t)=q(t-1)\\\
  q(t)=x(t)\\\
  q(0)=0
\end{cases}$

Таким образом $f$ - автоматная функция.
 
### Периодические последовательности

Последовательность $x^\infty=x(1)x(2)..x(t)..\in{X^\infty}$ называется **периодической** с периодом $T$ и предпериодом $T_0$, если $\forall{t}>T_0:\space{x}(t+T)=x(t)$.

$x^\infty=\textcolor{#00ff00}{x_{j_1}..x_{j_{T0}}}x_{i_1}..x_{i_{T}}x_{i_1}..x_{i_{T}}..=\textcolor{#00ff00}{x_{j_1}..x_{j_{T0}}}(x_{i_1}..x_{i_{T}})^\infty$, где

$\textcolor{#00ff00}{x_{j_1}..x_{j_{T0}}}\in{X^*}$ - предпериод,
$x_{i_1}..x_{i_{T}}\in{X^*}$ - период,
$x_{j_1}..x_{j_{T0}}x_{i_1}..x_{i_{T}}\in{X}$

**Теорема о периодических последовательностях.** Пусть $f:X^\infty\to{Y}^\infty$ - автоматная функция, задаваемая конечным инициальным автоматом с $r$ состояниями, тогда если $x^\infty=x(1)x(2)..x(t)..\in{X}^\infty$ периодическая последовательность с периодом $T$, то соответствующая ей выходная последовательность $f(x^\infty)=y^infty=y(1)y(2)..y(t)..\in{Y}^\infty$ тоже периодическая последовательность с периодом $T\'\leq{r}T$

*Доказательство*

Пусть предпеиод приодической последовательности $x^\infty\in{X}^\infty$ равен $T_0$.

Рассмотрим следующие $r+1$ совпадающие значения этой последовательности. 

$x(T_0+1)=x(T_O+1+T)=x(T_0+1+2T)=..=x(T_0+1+rT)$.

Пусть при считывании этой последовательности конечный автомат $A$ находился соответственно в состояниях $q^{(0)},q^{(1)},..,q^{(r)}\in{Q}$.

Но в множестве $Q$ всего $r$ различных элементов, значит $\exists\space{i,j}:\space{q}^{(i)}=q^{(j)}$.

Значит при $t=T_0+1+iT$ и при $t=T_0+1+jT$ конечный автомат $A$ будет считывать один и тот же символ: $x(T_0+1+iT)=x(T_0+1+jT)\in{A}$, находиться в одном и том же состоянии $q^{(i})=q^{(j)}=q\in{Q}$, и бесконечные входные последовательности, которые автомат прочитает, начиная с этих двух элементов $x(T_0+1+iT),x(T_0+1+jT)\in{A}$ и из состояния $q$ будут совпадать и следовательно выходные последовательности для них также будут совпадать.

Значит конечная последовательность $\gamma=y(T_O+1+iT)y(T_0+1+iT+1)..y((T_0+1+jT)-1))$ есть период выходной последовательности $y^\infty$, соответствующей входной последовательности $x^\infty$. Период последовательности $y^\infty$ равен $T\'=(j-i)T\leq{rT}$',

        ]);

        $questions = [

        ];
        $this->create_questions($lesson, $questions);

        //OS
        $course = Course::Create([
            'name' => 'Операционные системы',
            'description' => 'Очень важный курс для настоящих героев!',
            'image' => 'os.jpg',
            'category_id' => 1,
            'active' => true,
            'user_id' => 1
        ]);

        $names = ['Операционная система'];
        $blocks = [];

        foreach ($names as $k => $n) {
            $blocks[] = Block::Create([
                'course_id' => $course->id,
                'name' => $n,
                'active' => true,
                'sort' => $k
            ]);
        }

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Задачи операционной системы',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Операционная система** составляет основу программного обеспечения ПК. Операционная система представляет комплекс системных и служебных программных средств, который обеспечивает взаимодействие пользователя с компьютером и выполнение всех других программ.

С одной стороны, она опирается на базовое программное обеспечение ПК, входящее в его систему BIOS, с другой стороны, она сама является опорой для программного обеспечения более высоких уровней – прикладных и большинства служебных приложений.

Для того чтобы компьютер мог работать, на его жестком диске должна быть установлена (записана) операционная система. При включении компьютера она считывается с дисковой памяти и размещается в ОЗУ. Этот процесс называется загрузкой операционной системы.

Операционные системы различаются особенностями реализации алгоритмов управления ресурсами компьютера, областями использования.

1) количеству одновременно работающих пользователей: однопользовательские, многопользовательские;
+ **Однопользовательские** могут обслуживать только одного пользователя в один момент времени
+ **Многопользовательские** поддерживают одновременную работу на ЭВМ нескольких пользователей за различными терминалами, отличаются наличием средств защиты информации каждого пользователя от несанкционированного доступа других пользователей
2) числу процессов, одновременно выполняемых под управлением системы: однозадачные, многозадачные;
+ **Однозадачные** выполняют функцию предоставления пользователю виртуальной машины, делая более простым и удобным процесс взаимодействия пользователя с компьютером. Однозадачные ОС включают средства управления периферийными устройствами, средства управления файлами, средства общения с пользователем.
+ **Многозадачные** в дополнение ко всем функциям однозадачных ОС, они также управляют разделением совместно используемых ресурсов, таких как процессор, оперативная память, файлы и внешние устройства.
3) количеству поддерживаемых процессоров: однопроцессорные, многопроцессорные;
+ **Однопроцессорные** поддерживают режим распределения ресурсов только одного процессора
+ **Многопроцессорные** поддерживают режим распределения ресурсов нескольких процессоров для решения той или иной задачи
4) разрядности кода ОС: 8-разрядные, 16-разрядные, 32-разрядные, 64-разрядные;
5) типу интерфейса: командные (текстовые) и объектно-ориентированные (графические);
+ **Командные** с командным интерфейсом
+ **Графические** с графическим интерфейсом
6) типу доступа пользователя к ЭВМ: с пакетной обработкой, с разделением времени, реального времени;
+ **Пакетной обработки** в которых из программ, подлежащих выполнению, формируется пакет (набор) заданий, вводимых в ЭВМ и выполняемых в порядке очередности с возможным учетом приоритетности;
+ **Разделения времени** обеспечивающих одновременный диалоговый (интерактивный) режим доступа к ЭВМ нескольких пользователей на разных терминалах, которым по очереди выделяются ресурсы машины, что координируется операционной системой в соответствии с заданной дисциплиной обслуживания;
+ **Реального времени** обеспечивающих определенное гарантированное время ответа машины на запрос пользователя с управлением им какими-либо внешними но отношению к ЭВМ событиями, процессами или объектами.
7) типу использования ресурсов: сетевые, локальные.
+ **Сетевые** предназначены для управления ресурсами компьютеров, объединенных в сеть с целью совместного использования данных, и предоставляют мощные средства разграничения доступа к данным в рамках обеспечения их целостности и сохранности, а также множество сервисных возможностей по использованию сетевых ресурсов.
+ **Локальные** могут использоваться на любом персональном компьютере, а также на отдельном компьютере, подключенном к сети в качестве рабочей станции или клиента.
',
            //'video' => 'defs.mp4'
        ]);

        $questions = [
            [
                'q' => 'Какая система составлят основу программного обеспечения персонального компьютера?',
                't' => 'task',
                'a' => 'операционная'
            ],
            [
                'q' => 'Как называется процесс считывания операционной системы с дисковой памяти и ее размещения на жестком диске?',
                't' => 'task',
                'a' => 'загрузка'
            ],
            [
                'q' => 'Какие OS предназначены для управления ресурсами ПК, включенными в сеть',
                't' => 'task',
                'a' => 'сетевые'
            ],
            [
                'q' => 'Какие OS гарантируют время ответа машины на запрос пользователя?',
                't' => 'task',
                'a' => 'реального времени'
            ],
            [
                'q' => 'Какая программа обеспечивает возможность работы пользователя с консольной операционной системой?',
                't' => 'task',
                'a' => 'терминал'
            ],
            [
                'q' => 'Какие категории присутствуют в классификации операционных систем в зависимости от типа системы?',
                'a' => [
                    'Процессорной обработки',
                    'Пакетной обработки',
                    'Реального времени',
                    'Многозадачные',
                    'Сетевые',
                    'Процедурной обработки',
                    'Функциональной обработки',
                    'Разделения времени'
                ],
                'c' => [false, true, true, false, false, false, false, true]
            ]
        ];
        $this->create_questions($lesson, $questions);
        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Процессы и потоки',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Процесс** - экземпляр программы во время выполнения, независимый объект, которому выделены системные ресурсы. Каждый процесс обладает своим адресным пространством: один процесс не может получить доступ к команам, переменным и структурам данных другого процесса.Если же процесс хочет получить доступ к чужим ресурсам, необходимо использовать межпроцессовое взаимодействие (конвейеры, файлы, каналы связи между компьютерами и многое другое).

Процесс характеризуется некоторой совокупностью набора использующихся команд, ассоциированных с ним ресурсов (выделенная память, адресное пространство, стек, используемые файлы и так далее), и текущего момента его выполнения (значения регистров, прграммный счетчик, состояние стека и значения переменных), находящейся под управлением ОС.


#### Состояния процесса:
- Готов (ready)
- Исполняется (active)
- Ожидает (wait)

#### Модель процессов:

+ Всякий новый процесс попадает в состояние готовности
+ ОС выбирает один из готовых процессов и переводит его в состояние выполнения.
+ Выйти из состояния выполнения процесс может по трем причинам:
	- ОС прекпащает его деятельность
  - Не может продолжать работ до поисхождения какого-либо события (Переход в состояние ожидания)
  - В результате возникновения прерывания (Возврат в состояние готовности)

#### Операции над процессами:
- Создание - завершение
- Приостановка - запуск
- Блокировка - разблокировка

#### Управление процессами

Процесс в ОС представляется как некоторая структура данных, содержащая 
- состояние процесса
- программный счетчик (т.е. адрес команды, котораядолна быть выполнена для него следующей)
- содержимое регистров
- данные, необходимые для планирования исполнения процесса и управления памятью
- учетные данные
- сведения об устройствах ввода-вывода

**Поток** - вид процесса, последовательность команд, выполняемых процессором. Способ распараллеливания вычислений.

В любом процессе есть хотя бы один поток. Множество потоков разделяют адресное пространство своего процесса.

### Планирование процессов

**Планирование** - обеспечение поочередного доступа процессов к одному процессору.
Планирование может быть динамическим (на основе анализа текущей ситуации) и статическим (если потоки запускаются на основе заранее разработанного распределения).

Планирование процессов осуществляет специальный компонент операционной системы - **планировщик**, согласно **алгоритму планирования**.

Планирование необходимо в следующих ситуациях:
1) При создании процесса.
2) При завершении процесса.
3) При блокировке процесса на операции ввода/вывода, семафоре и т.д.
4) При прерывании ввода/вывода.

**Алгоритм планирования без переключений (неприоритетный)** - не требует прерывание по аппаратному таймеру, процесс останавливается только когда блокируется или завершает работу.

**Алгоритм планирования с переключениями (приоритетный)** - требует прерывание по аппаратному таймеру, процесс работает только определенный период времени, после этого он останавливается по таймеру, чтобы передать управление планировщику.

#### Задачи алгоритмов планирования:

1. Для всех систем:
   * Справедливость - каждому процессу справедливую долю процессорного времени.
   * Контроль над выполнением принятой политики.
   * Баланс - поддержка занятости всех частей системы.
2. Системы пакетной обработки:
   - Пропускная способность - колличество задач в час.
   - Оборотное время - минимизация времени на ожидание обслуживания и обработку задач.
   - Использование процесса - чтобы процессор был всегда занят.
3. Интерактивные системы.
   - Время отклика - быстрая реакция на запросы.
   - Соразмерность - выполнение ожиданий пользователя.
4. Системы реального времени.
   - Окончание работы к сроку - предотвращение потери данных.
   - Предсказуемость - предотвращение деградации качества в мультимедийных системах

### Прерывания.
**Прерывание** - это приостановка центральным процессором выполнения приоритетной программы для обработки события, которое поступило от одного из устройств.

**Контроллер прерываний** - микросхема, которая выполняет обработку запросов на прерывание от различных устройств.

#### Механизм прерываний.
- В случае возникновения события, теребующего вмешательства ЦП, устройство, которое вызвало данное событие, посылает запрос на прерывание.
- Запрос на прерывание обрабатывается контроллером прерываний.
- Сигнал, после обработки контроллером прерываний передается процессору. Процессор приостанавливает выполнение основной программы и обрабатывает данное прерывание. После обработки, процессор продолжает выполнять основную программу.
- В случае возникновения прерывания во время обработки процессором другого, выполнение прерываний будет согласно их приоритету.

Каждому прерыванию присваивают число, называемое **номером прерывания**. Некоторые из номеров прерывания зарезервированы за определенными устройствами, некоторые можно освободить и использовать для других устройств. Обозначается прерывание символом IRQ.

#### Типы прерываний.

1. **Немаскируемые прерывания** (Non-Maskable Interrupt, NMI). Прерывания с высшим приоритетом. Прерывания данного типа обрабатываются в случаях возникновения аварийных ситуаций, вызванных ошибками в работе памяти или других устройств.

2. **Маскируемые** (аппаратные) прерывания. В эту группу относят прерывания от периферийных устройств. Обрабатываются контроллером прерываний. (сигнал от таймера, звуковой карты, нажатие клавиши клавиатуры)

3. **Программные прерывания**. Это прерывание, которое может осуществить программа с помощью специальной инструкции. Для обработки программных прерываний не используется контроллер прерываний (они реализуются программным способом).

### Взаимоблокировка процессов.

**Блокировка процессов** - состояние системы, при котором 2 или более процессов не могут продолжать свое выполнение из-за отсутствия необходимых для этого ресурсов.

Взаимоблокировка возникает в многозадачных многопользовательских ОС. Чем большее количество различных задач выполняется на машине, и чем меньше ее ресурсы, тем больше вероятность возникновение взаимоблокировок. Количество блокированных процессов быстро возрастает до тех пор, пока в системе не останется не одного работающего процесса. ОС практически полностью прекращает полезное функционирование а ЭВМ простаивает.

Блокировки процессов возникают либо сами собой, либо инициализируются внешними атаками. Это вызвано перегрузкой работы соответствующей ЭВМ, когда в условии ограниченности ресурсов (хотя эти ресурсы у майнфреймов могут быть очень большими: несколько сотен дисков, десятки терабайт ОП и т.д. ) ЭВМ должна одновременно обработать очень большое количество запросов.

Способы выхода из блокировок:

- Снятие оператором выполняющихся процессов до тех пор, пока не исчезнет взаимоблокировка.
- Перезагрузка системы.
- Рестарт системы с контрольной точки (полное состояние ЭВМ запомненное на внешнем носители).

Способы борьбы с взаимоблокировками:
- Полное игнорирование угроз возникновения взаимоблокировок.
- Построение такой ОС, которая просчитывает на несколько шагов вперед ситуацию которая может возникнуть в ЭВМ после запуска определенного процесса.

Игнорирование угрозы взаимоблокировок приводит к тому, что ОС плохо контролирует последовательность выделения ресурсов отдельным процессам, поэтому с течением времени неизбежно возникновение блокировки.

### Семафоры.

Семафоры традиционно использовались для синхронизации процессов, обращающихся к разделяемым данным. Каждый процесс должен исключать для всех других процессов возможность одновременно с ним обращаться к этим данным (взаимоисключение). Когда процесс обращается к разделяемым данным, говорят, что он находится в своем критическом участке.

Для решения задачи синхронизации необходимо, в случае если один процесс находится в критическом участке, исключить возможность вхождения для других процессов в их критические участки. Хотя бы для тех, которые обращаются к тем же самым разделяемым данным. Когда процесс выходит из своего критического участка, то одному из остальных процессов, ожидающих входа в свои критические участки, должно быть разрешено продолжить работу.

Процессы должны как можно быстрее проходить свои критические участки и не должны в этот период блокироваться. Если процесс, находящийся в своем критическом участке, завершается (возможно, аварийно), то необходимо, чтобы некоторый другой процесс мог отменить режим взаимоисключения, предоставляя другим процессам возможность продолжить выполнение и войти в свои критические участки.

**Семафор** - это защищенная переменная, значение которой можно опрашивать и менять только при помощи специальных операций wait и signal и операции инициализации init. Двоичные семафоры могут принимать только значения 0 и 1. Семафоры со счетчиками могут принимать неотрицательные целые значения.

Операции над семафором:
1) **wait(s):** `if s > 0 then s := s - 1 else wait(s)`
2) **signal(s):** `if` (есть процессы, ожидающие на s) `then` (разрешить одному из них продолжить работу) `else s := s + 1`

Операции неделимы. Критические участки процессов обрамляются ими. Если одновременно несколько процессов попытаются выполнить операцию wait(s), то это будет разрешено только одному из них, остальные будут ждать.

Семафоры со счетчиками используются, если некоторые ресурс выделяется из множества идентичных ресурсов. При инициализации такого семафора в его счетчике указывается число элементов множества. Каждая операция wait(s) уменьшает значения счетчика семафора s на 1, показывая, что некоторому процессу выделен один ресурс из множества. Каждая операция signal(s) увеличивает значение счетчика на 1, показывая, что процесс возвратил ресурс во множество. Если операция wait(s) выполняется, когда в счетчике содержится нуль (больше нет ресурсов), то соответствующий процесс ожидает, пока во множество не будет возвращен освободившийся ресурс, то есть пока не будет выполнена операция signal.

Пример: Представим множество потоков ожидающих исполнения, выстроенных в очередь, как множество человек, пришедших на ужин в ресторан. Семафор - официант. Он выдает блюдо только тогда когда шеф-повар подаст ему сигнал готовности.

Каждый поток сам решает когда встать в эту очередь, для этого он вызывает метод wait().

Семафор или официант может сделать только одну операцию signal(), при вызове которой он отпускает из очереди один из ожидающих потоков, в нашем случае приносит блюдо. (Не обязательно, что обслужен будет поток, вызвавший операцию wait (сделавший заказ) раньше других, блюда например готовятся разное время)

Если в очереди нет потоков, то когда какой-либо из потоков вызовет wait, семафор сразу же пропустит этот поток без блокировки. А если signal вызовут 3 раза подряд при пустой очереди, то семафор разрешит следующим трем потокам, вызвавшим wait, пройти очередь без ожидания.

Семафор должен подсчитывать количество вызовов signal при пустой очереди. Поэтому каждый семафор снабжен внутренним счетчиком, значение которого увеличивается при вызове signal и уменьшается при вызове wait.

Независимо от того в какой очередности вызываются wait и signal, результат всегда будет одним и тем же: семафор всегда пропустит на исполнение одинаковое количество потоков, и в очереди всегда останется одно и то же количество ожидающих.
',

        ]);

        $questions = [
            [
                'q' => 'Состояние, в которое процесс переходит если его приостанавливают',
                't' => 'task',
                'a' => 'ожидание'
            ],// потом будем писать через запятую и проверять все
            [
                'q' => 'Защищенная переменная для синхронизации',
                't' => 'task',
                'a' => 'семафор'
            ],
            [
                'q' => 'Состояние системы, при котором несколько потоков не могут подолжать работу из-за отсутствия необходимых ресурсов',
                't' => 'task',
                'a' => 'блокировка'
            ],
            [
                'q' => 'приостановление работы программы для обработки внешнего события',
                't' => 'task',
                'a' => 'прерывание'
            ],
            [
                'q' => 'часть ОС, отвечающая за планирование процессов',
                't' => 'task',
                'a' => 'планировщик'
            ],
            [
                'q' => 'Планирование, на основе анализа текущей ситуации',
                't' => 'task',
                'a' => 'динамическое'
            ],
            [
                'q' => 'Прерывания, происходящие в результате ошибок вычислений',
                't' => 'task',
                'a' => 'внутренние'
            ],
            [
                'q' => 'Сколько процессов могут работать в одном адресном пространстве?',
                'a' => [
                    '1',
                    '2',
                    '0',
                    'много',
                    'в зависимости от разрядности процессора'
                ],
                'c' => [true, false, false, false, false]
            ],
            [
                'q' => 'Способы выполнения прерываний',
                'a' => [
                    'Векторный',
                    'Линейный',
                    'Внешний',
                    'Опрашиваемый'
                ],
                'c' => [true, false, false, true]
            ],
            [
                'q' => 'Состояния процесса',
                'a' => [
                    'Ожидание',
                    'Выполнение',
                    'Готовность',
                    'Остановка'
                ],
                'c' => [true, true, true, false]
            ],
            [
                'q' => 'Прерывания, для которых не используется контроллер прерываний',
                'a' => [
                    'маскируемые',
                    'программные',
                    'немаскируемые',
                    'неуправляемые'
                ],
                'c' => [false, true, false, false]
            ],
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    ''
//                ],
//                'c' => [true, false, false, true]
//            ],
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    ''
//                ],
//                'c' => [true, false, false, true]
//            ],
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    ''
//                ],
//                'c' => [true, false, false, true]
//            ],
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    ''
//                ],
//                'c' => [true, false, false, true]
//            ],
//            [
//                'q' => '',
//                'a' => [
//                    '',
//                    '',
//                    '',
//                    ''
//                ],
//                'c' => [true, false, false, true]
//            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Файловая система',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**Файловая система** - это часть операционной системы, назначение которой состоит в том, чтобы обеспечить пользователю удобный интерфейс при работе с данными, хранящимися на диске, и обеспечить совместное использование файлов несколькими пользователями и процессами.

В широком смысле понятие "файловая система" включает:
- совокупность всех файлов на диске,
- наборы структур данных, используемых для управления файлами (каталоги файлов, дескрипторы файлов, таблицы распределения свободного и занятого пространства на диске и другие)
- комплекс системных программных средств, реализующих управление файлами, в частности: создание, уничтожение, чтение, запись, именование, поиск и другие операции над файлами.

#### Функции файловой системы:
- размещение и упорядочивание на носителе данных в виде файлов;
- определение максимально поддерживаемого объема данных на носителе информации;
- создание, чтение и удаление файлов;
- назначение и изменение атрибутов файлов (размер, время создания и изменения, владелец и создатель файла, доступен только для чтения, скрытый файл, временный файл, архивный, исполняемый, максимальная длина имени файла и т.п.);
- определение структуры файла;
- поиск файлов;
- организация каталогов для логической организации файлов;
- защита файлов при системном сбое;
- защита файлов от несанкционированного доступа и изменения их содержимого.

#### Организация информации в файловой системе.

Информация, записываемая на жесткий диск или любой другой носитель, размещается в нем на основе кластерной организации. Кластер представляют собой своего рода ячейку определенного размера, в которую помещается весь файл или его часть.

Если файл имеет размер кластера, то он занимает только один кластер. Если размер файла превышает размер ячейки, то он размещается в нескольких ячейках-кластерах. Причем свободные кластеры могут находиться не рядом с другом, а быть разбросанными по физической поверхности диска. Такая система позволяет наиболее рационально использовать место при хранении файлов. Задача файловой системы  — разложить файл при записи по свободным кластерам оптимальным образом, а также собрать его при чтении и выдать программе или операционной системе.

#### Виды файловых систем:
- NTFS
- FAT32
- Ext3
- Ext4
- NFS+
- UDF
- ISO9660

#### Файловые системы NTFS и FAT32
NTFS и FAT32 - наиболее популярные файловые системы.

Сейчас FAT32 активно вытесняется более продвинутой системой NTFS по причине ее большей надежности к сохранности и защите данных. К тому же последние версии ОС Windows просто не дадут себя установить, если раздел жесткого диска будет отформатирован в FAT32. Программа установки потребует отформатировать раздел в NTFS.

Файловая система NTFS поддерживает работу с дисками объемом в сотни терабайт и размером одного файла до 16 терабайт.

Файловая система FAT32 поддерживает диски до 8 терабайт и размер одного файла до 4Гб. Чаще всего данную ФС используют на флешках и картах памяти. Именно в FAT32 форматируют внешние накопители на заводе.
 
#### Файлы

**Файл** - определённый объем структурированной информации, объединенной общим смыслом и собранной в одной оболочке.

**Свойства файла:**
- имя
- расширение
- размер
- время (создания, последнего изменения, последнего доступа)
- права доступа
- атрибуты - Дополнительные метки, указывающие на определенные особенности данного файла
   - Только чтение — файл запрещено изменять
   - Скрытый — не отображается в Проводнике, если в настройках не указано отображать скрытые файлы
   - Системный — критический для работы операционной системы
   - Архивный — был изменен после резервного копирования или не был скопирован программой резервного копирования',

        ]);

        $questions = [
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                'a' => [
                    '1',
                    '2',
                    '0'
                ],
                'c' => [true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Массивы дисков',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '**RAID** — это дисковый массив из нескольких устройств, - жестких дисков. Служит для повышения надёжности хранения данных и/или для повышения скорости чтения/записи информации (или и то и другое).

Связка из дисков занимается либо ускорением работы либо повышением безопасности данных в зависимости от выбора текущей конфигурации рейда(ов). Разные типы этих конфигураций отмечаются разными номерами: 1, 2, 3, 4 и выполняют разные функции.

Рейды ощутимо удобнее и эффективнее использования одного диска в системе.

Например, в случае построения 0-вой версии получается ощутимый прирост производительности. А жесткий диск сегодня есть узкий канал в быстродействии системы. Жесткие диски сегодня растут только в объеме. Их скорость оборота головки давно замерла на отметке в 7200, кэш тоже не то чтобы растет, архитектура остается почти прежней.

Физически RAID-массив представляет собой от двух до n-го количества жестких дисков подключенных к материнской плате поддерживающей возможность создания RAID (или к соответствующему контроллеру, что реже (контроллеры обычно используются на серверах в силу повышенной надежности и производительности)).

После создания рейда в системе ничего особого не появляется. Вся разница в работе с рейдом заключается только в небольшой настройке в биосе, которая организует рейд и в использовании драйвера.

RAID массивов существует несколько видов:

- RAID 0: дисковый массив для увеличения скорости\записи.
- RAID 1: зеркальный дисковый массив.
- RAID 2: матрица с поразрядным расслоением
- RAID 3: аппаратное обнаружение ошибок и четность
- RAID 4: внутригрупповой параллелизм
- RAID 5: четность вращения для распараллеливания записей
- RAID 6: Двумерная четность для обеспечения большей надежности

RAID 0 («Striping») — используется от двух до четырех жестких дисков, которые совместно обрабатывают информацию, что повышает производительность. Информация на рейде такого типа, разбивается на блоки данных и записывается на несколько дисков поочередно.

Один блок данных на один диск, другой блок данных на другой и тд. Таким образом существенно повышается производительность (от количества дисков зависит кратность увеличения производительности, т.е 4 диска будут бегать шустрее чем два), но страдает безопасность данных на всём массиве. При выходе из строя любого из входящих в такой RAID винчестеров (т.е. жестких дисков) практически полностью и безвозвратно пропадает вся информация.

Почему? Дело в том, что каждый файл состоит из некоторого количества байт.. каждый из которых несет в себе информацию. Но в RAID 0 массиве байты одного файла могут быть расположены на нескольких дисках. Соответственно при "смерти" одного из дисков потеряется произвольное количество байтов файла и восстановить его будет просто невозможно. Но файл то не один.

При использовании такого рейд-массива рекомендуется делать постоянные бэкапы ценной информации на внешний носитель.

RAID 1 (Mirroring — «зеркало») В отличии от RAID 0 получается, что Вы как бы "теряете" объем второго жесткого диска (он используется для записи на него полной (байт в байт) копии первого жесткого диска в то время как RAID 0 это место полностью доступно).

Преимущество же, как Вы уже поняли, в том, что он имеет высокую надежность, т.е все работает (и все данные существуют в природе, а не исчезают с выходом из строя одного из устройств) до тех пор пока функционирует хотя бы один диск, т.е. если даже грубо вывести из строя один диск - Вы не потеряете ни байта информации, т.к. второй является чистой копией первого и заменяет его при выходе из строя. Такой рейд частенько используется в серверах в силу безумнейшей жизнеспособности данных, что важно.

Производительность обеспечивается даже меньше чем при использовании одного диска без рейдов. 

RAID 2 зарезервирован для массивов, которые применяют код Хемминга. Принцип работы примерно такой: данные записываются на соответствующие устройства так же, как и в RAID 0, т.е они разбиваются на небольшие блоки по всем дискам, которые участвуют в хранении информации.

Оставшиеся же  (специально выделенные под оное) диски хранят коды коррекции ошибок, по которым в случае выхода какого-либо винчестера из строя возможно восстановление информации. Тобишь в массивах такого типа диски делятся на две группы — для данных и для кодов коррекции ошибок

Например, у Вас два диска являют собой место под систему и файлы, а еще два будут полностью отведены под данные коррекции на случай выхода из строя первых двух дисков. По сути это что-то вроде нулевого рейда, только с возможностью хоть как-то спасти информацию в случае сбоев одного из винчестеров. Редкостно затратно, - четыре диска вместо двух с весьма спорным приростом безопасности.',

        ]);

        $questions = [
            [
                'q' => 'Что такое RAID двумя словами?',
                't' => 'task',
                'a' => 'дисковой массив'
            ],
            [
                'q' => 'Для чего нужен RAID-массив?',
                'a' => [
                    'Установка ОС',
                    'Ускорение работы',
                    'Повышение надежности',
                    'Загрузка ОС'
                ],
                'c' => [false, true, true, false]
            ]
        ];
        $this->create_questions($lesson, $questions);

        $lesson = Lesson::Create([
            'block_id' => $blocks[0]->id,
            'active' => true,
            'name' => 'Виртуализация аппаратной части',
            'resources' => json_encode(['http:://hello.ru']),
            'sort' => 1,
            'text' => '',

        ]);

        $questions = [
            [
                'q' => '',
                't' => 'task',
                'a' => ''
            ],
            [
                'q' => '',
                'a' => [
                    '1',
                    '2',
                    '0'
                ],
                'c' => [true, false, false]
            ]
        ];
        $this->create_questions($lesson, $questions);
//        $lesson = Lesson::Create([
//            'block_id' => $blocks[0]->id,
//            'active' => true,
//            'name' => '',
//            'resources' => json_encode(['http:://hello.ru']),
//            'sort' => 1,
//            'text' => '',
//
//        ]);
//
//        $questions = [
//            [
//                'q' => '',
//                't' => 'task',
//                'a' => ''
//            ],
//            [
//                'q' => '',
//                'a' => [
//                    '1',
//                    '2',
//                    '0'
//                ],
//                'c' => [true, false, false]
//            ]
//        ];
//        $this->create_questions($lesson, $questions);
    }

    private function create_questions($lesson, $questions)
    {
        foreach ($questions as $i => $q) {
            $qc = $lesson->questions()->create([
                'text' => $q['q'],
                'type' => array_has($q, 't') ? $q['t'] : 'test',
                'answer' => array_has($q, 't') && $q['t'] === 'task' ? $q['a'] : json_encode(array_map(function ($a, $c) {
                    return [
                        'text' => $a,
                        'correct' => $c
                    ];
                }, $q['a'], $q['c'])),
                'points' => 5,
                'sort' => $i,
                'active' => true,
                'lesson_id' => $lesson->id
            ]);
            if (array_has($q, 'm')) {
                $qc->comment = $q['m'];
                $qc->save();
            }
        }
    }
}
